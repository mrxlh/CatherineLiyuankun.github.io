<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>text-overflow: ellipsis;什么时候可能不生效？</title>
    <url>/text-overflow-ellipsis-%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%94%9F%E6%95%88%EF%BC%9F.html</url>
    <content><![CDATA[<h1 id="ⅰ-text-overflow-ellipsis-什么时候可能不生效？">Ⅰ text-overflow: ellipsis;什么时候可能不生效？</h1>
<hr>
<ol>
<li>
<p>设置在width有效的元素上，并且设置必要的width。</p>
<ul>
<li>块级元素（block level element） width、height 属性默认有效.[example 1]</li>
<li>内联元素（inline element 有的人也叫它行内元素）width、height 属性无效。[example 2]<br>
可以通过改变display，使得width、height属性有效。</li>
</ul>
 <figure class="highlight"><table><tr><td class="code"><pre><span class="line">display: block; //inline-block;</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>要想这两个属性起真正的作用，需要配合：</p>
 <figure class="highlight"><table><tr><td class="code"><pre><span class="line">overflow: hidden; // 超出文本的部分不显示</span><br><span class="line">white-space: nowrap; // 强制文本在一行显示</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>在table内td除了满足前两个条件之外。要在table的样式里定义一个属性 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[example 3] </span><br><span class="line"></span><br><span class="line">```html</span><br><span class="line">&lt;!-- example 1 --&gt;</span><br><span class="line">&lt;div class=&quot;divTitle&quot;&gt;div text-overflow: ellipsis;什么时候可能不生效？&lt;/div&gt;</span><br><span class="line">&lt;!-- example 2 --&gt;</span><br><span class="line">&lt;span class=&quot;spanTitle&quot;&gt;span text-overflow: ellipsis;什么时候可能不生效？&lt;/span&gt;</span><br><span class="line">&lt;!-- example 3 --&gt;</span><br><span class="line">&lt;table&gt;</span><br><span class="line">  &lt;tr&gt;</span><br><span class="line">    &lt;td  class=&quot;box  ellipsis&quot;&gt;</span><br><span class="line">      &lt;span&gt;Here is some long content that doesn&apos;t fit.Here is some long content that doesn&apos;t fit&lt;/span&gt;A</span><br><span class="line">    &lt;/td&gt;</span><br><span class="line">  &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure></p>
 <figure class="highlight css"><table><tr><td class="code"><pre><span class="line">// example 1</span><br><span class="line"><span class="selector-class">.divTitle</span> &#123;</span><br><span class="line">    width: 10px; // or other value</span><br><span class="line">    <span class="selector-tag">text-overflow</span>: <span class="selector-tag">ellipsis</span>;</span><br><span class="line">    <span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>;</span><br><span class="line">    <span class="selector-tag">white-space</span>: <span class="selector-tag">nowrap</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// example 2</span><br><span class="line"><span class="selector-class">.spanTitle</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// example 3</span><br><span class="line"><span class="selector-tag">table</span> &#123; </span><br><span class="line">    <span class="attribute">table-layout</span>:fixed; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">td</span> &#123; </span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis; </span><br><span class="line">    <span class="attribute">white-space</span>: nowrap; </span><br><span class="line">    <span class="attribute">overflow</span>: hidden; </span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10px</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<hr>
<h1 id="ⅱ-text-overflow的不同样式">Ⅱ text-overflow的不同样式</h1>
<hr>
<ul>
<li>clip<br>
这个关键字的意思是&quot;在内容区域的极限处截断文本&quot;，因此在字符的中间可能会发生截断。为了能在两个字符过渡处截断，你必须使用一个空字符串值 (’’)(To truncate at the transition between two characters, the empty string value (’’) must be used.)。此为默认值。</li>
<li>ellipsis<br>
这个关键字的意思是“用一个省略号 (’…’, U+2026 HORIZONTAL ELLIPSIS)来表示被截断的文本”。这个省略号被添加在内容区域中，因此会减少显示的文本。如果空间太小到连省略号都容纳不下，那么这个省略号也会被截断。</li>
<li>string 自定义字符串<br>
string用来表示被截断的文本。字符串内容将被添加在内容区域中，所以会减少显示出的文本。如果空间太小到连省略号都容纳不下，那么这个字符串也会被截断。但是这个属性在很多浏览器中都不支持，要谨慎使用。</li>
</ul>
<p>最有意思的是，如果结合使用</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">direction:</span> rtl</span><br></pre></td></tr></table></figure>
<p>可以指定截断文本是在文末还是在开头。</p>
<p>CodePen <a href="https://codepen.io/catherineliyuankun/pen/gjzLav" target="_blank" rel="noopener">text-overflow例子链接</a><br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/text-overflow-ellipsis-%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%94%9F%E6%95%88%EF%BC%9F/text-overflow%E7%9A%84%E4%B8%8D%E5%90%8C%E6%A0%B7%E5%BC%8F.png" alt="text-overflow的不同样式例子图片"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"overflow-visible"</span>&gt;</span>overflow-visible Lorem ipsum dolor sit amet, consectetur adipisicing elit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"overflow-clip"</span>&gt;</span>overflow-clip Lorem ipsum dolor sit amet, consectetur adipisicing elit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"overflow-ellipsis"</span>&gt;</span>overflow-ellipsis Lorem ipsum dolor sit amet, consectetur adipisicing elit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"overflow-ellipsis first"</span>&gt;</span>overflow-ellipsis first Lorem ipsum dolor sit amet, consectetur adipisicing elit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"overflow-string"</span>&gt;</span>overflow-string Lorem ipsum dolor sit amet, consectetur adipisicing elit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<pre><code><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">5px</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* BOTH of the following are required for text-overflow */</span></span><br><span class="line"><span class="attribute">white-space</span>: nowrap;</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.overflow-visible</span> &#123;</span><br><span class="line"><span class="attribute">white-space</span>: initial;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.overflow-clip</span> &#123;</span><br><span class="line"><span class="attribute">text-overflow</span>: clip;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.overflow-ellipsis</span> &#123;</span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.overflow-ellipsis</span><span class="selector-class">.first</span> &#123;</span><br><span class="line"><span class="attribute">direction</span>: rtl;</span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.overflow-string</span> &#123;</span><br><span class="line"><span class="comment">/* Not supported in most browsers, </span></span><br><span class="line"><span class="comment">    see the 'Browser compatibility' section below */</span></span><br><span class="line"><span class="attribute">text-overflow</span>: <span class="string">" [..]"</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</code></pre>
<hr>
<h1 id="ⅲ-文首截断？">Ⅲ …文首截断？</h1>
<hr>
<p>我们一般都会在文末截断…<br>
如果我确实有文首截断的需求呢？怎么实现？</p>
<h2 id="方法一">方法一</h2>
<p>结合使用direction可以指定截断文本是在文末还是在开头。</p>
<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">direction: rtl; // <span class="built_in">at</span> <span class="built_in">right</span> <span class="keyword">end</span> 文末</span><br></pre></td></tr></table></figure>
<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">direction: ltr // <span class="built_in">at</span> <span class="built_in">left</span> <span class="keyword">end</span> 开头</span><br></pre></td></tr></table></figure>
<p>例子：<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/text-overflow-ellipsis-%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%94%9F%E6%95%88%EF%BC%9F/reverse%20ellipsis%201.png" alt="文首截断例子图片"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"overflow-ellipsis"</span>&gt;</span>overflow-ellipsis Lorem ipsum dolor sit amet, consectetur adipisicing elit.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"overflow-ellipsis first"</span>&gt;</span>overflow-ellipsis first Lorem ipsum dolor sit</span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">5px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* BOTH of the following are required for text-overflow */</span></span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.overflow-ellipsis</span> &#123;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.overflow-ellipsis</span><span class="selector-class">.first</span> &#123;</span><br><span class="line">  <span class="attribute">direction</span>: rtl;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="方法二">方法二</h2>
<p>如果方法一在有些浏览器中不支持的话，可以使用：before添加content来实现。</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/text-overflow-ellipsis-%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%94%9F%E6%95%88%EF%BC%9F/reverse%20ellipsis%202.png" alt="文首截断2例子图片"></p>
<p>CodePen <a href="https://codepen.io/catherineliyuankun/pen/ajGpvV" target="_blank" rel="noopener">reverse ellipsis例子链接</a></p>
<hr>
<h1 id="ⅳ-多行显示并在最后一行截断文字？">Ⅳ 多行显示并在最后一行截断文字？</h1>
<hr>
<p>上面我们为了能够截断文字，使用了</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">white-space: nowrap; // 强制文本在一行显示</span><br></pre></td></tr></table></figure>
<p>如果我确实有多行显示的需求呢？怎么实现？</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/text-overflow-ellipsis-%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E5%8F%AF%E8%83%BD%E4%B8%8D%E7%94%9F%E6%95%88%EF%BC%9F/multiline%20ellipsis.png" alt="multiline例子图片"></p>
<p>CodePen <a href="https://codepen.io/catherineliyuankun/pen/poJzLKx" target="_blank" rel="noopener">multiline例子链接</a></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"block-with-text"</span>&gt;</span>The Hitch Hiker's Guide to the Galaxy has a few things to say on the subject of towels. A towel, it says, is about the most massivelyuseful thing an interstellar hitch hiker can have. Partly it has great practical value - you can wrap it around you for warmth as you bound across the cold moons of  Jaglan Beta.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"block-with-text"</span>&gt;</span>Small text, less then one row. Without dottes.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"block-with-text"</span> <span class="attr">style</span>=<span class="string">"width: 250px;"</span>&gt;</span>2.5 lines example: A towel is about the most massively useful thing an interstellar hitch hiker can have<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">400</span> <span class="number">14px</span>/<span class="number">1.2em</span> sans-serif; </span><br><span class="line">  <span class="attribute">background</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* mixin for multiline */</span></span><br><span class="line">@<span class="keyword">mixin</span> multiLineEllipsis($lineHeight: <span class="number">1.2em</span>, $lineCount: <span class="number">1</span>, $bgColor: white)&#123;</span><br><span class="line">  <span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>;</span><br><span class="line">  <span class="selector-tag">position</span>: <span class="selector-tag">relative</span>;</span><br><span class="line">  line-height: $lineHeight;</span><br><span class="line">  max-height: $lineHeight * $lineCount; </span><br><span class="line">  <span class="selector-tag">text-align</span>: <span class="selector-tag">justify</span>;</span><br><span class="line">  <span class="selector-tag">margin-right</span>: <span class="selector-tag">-1em</span>;</span><br><span class="line">  <span class="selector-tag">padding-right</span>: 1<span class="selector-tag">em</span>;</span><br><span class="line">  &amp;<span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">'...'</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;<span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">0.2em</span>;</span><br><span class="line">    <span class="attribute">background</span>: $bgColor;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.block-with-text</span> &#123;</span><br><span class="line">  @include multiLineEllipsis($lineHeight: 1.2em, $lineCount: 2, $bgColor: white);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="the-reference-link">The reference link</h1>
<p><a href="http://hackingui.com/front-end/a-pure-css-solution-for-multiline-text-truncation/" target="_blank" rel="noopener">Pure CSS for multiline truncation with ellipsis</a><br>
<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/text-overflow" target="_blank" rel="noopener">MDN text-overflow</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>Flexbox</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript比较两个Array数组/Object的内容是否相同</title>
    <url>/JavaScript%E6%AF%94%E8%BE%83%E4%B8%A4%E4%B8%AAArray%E6%95%B0%E7%BB%84%E7%9A%84%E5%86%85%E5%AE%B9%E6%98%AF%E5%90%A6%E7%9B%B8%E5%90%8C.html</url>
    <content><![CDATA[<h1 id="why-can-not-use-to-compare-array">Why can not use === to compare Array?</h1>
<p>复习下javascript包括两个不同类型的值， 最新的 ECMAScript 标准定义了 8 种数据类型:</p>
<ul>
<li>基本数据类型(7种原始类型): 是按值访问的, 保存在栈内存（Stack）里, 基本类型的值是不可变的, 基本类型的比较是它们的值的比较。
<ul>
<li>Boolean</li>
<li>Null</li>
<li>Undefined</li>
<li>Number</li>
<li>BigInt</li>
<li>String</li>
<li>Symbol</li>
</ul>
</li>
<li>引用数据类型 (1种Object类型): 按引用访问的, 保存在堆内存(Heap)中的对象, 引用类型的值是可变的, 引用类型的比较是引用的比较。
<ul>
<li>Object</li>
<li>Array</li>
<li>Function</li>
<li>正则（RegExp）</li>
<li>日期（Date）</li>
</ul>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">var</span> b = a;</span><br><span class="line">b = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);  <span class="comment">// 1</span></span><br></pre></td></tr></table></figure>
<p>b获取的是a值的一份拷贝，虽然两个变量的值相等，但是两个变量保存了两个不同的基本数据类型值。b只是保存了a赋值的一个副本，所以，b的改变，对a没有影响。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> obj1 = [];    <span class="comment">// 新建一个空数组 obj1</span></span><br><span class="line"><span class="keyword">var</span> obj2 = [];    <span class="comment">// 新建一个空数组 obj2</span></span><br><span class="line"><span class="built_in">console</span>.log(obj1 == obj2);    <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(obj1 === obj2);   <span class="comment">// false</span></span><br></pre></td></tr></table></figure>
<p>因为 obj1 和 obj2 分别引用的是存放在堆内存中的2个不同的对象，故变量 obj1 和 obj2 的值（引用地址）也是不一样的<br>
==或===操作符只能比较两个对象是否是同一个实例，也就是是否是同一个对象引用。目前JavaScript没有内置的操作符判断对象的内容是否相同。</p>
<h1 id="how-to-compare-array">How to compare Array?</h1>
<h2 id="method-1-transform-array-tostring">Method 1 Transform Array toString</h2>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">array1.toString() === array2.toString()</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line"><span class="built_in">JSON</span>.stringify(array1) === <span class="built_in">JSON</span>.stringify(array2)</span><br></pre></td></tr></table></figure>
<p>不推荐，原因：</p>
<ul>
<li>首先要保证两个数组顺序一致，例如[1, 2] [2, 1] 顺序不一致，但内容相同。</li>
<li>其次，不是因为转换成字符串类型后才相等。<br>
例如array1=[1, 2], array1=[‘1’, ‘2’];<br>
array1.toString() === array2.toString() // true</li>
<li>简单数组[‘1’, ‘2’]，不是嵌套数组[‘1’, ‘2’, [‘1’, ‘2’]]</li>
</ul>
<h2 id="method-2-for-string">Method 2 For string[]</h2>
<p>如果保证：</p>
<ul>
<li>不是因为转换成字符串类型后才相等。<br>
例如array1=[1, 2], array1=[‘1’, ‘2’];<br>
array1.toString() === array2.toString() // true</li>
<li>简单数组[‘1’, ‘2’]，不是嵌套数组[‘1’, ‘2’, [‘1’, ‘2’]]</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// funtion for simple array string[]</span></span><br><span class="line">isArrayEquals(array1, array2) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!(array1 || array1)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Compare the length</span></span><br><span class="line">    <span class="keyword">if</span> (array1.length != array2.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 先排序再转化为string比较</span></span><br><span class="line">    <span class="keyword">if</span> (array1.sort().toString() === array2.sort().toString()) &#123;</span><br><span class="line">    <span class="comment">// if (JSON.stringify(array1.sort()) === JSON.stringify(array2.sort()) ) &#123;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="method-3-for-all-kinds-of-array">Method 3 For all kinds of array</h2>
<p>适应任何array, 包括嵌套数组。</p>
<p>for all kinds of array</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// prototype 方法</span></span><br><span class="line"><span class="comment">// Warn if overriding existing method</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Array</span>.prototype.equals) &#123;</span><br><span class="line">    <span class="built_in">console</span>.warn(<span class="string">"Overriding existing Array.prototype.equals. Possible causes: New API defines the method, there's a framework conflict or you've got double inclusions in your code."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Array</span>.prototype.equals = <span class="function"><span class="keyword">function</span>(<span class="params">array</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!array) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">this</span>.length !== array.length) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>[i] <span class="keyword">instanceof</span> <span class="built_in">Array</span> &amp;&amp; array[i] <span class="keyword">instanceof</span> <span class="built_in">Array</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="keyword">this</span>[i].equals(array[i])) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>[i] !== array[i]) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// funtion for all kinds of array</span></span><br><span class="line">isArrayEquals(array1, array2) &#123;</span><br><span class="line">    <span class="keyword">if</span>(!(array1 || array1)) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// Compare the length</span></span><br><span class="line">    <span class="keyword">if</span> (array1.length != array2.length) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; array1.length; i++) &#123;</span><br><span class="line">        <span class="comment">// check wheather it's nested arrays</span></span><br><span class="line">        <span class="keyword">if</span> (array1[i] <span class="keyword">instanceof</span> <span class="built_in">Array</span> &amp;&amp; array2[i] <span class="keyword">instanceof</span> <span class="built_in">Array</span>) &#123;</span><br><span class="line">            <span class="comment">// Recursion</span></span><br><span class="line">            <span class="keyword">if</span> (!isArrayEquals(array1[i],array2[i]))</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;       </span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>[i] != array[i]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;   </span><br><span class="line">        &#125;           </span><br><span class="line">    &#125;       </span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="how-to-compare-object">How to compare Object?</h1>
<p>那么同样的道理怎么比较Object呢？</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Object</span>.prototype.equals = <span class="function"><span class="keyword">function</span>(<span class="params">object2</span>) </span>&#123;</span><br><span class="line">    <span class="comment">//For the first loop, we only check for types</span></span><br><span class="line">    <span class="keyword">for</span> (propName <span class="keyword">in</span> <span class="keyword">this</span>) &#123;</span><br><span class="line">        <span class="comment">//Check for inherited methods and properties - like .equals itself</span></span><br><span class="line">        <span class="comment">//https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty</span></span><br><span class="line">        <span class="comment">//Return false if the return value is different</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.hasOwnProperty(propName) != object2.hasOwnProperty(propName)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Check instance type</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="keyword">this</span>[propName] != <span class="keyword">typeof</span> object2[propName]) &#123;</span><br><span class="line">            <span class="comment">//Different types =&gt; not equal</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Now a deeper check using other objects property names</span></span><br><span class="line">    <span class="keyword">for</span> (propName <span class="keyword">in</span> object2) &#123;</span><br><span class="line">        <span class="comment">//We must check instances anyway, there may be a property that only exists in object2</span></span><br><span class="line">            <span class="comment">//I wonder, if remembering the checked values from the first loop would be faster or not </span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.hasOwnProperty(propName) != object2.hasOwnProperty(propName)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="keyword">this</span>[propName] != <span class="keyword">typeof</span> object2[propName]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//If the property is inherited, do not check any more (it must be equa if both objects inherit it)</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">this</span>.hasOwnProperty(propName))</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Now the detail check and recursion</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//This returns the script back to the array comparing</span></span><br><span class="line">        <span class="comment">/**REQUIRES Array.equals**/</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>[propName] <span class="keyword">instanceof</span> <span class="built_in">Array</span> &amp;&amp; object2[propName] <span class="keyword">instanceof</span> <span class="built_in">Array</span>) &#123;</span><br><span class="line">                   <span class="comment">// recurse into the nested arrays</span></span><br><span class="line">           <span class="keyword">if</span> (!<span class="keyword">this</span>[propName].equals(object2[propName]))</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">this</span>[propName] <span class="keyword">instanceof</span> <span class="built_in">Object</span> &amp;&amp; object2[propName] <span class="keyword">instanceof</span> <span class="built_in">Object</span>) &#123;</span><br><span class="line">                   <span class="comment">// recurse into another objects</span></span><br><span class="line">                   <span class="comment">//console.log("Recursing to compare ", this[propName],"with",object2[propName], " both named ""+propName+""");</span></span><br><span class="line">           <span class="keyword">if</span> (!<span class="keyword">this</span>[propName].equals(object2[propName]))</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//Normal value comparison for strings and numbers</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">this</span>[propName] != object2[propName]) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//If everything passed, let's say YES</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="reference-links">Reference Links</h2>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Data_structures" target="_blank" rel="noopener">JavaScript 数据类型和数据结构</a></li>
<li><a href="https://segmentfault.com/a/1190000006752076" target="_blank" rel="noopener">JavaScript 深入了解基本类型和引用类型的值</a></li>
</ul>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>JS</category>
      </categories>
      <tags>
        <tag>Array</tag>
      </tags>
  </entry>
  <entry>
    <title>英文标点符号+运算符号</title>
    <url>/%E8%8B%B1%E6%96%87%E6%A0%87%E7%82%B9%E7%AC%A6%E5%8F%B7-%E8%BF%90%E7%AE%97%E7%AC%A6%E5%8F%B7.html</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th>符号</th>
<th>英文含义</th>
<th>读音</th>
<th>中文含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>．</td>
<td>period or full stop</td>
<td>英  [ˌsemiˈkəʊlən; ˌsemiˈkəʊlɒn]  美  [ˈsemikoʊlən]</td>
<td>句号</td>
</tr>
<tr>
<td>，</td>
<td>comma</td>
<td></td>
<td>逗号</td>
</tr>
<tr>
<td>：</td>
<td>colon</td>
<td></td>
<td>冒号</td>
</tr>
<tr>
<td>；</td>
<td>semicolon</td>
<td></td>
<td>分号</td>
</tr>
<tr>
<td>！</td>
<td>exclamation mark</td>
<td></td>
<td>惊叹号</td>
</tr>
<tr>
<td>？</td>
<td>question mark</td>
<td></td>
<td>问号</td>
</tr>
<tr>
<td>-</td>
<td>hyphen</td>
<td></td>
<td>连字符</td>
</tr>
<tr>
<td>*</td>
<td>asterisk</td>
<td></td>
<td>星号</td>
</tr>
<tr>
<td>’</td>
<td>apostrophe</td>
<td></td>
<td>所有格符号，单词内部的省略</td>
</tr>
<tr>
<td>—</td>
<td>dash</td>
<td></td>
<td>破折号</td>
</tr>
<tr>
<td>_</td>
<td>underscore</td>
<td></td>
<td></td>
</tr>
<tr>
<td>‘’</td>
<td>single quotation marks</td>
<td>英  [kwəʊˈteɪʃn]  美  [kwoʊˈteɪʃn]</td>
<td>单引号</td>
</tr>
<tr>
<td>“ ”</td>
<td>double quotation marks</td>
<td></td>
<td>双引号</td>
</tr>
<tr>
<td>( )</td>
<td>parenthesis or round brackets</td>
<td></td>
<td>圆括号</td>
</tr>
<tr>
<td>[ ]</td>
<td>square brackets</td>
<td>美  ['brækɪts]</td>
<td>方括号</td>
</tr>
<tr>
<td>&lt;&gt;</td>
<td>Angle brackets</td>
<td></td>
<td>尖括号</td>
</tr>
<tr>
<td>{}</td>
<td>curly brackets or braces</td>
<td></td>
<td>大括号</td>
</tr>
<tr>
<td>《》</td>
<td>French quotes</td>
<td></td>
<td>法文引号；书名号</td>
</tr>
<tr>
<td>…</td>
<td>ellipsis</td>
<td></td>
<td>省略号</td>
</tr>
<tr>
<td>¨</td>
<td>tandem colon</td>
<td></td>
<td>双点号</td>
</tr>
<tr>
<td>&quot;</td>
<td>ditto</td>
<td></td>
<td>同上</td>
</tr>
<tr>
<td>‖</td>
<td>parallel</td>
<td></td>
<td>双线号</td>
</tr>
<tr>
<td>／</td>
<td>slash or virgule or diagonal mark</td>
<td></td>
<td>斜线号</td>
</tr>
<tr>
<td>＆</td>
<td>ampersand = and</td>
<td></td>
<td></td>
</tr>
<tr>
<td>～</td>
<td>tilde or swung dash</td>
<td></td>
<td>代字号</td>
</tr>
<tr>
<td>§</td>
<td>section; division</td>
<td></td>
<td>分节号</td>
</tr>
<tr>
<td>→</td>
<td>arrow</td>
<td></td>
<td>箭号；参见号</td>
</tr>
<tr>
<td></td>
<td>vertical bar</td>
<td></td>
<td>竖线</td>
</tr>
<tr>
<td>\</td>
<td>backslash</td>
<td></td>
<td>反斜线</td>
</tr>
</tbody>
</table>
<p>=====================</p>
<p>附：部分数学符号的英文名称</p>
<table>
<thead>
<tr>
<th>符号</th>
<th>英文含义</th>
<th>中文含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>＋</td>
<td>plus</td>
<td>加号；正号</td>
</tr>
<tr>
<td>－</td>
<td>minus</td>
<td>减号；负号</td>
</tr>
<tr>
<td>±</td>
<td>plus or minus</td>
<td>正负号</td>
</tr>
<tr>
<td>×</td>
<td>is multiplied by</td>
<td>乘号</td>
</tr>
<tr>
<td>÷</td>
<td>is divided by</td>
<td>除号</td>
</tr>
<tr>
<td>＝</td>
<td>is equal to</td>
<td>等于号</td>
</tr>
<tr>
<td>≠</td>
<td>is not equal to</td>
<td>不等于号</td>
</tr>
<tr>
<td>≡</td>
<td>is equivalent to</td>
<td>全等于号</td>
</tr>
<tr>
<td>≌</td>
<td>is equal to or approximately equal to</td>
<td>等于或约等于号</td>
</tr>
<tr>
<td>≈</td>
<td>is approximately equal to</td>
<td>约等于号</td>
</tr>
<tr>
<td>＜</td>
<td>less than sign</td>
<td>小于号</td>
</tr>
<tr>
<td>＞</td>
<td>more than or greater than sign</td>
<td>大于号</td>
</tr>
<tr>
<td>≮</td>
<td>is not less than</td>
<td>不小于号</td>
</tr>
<tr>
<td>≯</td>
<td>is not more than</td>
<td>不大于号</td>
</tr>
<tr>
<td>≤</td>
<td>is less than or equal to</td>
<td>小于或等于号</td>
</tr>
<tr>
<td>≥</td>
<td>is more than or equal to</td>
<td>大于或等于号</td>
</tr>
<tr>
<td>％</td>
<td>per cent</td>
<td>百分之…</td>
</tr>
<tr>
<td>‰</td>
<td>per mill</td>
<td>千分之…</td>
</tr>
<tr>
<td>∞</td>
<td>infinity</td>
<td>无限大号</td>
</tr>
<tr>
<td>∝</td>
<td>varies as</td>
<td>与…成比例</td>
</tr>
<tr>
<td>√</td>
<td>(square) root</td>
<td>平方根</td>
</tr>
<tr>
<td>∵</td>
<td>since; because</td>
<td>因为</td>
</tr>
<tr>
<td>∴</td>
<td>hence</td>
<td>所以</td>
</tr>
<tr>
<td>∷</td>
<td>equals, as (proportion)</td>
<td>等于，成比例</td>
</tr>
<tr>
<td>∠</td>
<td>angle</td>
<td>角</td>
</tr>
<tr>
<td>⌒</td>
<td>semicircle</td>
<td>半圆</td>
</tr>
<tr>
<td>⊙</td>
<td>circle</td>
<td>圆</td>
</tr>
<tr>
<td>○</td>
<td>circumference</td>
<td>圆周</td>
</tr>
<tr>
<td>△</td>
<td>triangle</td>
<td>三角形</td>
</tr>
<tr>
<td>⊥</td>
<td>perpendicular to</td>
<td>垂直于</td>
</tr>
<tr>
<td>∪</td>
<td>union of</td>
<td>并，合集</td>
</tr>
<tr>
<td>∩</td>
<td>intersection of</td>
<td>交，通集</td>
</tr>
<tr>
<td>∫</td>
<td>the integral of</td>
<td>…的积分</td>
</tr>
<tr>
<td>∑</td>
<td>(sigma) summation of</td>
<td>总和</td>
</tr>
<tr>
<td>°</td>
<td>degree</td>
<td>度</td>
</tr>
<tr>
<td>′</td>
<td>minute</td>
<td>分</td>
</tr>
<tr>
<td>″</td>
<td>second</td>
<td>秒</td>
</tr>
<tr>
<td>＃</td>
<td>number</td>
<td>…号</td>
</tr>
<tr>
<td>℃</td>
<td>Celsius system</td>
<td>摄氏度</td>
</tr>
<tr>
<td>＠</td>
<td>at</td>
<td>在</td>
</tr>
</tbody>
</table>
<h1 id="参考文章">参考文章</h1>
<ul>
<li><a href="http://www.ruanyifeng.com/blog/2007/07/english_punctuation.html" target="_blank" rel="noopener">标点符号的英语名称</a></li>
</ul>
]]></content>
      <categories>
        <category>English Learning</category>
        <category>日常英语</category>
      </categories>
  </entry>
  <entry>
    <title>Promise Vs setTimeout</title>
    <url>/Promise-Vs-setTimeout.html</url>
    <content><![CDATA[<p>了解这个，就得了解JavaScript异步编程，了解任务队列才能知其根本。</p>
<p>一个事件循环（event loop）+多个任务队列（task queue）</p>
<h2 id="事件循环-event-loop">事件循环（event loop）</h2>
<h2 id="task-queue">Task Queue</h2>
<h3 id="macrotask-queue-宏任务队列">Macrotask Queue 宏任务队列:</h3>
<ul>
<li>setTimeout</li>
<li>setInterval</li>
<li>setImmediate</li>
<li>requestAnimationFrame</li>
<li>UI rendeing</li>
<li>NodeJS中的`I/O （fs.readFile）等</li>
</ul>
<h3 id="microtask-queue-微任务队列">Microtask Queue 微任务队列:</h3>
<p>主要包括两类：</p>
<ul>
<li>独立回调microTask：如Promise，其成功／失败回调函数相互独立；</li>
<li>复合回调microTask：如 Object.observe, MutationObserver 和NodeJs中的 process.nextTick ，不同状态回调在同一函数体；</li>
</ul>
<h3 id="macrotask-microtask-两者关系">MacroTask MicroTask 两者关系</h3>
<p>入栈过程：</p>
<blockquote>
<ol>
<li>开始执行JavaScript脚本，将任务JavaScript Run入栈macroTask队列；</li>
<li>同步resolvePromise后；</li>
<li>入栈<code>第一个</code>setTimeout任务进入macroTask队列</li>
<li>入栈Proimse.then任务进入microTask队列；</li>
<li>入栈第二个setTimeout任务进入macroTask队列；<br>
出栈执行过程：</li>
<li>同步执行代码，退出第一个macroTask，即JavaScript Run;</li>
<li>按顺序执行microTask queue 所有microTask；</li>
<li>执行下一个macroTask；</li>
</ol>
</blockquote>
<p>可以参考这个流程图：<br>
<img src="http://www.programmersought.com/images/250/ae6f91d1cb68f1e5d05b95a66a2cba72.png" alt="流程图"></p>
<h2 id="show-me-the-code">Show me the code</h2>
<p>例题1-5 来自<a href="http://es6.ruanyifeng.com/#docs/promise" target="_blank" rel="noopener">ES6 Book </a>：</p>
<h3 id="例题1">例题1</h3>
<p>Promise 新建后就会立即执行。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'Promise'</span>);</span><br><span class="line">  resolve();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">promise.then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'resolved.'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Hi!'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Promise</span></span><br><span class="line"><span class="comment">// Hi!</span></span><br><span class="line"><span class="comment">// resolved</span></span><br></pre></td></tr></table></figure>
<p>上面代码中，Promise 新建后立即执行，所以首先输出的是Promise。然后，then方法指定的回调函数，将在当前脚本所有同步任务执行完才会执行，所以resolved最后输出。</p>
<h3 id="例题2">例题2</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  resolve(<span class="number">1</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;).then(<span class="function"><span class="params">r</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(r);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 2</span></span><br><span class="line"><span class="comment">// 1</span></span><br></pre></td></tr></table></figure>
<p>上面代码中，调用resolve(1)以后，后面的console.log(2)还是会执行，并且会首先打印出来。这是因为立即 resolved 的 Promise 是在本轮事件循环的末尾执行，总是晚于本轮循环的同步任务。</p>
<p>一般来说，调用resolve或reject以后，Promise 的使命就完成了，后继操作应该放到then方法里面，而不应该直接写在resolve或reject的后面。所以，最好在它们前面加上return语句，这样就不会有意外。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> resolve(<span class="number">1</span>);</span><br><span class="line">  <span class="comment">// 后面的语句不会执行</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="例题3">例题3</h3>
<p>需要注意的是，立即resolve()的 Promise 对象，是在本轮“事件循环”（event loop）的结束时执行，而不是在下一轮“事件循环”的开始时。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'three'</span>);</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.resolve().then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'two'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'one'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// one</span></span><br><span class="line"><span class="comment">// two</span></span><br><span class="line"><span class="comment">// three</span></span><br></pre></td></tr></table></figure>
<p>上面代码中，setTimeout(fn, 0)在下一轮“事件循环”开始时执行，Promise.resolve()在本轮“事件循环”结束时执行，console.log(‘one’)则是立即执行，因此最先输出。</p>
<h3 id="例题4-promise-try">例题4 Promise.try</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> f = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'now'</span>);</span><br><span class="line"><span class="built_in">Promise</span>.resolve().then(f);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'next'</span>);</span><br><span class="line"><span class="comment">// next</span></span><br><span class="line"><span class="comment">// now</span></span><br></pre></td></tr></table></figure>
<p>上面代码中，函数f是同步的，但是用 Promise 包装了以后，就变成异步执行了。</p>
<p>那么有没有一种方法，让同步函数同步执行，异步函数异步执行，并且让它们具有统一的 API 呢？回答是可以的，并且还有两种写法。第一种写法是用async函数来写。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> f = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'now'</span>);</span><br><span class="line">(<span class="keyword">async</span> () =&gt; f())();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'next'</span>);</span><br><span class="line"><span class="comment">// now</span></span><br><span class="line"><span class="comment">// next</span></span><br></pre></td></tr></table></figure>
<p>上面代码中，第二行是一个立即执行的匿名函数，会立即执行里面的async函数，因此如果f是同步的，就会得到同步的结果；如果f是异步的，就可以用then指定下一步，就像下面的写法。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">async</span> () =&gt; f())()</span><br><span class="line">.then(...)</span><br></pre></td></tr></table></figure>
<p>需要注意的是，async () =&gt; f()会吃掉f()抛出的错误。所以，如果想捕获错误，要使用promise.catch方法。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">async</span> () =&gt; f())()</span><br><span class="line">.then(...)</span><br><span class="line">.catch(...)</span><br></pre></td></tr></table></figure>
<p>第二种写法是使用new Promise()。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> f = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'now'</span>);</span><br><span class="line">(</span><br><span class="line">  () =&gt; <span class="keyword">new</span> <span class="built_in">Promise</span>(</span><br><span class="line">    resolve =&gt; resolve(f())</span><br><span class="line">  )</span><br><span class="line">)();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'next'</span>);</span><br><span class="line"><span class="comment">// now</span></span><br><span class="line"><span class="comment">// next</span></span><br></pre></td></tr></table></figure>
<p>上面代码也是使用立即执行的匿名函数，执行new Promise()。这种情况下，同步函数也是同步执行的。</p>
<p>鉴于这是一个很常见的需求，所以现在有一个提案，提供Promise.try方法替代上面的写法。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> f = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'now'</span>);</span><br><span class="line"><span class="built_in">Promise</span>.try(f);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'next'</span>);</span><br><span class="line"><span class="comment">// now</span></span><br><span class="line"><span class="comment">// next</span></span><br></pre></td></tr></table></figure>
<p>例题5, 6 来自<a href="https://juejin.im/post/5b7057b251882561381e69bf" target="_blank" rel="noopener">浅析setTimeout与Promise</a>：</p>
<h3 id="例题5">例题5</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Before resolve"</span>);</span><br><span class="line">    resolve(<span class="number">1</span>);</span><br><span class="line">&#125;)</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"will be executed at the top of the next Event Loop"</span>);</span><br><span class="line">&#125;,<span class="number">0</span>)</span><br><span class="line">p1.then(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"p1 fulfilled"</span>);</span><br><span class="line">&#125;)</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"will be executed at the bottom of the next Event Loop"</span>);</span><br><span class="line">&#125;,<span class="number">0</span>)</span><br></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">Before resolve</span><br><span class="line">p1 fulfilled</span><br><span class="line">will be executed at the top of the next Event Loop</span><br><span class="line">will be executed at the bottom of the next Event Loop</span><br></pre></td></tr></table></figure>
<blockquote>
<ol>
<li>开始执行JavaScript脚本，将任务JavaScript Run入栈macroTask队列；</li>
<li>同步resolvePromise后；</li>
<li>入栈第一个setTimeout任务进入macroTask队列</li>
<li>入栈Proimse.then任务进入microTask队列；</li>
<li>入栈第二个setTimeout任务进入macroTask队列；</li>
<li>同步执行代码完毕，退出第一个macroTask，即JavaScript Run;  输出 Before resolve</li>
<li>执行清空microTask；输出 p1 fulfilled</li>
<li>执行下一个macroTask；输出 will be executed at the top of the next Event Loop<br>
will be executed at the bottom of the next Event Loop</li>
</ol>
</blockquote>
<h3 id="例题6">例题6</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"will be executed at the top of the next Event Loop"</span>)</span><br><span class="line">&#125;,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>)</span>&#123;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; resolve(<span class="number">1</span>); &#125;, <span class="number">0</span>);</span><br><span class="line">&#125;);</span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"will be executed at the bottom of the next Event Loop"</span>)</span><br><span class="line">&#125;,<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span>(<span class="params">j</span>)</span>&#123;</span><br><span class="line">        p1.then(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span><br><span class="line">           <span class="built_in">console</span>.log(<span class="string">"promise then - "</span> + j)</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)(i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// will be executed at the top of the next Event Loop</span></span><br><span class="line"><span class="comment">// promise then - 0</span></span><br><span class="line"><span class="comment">// promise then - 1</span></span><br><span class="line"><span class="comment">// promise then - 2</span></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="comment">// promise then - 99</span></span><br><span class="line"><span class="comment">// will be executed at the bottom of the next Event Loop</span></span><br></pre></td></tr></table></figure>
<h3 id="例题7">例题7</h3>
<p>来源： <a href="https://www.zhihu.com/question/36972010" target="_blank" rel="noopener">Promise的队列与setTimeout的队列有何关联？</a></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">console</span>.log(<span class="number">4</span>)&#125;,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span>( <span class="keyword">var</span> i=<span class="number">0</span> ; i&lt;<span class="number">10000</span> ; i++ )&#123;</span><br><span class="line">        i==<span class="number">9999</span> &amp;&amp; resolve()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>)</span><br><span class="line">&#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">5</span>)</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//1,2,3,5,4</span></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ol>
<li>首先同步执行完所有代码，其间注册了三个setTimeout异步任务，100个Promise异步任务；</li>
<li>然后检查MacroTask队列，取第一个到期的MacroTask，执行输出will be executed at the top of the next Event Loop;</li>
<li>然后检查MicroTask队列，发现没有到期的MicroTask，进入第4步；</li>
<li>再次检查MacroTask，执行第二个setTimeout处理函数，resolve Promise；</li>
<li>然后检查MicroTask队列，发现Promise已解决，其异步处理函数均可执行，依次执行，输出promise then - 0 至promise then - 99；</li>
<li>最后再次检查MacroTask队列，执行输出will be executed at the bottom of the next Event Loop</li>
<li>交替往复检查两个异步任务队列，直至执行完毕；</li>
</ol>
<h2 id="reference-links">Reference Links</h2>
<ul>
<li><a href="https://juejin.im/post/5b7057b251882561381e69bf" target="_blank" rel="noopener">浅析setTimeout与Promise</a></li>
<li><a href="https://juejin.im/post/5b7057b251882561381e69bf" target="_blank" rel="noopener">What is the relationship between event loop and Promise [stackoverflow]</a></li>
<li><a href="http://es6.ruanyifeng.com/#docs/promise" target="_blank" rel="noopener">ES6 Book </a></li>
<li><a href="https://www.zhihu.com/question/36972010" target="_blank" rel="noopener">Promise的队列与setTimeout的队列有何关联？[知乎]</a></li>
<li><a href="https://blog.risingstack.com/writing-a-javascript-framework-execution-timing-beyond-settimeout" target="_blank" rel="noopener">Writing a JavaScript framework - Execution timing, beyond setTimeout</a></li>
<li><a href="https://github.com/deenjohn/NodeRevision/blob/master/6-Concurrency%20model%20and%20event%20loop%20-part%20B.md" target="_blank" rel="noopener">6-Concurrency model and event loop -part B</a></li>
<li><a href="https://stackoverflow.com/questions/34753342/microtasks-vs-events-and-how-to-define-what-as-which" target="_blank" rel="noopener">Microtasks vs Events and how to define what as which?</a></li>
<li><a href="https://medium.com/@jitubutwal144/javascript-how-is-callback-execution-strategy-for-promises-different-than-dom-events-callback-73c0e9e203b1" target="_blank" rel="noopener">JavaScript: How is callback execution strategy for promises different than DOM events callback?</a></li>
</ul>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>JS</category>
      </categories>
      <tags>
        <tag>Promise</tag>
        <tag>TODO</tag>
      </tags>
  </entry>
  <entry>
    <title>Browser Caching</title>
    <url>/Browser-Caching.html</url>
    <content><![CDATA[<h1 id="reference-links">Reference Links:</h1>
<ul>
<li><a href="https://github.com/amandakelake/blog/issues/43" target="_blank" rel="noopener">缓存（一）——缓存总览：从性能优化的角度看缓存 #43</a></li>
<li><a href="http://jixianqianduan.com/frontend-javascript/2015/12/28/nine-browser-cache-methods.html" target="_blank" rel="noopener">九种浏览器端缓存机制知多少</a></li>
<li><a href="https://segmentfault.com/a/1190000004132566#articleHeader6" target="_blank" rel="noopener">H5 缓存机制浅析 - 移动端 Web 加载性能优化</a></li>
</ul>
<h2 id="indexeddb">IndexedDB</h2>
<ul>
<li><a href="https://lavas-project.github.io/pwa-book/chapter03/5-indexeddb.html" target="_blank" rel="noopener">《PWA 应用实战》- IndexedDB</a></li>
<li><a href="https://lavas.baidu.com/pwa/offline-and-cache-loading/web-storage/indexeddb-best-practices-app-state" target="_blank" rel="noopener">利用 indexedDB 保持应用状态的最佳实践</a></li>
<li><a href="https://developers.google.com/web/ilt/pwa/working-with-indexeddb" target="_blank" rel="noopener">Progressive Web Apps Training - Working with IndexedDB</a></li>
<li><a href="https://www.w3.org/TR/IndexedDB/" target="_blank" rel="noopener">Indexed Database API 2.0 from W3C</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB" target="_blank" rel="noopener">Using IndexedDB MDN</a></li>
</ul>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>Browser Caching</category>
      </categories>
      <tags>
        <tag>cache</tag>
      </tags>
  </entry>
  <entry>
    <title>IndexedDB-delete whole database by javaScript</title>
    <url>/IndexedDB-delete-whole-database-by-javaScript.html</url>
    <content><![CDATA[<h1 id="使用indexeddb-deletedatabase：">使用<a href="https://developer.mozilla.org/en-US/docs/Web/API/IDBFactory/deleteDatabase" target="_blank" rel="noopener">indexedDB.deleteDatabase</a>：</h1>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> DBDeleteRequest = <span class="built_in">window</span>.indexedDB.deleteDatabase(<span class="string">"toDoList"</span>);</span><br><span class="line"></span><br><span class="line">DBDeleteRequest.onerror = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Error deleting database."</span>);</span><br><span class="line">&#125;;</span><br><span class="line"> </span><br><span class="line">DBDeleteRequest.onsuccess = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">"Database deleted successfully"</span>);</span><br><span class="line">    </span><br><span class="line">  <span class="built_in">console</span>.log(event.result); <span class="comment">// should be undefined</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// you must call db.close() before delete, if you already open. otherwise you will get onblocked event</span></span><br><span class="line">DBDeleteRequest.onblocked = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"Couldn't delete database due to the operation being blocked"</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h1 id="indexeddb-databases">indexedDB.<a href="developer.mozilla.org/en-US/docs/Web/API/IDBFactory/databases">databases()</a></h1>
<p>可以使用indexedDB.databases() 得到所有的databases List.<br>
如果这个数据库已经open过，在删除数据库前需要调用<a href="https://developer.mozilla.org/en-US/docs/Web/API/IDBDatabase/close" target="_blank" rel="noopener">db.close() </a> 否则onblocked event会触发。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="built_in">window</span>.indexedDB.databases()</span><br><span class="line">    .then(<span class="function">(<span class="params">dbs</span>) =&gt;</span> &#123;</span><br><span class="line">        dbs.map(<span class="function"><span class="params">db</span> =&gt;</span> &#123;</span><br><span class="line">            db.close();</span><br><span class="line">            <span class="built_in">window</span>.indexedDB.deleteDatabase(db.name)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;).catch(<span class="built_in">console</span>.error);</span><br></pre></td></tr></table></figure>
<p>indexedDB.databases() 有一个很大问题就是支持的浏览器太少了。只有Chrome和Opera能很好的支持，IE11, Firefox, Safari都不太支持。</p>
<p>实例：删除除了此user的所有其他IndexedDB</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Checks IndexedDB for all IndexedDBs and deletes them if the username</span></span><br><span class="line"><span class="comment"> * is not the one provided. Used when changing users after session expires.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @static</span></span><br><span class="line"><span class="comment"> * @param &#123;String&#125; usernameToKeep Current authenticated user</span></span><br><span class="line"><span class="comment"> * @returns</span></span><br><span class="line"><span class="comment"> * @memberof DB</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> purgeIndexedDB(usernameToKeep) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">window</span>.indexedDB &amp;&amp; <span class="built_in">window</span>.indexedDB.databases) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">window</span>.indexedDB.databases()</span><br><span class="line">      .then(<span class="function">(<span class="params">dbs</span>) =&gt;</span> </span><br><span class="line">          dbs.filter(<span class="function">(<span class="params">db</span>) =&gt;</span> (db.name.includes(<span class="string">'_pouch_'</span>) &amp;&amp; (!usernameToKeep || !db.name.includes(usernameToKeep)))))</span><br><span class="line">      .then(<span class="function">(<span class="params">IndexedDBS</span>) =&gt;</span> </span><br><span class="line">          <span class="built_in">Promise</span>.all(IndexedDBS.map(<span class="function">(<span class="params">IndexedDB</span>) =&gt;</span> <span class="built_in">window</span>.indexedDB.deleteDatabase(IndexedDB.name))))</span><br><span class="line">      .catch(<span class="built_in">console</span>.error);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="reference-links">Reference Links:</h1>
<ul>
<li><a href="https://stackoverflow.com/questions/15861630/how-can-i-remove-a-whole-indexeddb-database-from-javascript#" target="_blank" rel="noopener">How can I remove a whole IndexedDB database from JavaScript?</a></li>
<li><a href="developer.mozilla.org/en-US/docs/Web/API/IDBFactory/databases">indexedDB.databases()</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/API/IDBFactory/deleteDatabase" target="_blank" rel="noopener">indexedDB.deleteDatabase</a></li>
<li><a href="https://www.w3.org/TR/IndexedDB/#dom-idbfactory-deletedatabase" target="_blank" rel="noopener">dom-idbfactory-deletedatabase W3C</a></li>
<li><a href="https://www.w3.org/TR/IndexedDB/#delete-a-database" target="_blank" rel="noopener">5.3. Deleting a database W3C</a></li>
</ul>
<h2 id="pouch">Pouch</h2>
<ul>
<li><a href="https://github.com/pouchdb/pouchdb" target="_blank" rel="noopener">pouchdb/pouchdb</a></li>
<li><a href="http://webfuse.cn/2016/09/24/PouchDB%E7%AE%80%E5%8D%95%E5%85%A5%E9%97%A8/" target="_blank" rel="noopener">PouchDB简单入门</a></li>
<li><a href="http://www.vue5.com/pouchdb/pouchdb_delete_database.html" target="_blank" rel="noopener">学习PouchDB</a></li>
<li><a href="https://www.w3.org/TR/IndexedDB/#dom-idbfactory-deletedatabase" target="_blank" rel="noopener">dom-idbfactory-deletedatabase W3C</a></li>
<li><a href="https://www.w3.org/TR/IndexedDB/#delete-a-database" target="_blank" rel="noopener">5.3. Deleting a database W3C</a></li>
</ul>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>Browser Caching</category>
        <category>IndexedDB</category>
      </categories>
      <tags>
        <tag>IndexedDB</tag>
      </tags>
  </entry>
  <entry>
    <title>Z-index</title>
    <url>/Z-index.html</url>
    <content><![CDATA[<h2 id="reference-links">Reference Links</h2>
<ul>
<li><a href="https://webdesign.tutsplus.com/zh-hans/articles/what-you-may-not-know-about-the-z-index-property--webdesign-16892" target="_blank" rel="noopener">关于z-index 那些你不知道的事</a></li>
</ul>
<!-- - [官方文档中文版：hooks](https://zh-hans.reactjs.org/docs/hooks-intro.html) -->]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>TODO</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP CORS disable for chrome</title>
    <url>/HTTP-CORS-disable.html</url>
    <content><![CDATA[<p>CORS的基本原理请看上一篇：</p>
<!-- [CORS的基本原理](../../../../2019/10/21/HTTP CORS disable) -->
<p><a href="../HTTP-CORS.html">CORS的基本原理</a></p>
<p>简单关闭Chrome的CORS方法:</p>
<h1 id="macos">MacOS</h1>
<p>命令行里, 会另外打开一个Chrome窗口：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜   ✗ open -n -a <span class="string">"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome"</span> --args --user-data-dir=<span class="string">"/tmp/chrome_dev_test"</span> --<span class="built_in">disable</span>-web-security</span><br></pre></td></tr></table></figure>
<blockquote>
<p>–user-data-dir 参数需要 Chrome 版本 49+ on OSX</p>
</blockquote>
<p>如果想访问本地文件（开发目的来使用 AJAX 或 JSON），可以使用flag：</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">-–allow-<span class="built_in">file</span>-access-<span class="built_in">from</span>-<span class="built_in">files</span></span><br></pre></td></tr></table></figure>
<h1 id="windows">Windows</h1>
<p>进入command prompt，进入到Chrome.exe文件夹，执行命令：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">chrome<span class="selector-class">.exe</span> --disable-web-security</span><br></pre></td></tr></table></figure>
<p>这个命令会禁掉CORS，而且可以访问本地文件。</p>
<h1 id="reference-links">Reference Links:</h1>
<p><a href="https://stackoverflow.com/questions/3102819/disable-same-origin-policy-in-chrome" target="_blank" rel="noopener">Disable same origin policy in Chrome</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Network</category>
        <category>Servlet/HTTP</category>
      </categories>
      <tags>
        <tag>CORS</tag>
      </tags>
  </entry>
  <entry>
    <title>React 16 - Hooks</title>
    <url>/React-16-Hooks.html</url>
    <content><![CDATA[<h1 id="hooks-faq">Hooks FAQ</h1>
<p>觉得<a href="https://zh-hans.reactjs.org/docs/hooks-faq.html" target="_blank" rel="noopener">Hooks FAQ</a>里面回答了很多很实际的疑问。</p>
<h2 id="生命周期方法要如何对应到-hook？">生命周期方法要如何对应到 Hook？</h2>
<ul>
<li>
<p>constructor：函数组件不需要构造函数。你可以通过调用 useState 来初始化 state。如果计算的代价比较昂贵，你可以传一个函数给 useState。</p>
</li>
<li>
<p>getDerivedStateFromProps：改为 在渲染时 安排一次更新。</p>
</li>
<li>
<p>shouldComponentUpdate：详见 下方 React.memo.</p>
</li>
<li>
<p>render：这是函数组件体本身。</p>
</li>
<li>
<p>componentDidMount, componentDidUpdate, componentWillUnmount：useEffect Hook 可以表达所有这些(包括 不那么 常见 的场景)的组合。</p>
</li>
<li>
<p>componentDidCatch and getDerivedStateFromError：目前还没有这些方法的 Hook 等价写法，但很快会加上。</p>
</li>
</ul>
<h2 id="我该如何使用-hook-进行数据获取？">我该如何使用 Hook 进行数据获取？</h2>
<p>该 <a href="https://codesandbox.io/s/jvvkoo8pq3" target="_blank" rel="noopener">demo</a> 会帮助你开始理解。欲了解更多，请查阅 <a href="https://www.robinwieruch.de/react-hooks-fetch-data" target="_blank" rel="noopener">react-hooks-fetch-data</a> 来了解如何使用 Hook 进行数据获取。</p>
<h2 id="reference-links">Reference Links</h2>
<ul>
<li><a href="https://react.docschina.org/docs/portals.html" target="_blank" rel="noopener">新一代 React API — React Hooks React Conf 2018 React Today and Tomorrow 重點回顧</a></li>
<li><a href="https://reactjs.org/docs/hooks-intro.html" target="_blank" rel="noopener">官方文档英文版：hooks-intro</a></li>
<li><a href="https://zh-hans.reactjs.org/docs/hooks-intro.html" target="_blank" rel="noopener">官方文档中文版：hooks</a></li>
<li><a href="https://upmostly.com/tutorials/settimeout-in-react-components-using-hooks" target="_blank" rel="noopener">setTimeout in React Components Using Hooks</a></li>
</ul>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>React</category>
      </categories>
      <tags>
        <tag>React 16</tag>
      </tags>
  </entry>
  <entry>
    <title>Github All You should know</title>
    <url>/Github-All-You-should-know.html</url>
    <content><![CDATA[<h2 id="who-is-assignees">Who is Assignees?</h2>
<p><a href="https://stackoverflow.com/questions/43617352/" target="_blank" rel="noopener"> What do reviewer and assignee mean in pull request?</a> 里的答案：</p>
<blockquote>
<p>For a pull request, you can now &quot;request a review explicitly from collaborators, making it easier to specify who you’d like to review your pull request.&quot;<br>
但是Assignees<br>
Assignees, on the other hand, “clarify who is working on specific issues and pull requests.”</p>
</blockquote>
<blockquote>
<p>In sum, the difference is whether you’d like to ask someone to work on fixing an issue or contribute to a pull request (<strong>assignee</strong>), versus asking someone to quality check your work (<strong>reviewer</strong>).<br>
Sources:<br>
<a href="https://github.com/blog/2291-introducing-review-requests" target="_blank" rel="noopener">https://github.com/blog/2291-introducing-review-requests</a><br>
<a href="https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/" target="_blank" rel="noopener">https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/</a></p>
</blockquote>
<p><a href="https://stackoverflow.com/questions/41087206/on-github-whats-the-difference-between-reviewer-and-assignee" target="_blank" rel="noopener"> On GitHub, what’s the difference between reviewer and assignee?</a>里的答案：</p>
<blockquote>
<p>After discussing with several OSS maintainers, reviewers is defined as what the word supposed to be: to review (someone’s code) and “assignee” has a looser definiton explained below.</p>
</blockquote>
<blockquote>
<p>For “reviewer”: someone you want to review the code. Not necessarily the person responsible for that area or responsible for merging the commit. Can be someone who worked on that chunk of code before, as GitHub auto-suggests.</p>
</blockquote>
<blockquote>
<p>For “assignee”: up to the project’s team/maintainer what it means and there’s no strict definition. It can be the PR opener, or someone responsible for that area (who is going to accept the PR after the review is done or just close it). It’s not up to GitHub to define what it is leaving it open for project maintainers what fits best for their project.</p>
</blockquote>
<blockquote>
<p>Previous answer:<br>
Ok I’ll go ahead and answer my own question.<br>
For PR of users with write-access: the Assignee would be the same person who opened the PR, and reviewer would replace the old assignee function (reviewing code), being this one someone of assignee choice.<br>
For PR of users without write-access (outside contributors): Someone with write-access would assign herself (or other write-priviledge member), to review the PR (Reviewer). Assignee is blank.<br>
For unfinished PR from outside contributors: the write-access member would take the unfinished work and assign for her. She will be responsible for finishing the task, being the Assignee. Since the main reason of PRs is reviewing changes, she would select some other people to review the changes.</p>
</blockquote>
<p>总结下：<br>
reviewer: 一般很好理解，就是来review你代码的人。可以是原来改过这段代码的人，负责这块代码的人或是负责merge代码的人。<br>
Assignees: 其实，没有严格定义，可以具体看项目组怎么用这个选项。一般分两个场景</p>
<ol>
<li>Pull request：创建pull request的人（这种在另一个组的时候用过，如果你是创建的人，可以指定自己），或者是负责merge代码的人（我们组是这么用的），或者就是当review/colse PR完后accept PR的人.</li>
<li>Issue：当你收到一个issue（通常不是你建的issue）， 你需要指定人来fix这个issue，就可以在Assignees填。</li>
</ol>
<h1 id="reference-links">Reference Links:</h1>
<ul>
<li><a href="https://stackoverflow.com/questions/41087206/on-github-whats-the-difference-between-reviewer-and-assignee" target="_blank" rel="noopener"> On GitHub, what’s the difference between reviewer and assignee?</a></li>
<li><a href="https://stackoverflow.com/questions/43617352/what-do-reviewer-and-assignee-mean-in-pull-request?noredirect=1&amp;lq=1" target="_blank" rel="noopener"> What do reviewer and assignee mean in pull request? [duplicate]</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2017/08/issue.html" target="_blank" rel="noopener"> 如何使用 Issue 管理软件项目？</a></li>
<li><a href="https://tech.hahow.in/%E5%AE%8C%E5%96%84-github-flow-%E6%9C%80%E5%BE%8C%E4%B8%80%E5%93%A9%E8%B7%AF-probot-d1cda24e4455" target="_blank" rel="noopener"> 完善 GitHub Flow 最後一哩路 — Probot -Assignees 下拉選單</a></li>
</ul>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>Responsive web - Flexbox</title>
    <url>/Responsive-web-Flexbox.html</url>
    <content><![CDATA[<h2 id="基础教程：">基础教程：</h2>
<ul>
<li><a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank" rel="noopener"> 官方文档 A Complete Guide to Flexbox</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener"> 阮一峰 Flex 布局教程：语法篇</a></li>
</ul>
<p>但是看完还是有些不懂的地方：</p>
<h2 id="flex-basis-具体的含义">Flex Basis 具体的含义:</h2>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-basis" target="_blank" rel="noopener"> flex-basis MDN</a><br>
以及和width的区别：</li>
<li><a href="https://www.jianshu.com/p/17b1b445ecd4" target="_blank" rel="noopener"> Flex Basis与Width的区别</a></li>
<li><a href="https://gedd.ski/post/the-difference-between-width-and-flex-basis/" target="_blank" rel="noopener"> The Difference Between Width and Flex Basis</a></li>
</ul>
<h2 id="flex-grow-flex-shrink-flex-basis-是怎么此消彼长的">flex-grow、flex-shrink、flex-basis 是怎么此消彼长的</h2>
<p>如果分配剩余空间？</p>
<ul>
<li><a href="https://zhoon.github.io/css3/2014/08/23/flex.html" target="_blank" rel="noopener"> 深入理解css3中的flex-grow、flex-shrink、flex-basis</a></li>
</ul>
<h2 id="小实践：">小实践：</h2>
<p>Code Pen - Flexbox Form:<br>
<a href="https://codepen.io/catherineliyuankun/pen/dyyMKzW" target="_blank" rel="noopener">Flexbox Form</a><br>
有个困惑， 比如.wrapper 的width只有比如100px; 但是lable/span又不想换行，这时lable的flex-grow:1,.date的flex-grow:3. 也就是比例是1：3，lable就会被截断。 当然如果flex-grow:1都为1，input和lable同比例缩小，会解决。<br>
但是在lable不长的情况下，不想让lable 和 input 部分的比例为1：1.</p>
<p>当然通过 media query 来实现修改flex的值，但是如果我想以.wrapper的宽度来修改flex-grow的值要怎么做呢？或者以lable的长度来修改.date的flex-grow的值？（lable长的时候，lable: .date = 1：1，lable短的时候，1：3）?</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">@<span class="keyword">media</span> screen and (min-width: <span class="number">768px</span>) &#123;</span><br><span class="line">   	<span class="selector-class">.form-row</span> &gt; <span class="selector-class">.date</span> &#123;</span><br><span class="line">    	<span class="attribute">flex</span>: <span class="number">3</span>;  </span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> @<span class="keyword">media</span> screen and (min-width: <span class="number">992px</span>) &#123;</span><br><span class="line">   	<span class="selector-class">.form-row</span> &gt; <span class="selector-class">.date</span> &#123;</span><br><span class="line">    	<span class="attribute">flex</span>: <span class="number">4</span>;  </span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.form-row</span> &gt; <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">padding</span>: .<span class="number">5em</span> <span class="number">1em</span> .<span class="number">5em</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.form-row</span> &gt; <span class="selector-class">.date</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: baseline;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="reference-links">Reference Links:</h1>
<ul>
<li><a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank" rel="noopener"> 官方文档 A Complete Guide to Flexbox</a></li>
<li><a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener"> 阮一峰 Flex 布局教程：语法篇</a></li>
<li><a href="https://www.quackit.com/css/flexbox/tutorial/align_form_elements_with_flexbox.cfm" target="_blank" rel="noopener"> How to Align Form Elements with Flexbox</a></li>
<li><a href="https://www.jianshu.com/p/17b1b445ecd4" target="_blank" rel="noopener"> Flex Basis与Width的区别</a></li>
<li><a href="https://gedd.ski/post/the-difference-between-width-and-flex-basis/" target="_blank" rel="noopener"> The Difference Between Width and Flex Basis</a></li>
</ul>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>CSS</category>
        <category>Flexbox</category>
      </categories>
      <tags>
        <tag>Flexbox</tag>
      </tags>
  </entry>
  <entry>
    <title>ES6-Promise</title>
    <url>/ES6-Promise.html</url>
    <content><![CDATA[<h1 id="promise">Promise</h1>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// ... some code</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (<span class="comment">/* 异步操作成功 */</span>)&#123;</span><br><span class="line">    resolve(value);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    reject(error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>Promise构造函数接受一个函数作为参数，该函数的两个参数分别是resolve和reject。它们是两个函数，由 JavaScript 引擎提供，不用自己部署。</p>
<p>resolve函数的作用是，将Promise对象的状态从“未完成”变为“成功”（即从 pending 变为 resolved），在异步操作成功时调用，并将异步操作的结果，作为参数传递出去；reject函数的作用是，将Promise对象的状态从“未完成”变为“失败”（即从 pending 变为 rejected），在异步操作失败时调用，并将异步操作报出的错误，作为参数传递出去。</p>
<p>Promise实例生成以后，可以用then方法分别指定resolved状态和rejected状态的回调函数。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">promise.then(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// success</span></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// failure</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>then方法可以接受两个回调函数作为参数。第一个回调函数是Promise对象的状态变为resolved时调用，第二个回调函数是Promise对象的状态变为rejected时调用。其中，第二个函数是可选的，不一定要提供。这两个函数都接受Promise对象传出的值作为参数。</p>
<h2 id="promise-prototype-then">Promise.prototype.then()</h2>
<p>then方法的第一个参数是resolved状态的回调函数，第二个参数（可选）是rejected状态的回调函数</p>
<h2 id="promise-prototype-catch">Promise.prototype.catch()</h2>
<p>.then(null, rejection)或.then(undefined, rejection)的别名，用于指定发生错误时的回调函数。</p>
<h2 id="promise-prototype-finally">Promise.prototype.finally()</h2>
<p>finally方法用于指定不管 Promise 对象最后状态如何，都会执行的操作。该方法是 ES2018 引入标准的。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// bad</span></span><br><span class="line">promise</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// success</span></span><br><span class="line">  &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// error</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// good</span></span><br><span class="line">promise</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123; <span class="comment">//cb</span></span><br><span class="line">    <span class="comment">// success</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// error</span></span><br><span class="line">    <span class="comment">//.then(null, rejection)或.then(undefined, rejection)的别名，用于指定发生错误时的回调函数。</span></span><br><span class="line">  &#125;)</span><br><span class="line">  .finally(</span><br><span class="line">      <span class="comment">//不管 Promise 对象最后状态如何，都会执行的操作</span></span><br><span class="line">      <span class="comment">//与状态无关的，不依赖于 Promise 的执行结果</span></span><br><span class="line">  );</span><br></pre></td></tr></table></figure>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">timeout</span>(<span class="params">ms</span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'setTimeout start'</span>);</span><br><span class="line">    setTimeout(resolve, ms, <span class="string">'done'</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'setTimeout end'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">timeout(<span class="number">100</span>).then(<span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(value);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// setTimeout start</span></span><br><span class="line"><span class="comment">// setTimeout end</span></span><br><span class="line"><span class="comment">// done</span></span><br></pre></td></tr></table></figure>
<h1 id="处理多个promise">处理多个promise</h1>
<h2 id="promise-all">Promise.all()</h2>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="built_in">Promise</span>.all([p1, p2, p3]);</span><br></pre></td></tr></table></figure>
<p>return all resolved</p>
<p>p的状态由p1、p2、p3决定，分成两种情况。<br>
（1）只有p1、p2、p3的状态都变成fulfilled，p的状态才会变成fulfilled，此时p1、p2、p3的返回值组成一个数组，传递给p的回调函数。</p>
<p>（2）只要p1、p2、p3之中有一个被rejected，p的状态就变成rejected，此时第一个被reject的实例的返回值，会传递给p的回调函数。</p>
<h2 id="promise-race">Promise.race()</h2>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> p = <span class="built_in">Promise</span>.race([p1, p2, p3]);</span><br></pre></td></tr></table></figure>
<p>return first result</p>
<p>只要p1、p2、p3之中有一个实例率先改变状态，p的状态就跟着改变。那个率先改变的 Promise 实例的返回值，就传递给p的回调函数。</p>
<h2 id="promise-allsettled">Promise.allSettled()</h2>
<p>return all end</p>
<p>只有等到所有这些参数实例都返回结果，不管是fulfilled还是rejected，包装实例才会结束。该方法由 ES2020 引入。<br>
我们不关心异步操作的结果，只关心这些操作有没有结束。这时，Promise.allSettled()方法就很有用。如果没有这个方法，想要确保所有操作都结束，就很麻烦。Promise.all()方法无法做到这一点。</p>
<h2 id="promise-any">Promise.any()</h2>
<p>return any resolved</p>
<p>只要参数实例有一个变成fulfilled状态，包装实例就会变成fulfilled状态；如果所有参数实例都变成rejected状态，包装实例就会变成rejected状态。该方法目前是一个第三阶段的提案 。</p>
<h1 id="返回一个新的-promise-实例">返回一个新的 Promise 实例</h1>
<h2 id="promise-resolve">Promise.resolve()</h2>
<p>需要将现有对象转为 Promise 对象。Promise.resolve()在本轮“事件循环”结束时执行</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.resolve(<span class="string">'foo'</span>)</span><br><span class="line"><span class="comment">// 等价于</span></span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> resolve(<span class="string">'foo'</span>))</span><br></pre></td></tr></table></figure>
<h2 id="promise-reject">Promise.reject()</h2>
<p>Promise.reject(reason)方法也会返回一个新的 Promise 实例，该实例的状态为rejected。<br>
注意，Promise.reject()方法的参数，会原封不动地作为reject的理由，变成后续方法的参数。这一点与Promise.resolve方法不一致。</p>
<h2 id="promise-try">Promise.try()</h2>
<p>实际开发中，经常遇到一种情况：不知道或者不想区分，函数f是同步函数还是异步操作，但是想用 Promise 来处理它。因为这样就可以不管f是否包含异步操作，都用then方法指定下一步流程，用catch方法处理f抛出的错误。一般就会采用下面的写法。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Promise</span>.resolve().then(f)</span><br></pre></td></tr></table></figure>
<p>上面的写法有一个缺点，就是如果f是同步函数，那么它会在本轮事件循环的末尾执行。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> f = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'now'</span>);</span><br><span class="line"><span class="built_in">Promise</span>.resolve().then(f);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'next'</span>);</span><br><span class="line"><span class="comment">// next</span></span><br><span class="line"><span class="comment">// now</span></span><br></pre></td></tr></table></figure>
<p>上面代码中，函数f是同步的，但是用 Promise 包装了以后，就变成异步执行了。</p>
<p>那么有没有一种方法，让同步函数同步执行，异步函数异步执行，并且让它们具有统一的 API 呢？回答是可以的，并且还有两种写法。</p>
<h3 id="第一种写法是用async函数来写">第一种写法是用async函数来写。</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> f = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'now'</span>);</span><br><span class="line">(<span class="keyword">async</span> () =&gt; f())();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'next'</span>);</span><br><span class="line"><span class="comment">// now</span></span><br><span class="line"><span class="comment">// next</span></span><br></pre></td></tr></table></figure>
<p>上面代码中，第二行是一个立即执行的匿名函数，会立即执行里面的async函数，因此如果f是同步的，就会得到同步的结果；如果f是异步的，就可以用then指定下一步，就像下面的写法。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">async</span> () =&gt; f())()</span><br><span class="line">.then(...)</span><br></pre></td></tr></table></figure>
<p>需要注意的是，async () =&gt; f()会吃掉f()抛出的错误。所以，如果想捕获错误，要使用promise.catch方法。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">(<span class="keyword">async</span> () =&gt; f())()</span><br><span class="line">.then(...)</span><br><span class="line">.catch(...)</span><br></pre></td></tr></table></figure>
<h3 id="第二种写法是使用new-promise">第二种写法是使用new Promise()。</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> f = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'now'</span>);</span><br><span class="line">(</span><br><span class="line">  () =&gt; <span class="keyword">new</span> <span class="built_in">Promise</span>(</span><br><span class="line">    resolve =&gt; resolve(f())</span><br><span class="line">  )</span><br><span class="line">)();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'next'</span>);</span><br><span class="line"><span class="comment">// now</span></span><br><span class="line"><span class="comment">// next</span></span><br></pre></td></tr></table></figure>
<p>上面代码也是使用立即执行的匿名函数，执行new Promise()。这种情况下，同步函数也是同步执行的。</p>
<p>鉴于这是一个很常见的需求，所以现在有一个提案，提供Promise.try方法替代上面的写法。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> f = <span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'now'</span>);</span><br><span class="line"><span class="built_in">Promise</span>.try(f);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'next'</span>);</span><br><span class="line"><span class="comment">// now</span></span><br><span class="line"><span class="comment">// next</span></span><br></pre></td></tr></table></figure>
<p>事实上，Promise.try存在已久，Promise 库Bluebird、Q和when，早就提供了这个方法。</p>
<p>由于Promise.try为所有操作提供了统一的处理机制，所以如果想用then方法管理流程，最好都用Promise.try包装一下。这样有许多好处，其中一点就是可以更好地管理异常。</p>
<p>function getUsername(userId) {<br>
return database.users.get({id: userId})<br>
.then(function(user) {<br>
return <a href="http://user.name" target="_blank" rel="noopener">user.name</a>;<br>
});<br>
}<br>
上面代码中，database.users.get()返回一个 Promise 对象，如果抛出异步错误，可以用catch方法捕获，就像下面这样写。</p>
<p>database.users.get({id: userId})<br>
.then(…)<br>
.catch(…)<br>
但是database.users.get()可能还会抛出同步错误（比如数据库连接错误，具体要看实现方法），这时你就不得不用try…catch去捕获。</p>
<p>try {<br>
database.users.get({id: userId})<br>
.then(…)<br>
.catch(…)<br>
} catch (e) {<br>
// …<br>
}<br>
上面这样的写法就很笨拙了，这时就可以统一用promise.catch()捕获所有同步和异步的错误。</p>
<p>Promise.try(() =&gt; database.users.get({id: userId}))<br>
.then(…)<br>
.catch(…)<br>
事实上，Promise.try就是模拟try代码块，就像promise.catch模拟的是catch代码块。</p>
<h1 id="reference-links">Reference Links:</h1>
<ul>
<li><a href="http://es6.ruanyifeng.com/#docs/promise" target="_blank" rel="noopener">ES6 Book </a></li>
</ul>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>ES6</category>
      </categories>
      <tags>
        <tag>Promise</tag>
      </tags>
  </entry>
  <entry>
    <title>HTTP CORS</title>
    <url>/HTTP-CORS.html</url>
    <content><![CDATA[<p>Reference Links里的两篇文章讲述的已经很详细了。简单列一下：</p>
<h1 id="0-cors">0 CORS</h1>
<p>简单说就是从A网址（origin (domain) ）向B网址发送请求，称为跨域。从A网址向A网址发送请求就是，同域。</p>
<h2 id="a-与-b-什么不同？">A 与 B 什么不同？</h2>
<p>不同的域、协议或端口。</p>
<p><img src="https://mdn.mozillademos.org/files/14295/CORS_principle.png" alt="CORS"></p>
<h1 id="1-简单请求-simple-request">1. 简单请求（simple request）</h1>
<blockquote>
<p>（1) 请求方法是以下三种方法之一：</p>
<ul>
<li>HEAD</li>
<li>GET</li>
<li>POST</li>
</ul>
</blockquote>
<blockquote>
<p>（2）HTTP的头信息不超出以下几种字段：</p>
<ul>
<li>Accept</li>
<li>Accept-Language</li>
<li>Content-Language</li>
<li>Last-Event-ID</li>
<li>Content-Type：只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/ plain</li>
<li>DPR</li>
<li>Downlink</li>
<li>Save-Data</li>
<li>Viewport-Width</li>
<li>Width</li>
</ul>
</blockquote>
<blockquote>
<p>（3）请求中的任意XMLHttpRequestUpload 对象均没有注册任何事件监听器；XMLHttpRequestUpload 对象可以使用 XMLHttpRequest.upload 属性访问。<br>
（4）请求中没有使用 ReadableStream 对象。</p>
</blockquote>
<p>假如站点 <a href="http://Server-b.com" target="_blank" rel="noopener">http://Server-b.com</a> 的网页应用想要访问 <a href="http://bar.other" target="_blank" rel="noopener">http://bar.other</a> 的资源。<br>
A向B请求，那么A就是Orign.<br>
<img src="https://mdn.mozillademos.org/files/14293/simple_req.png" alt="简单请求（simple request）"></p>
<h1 id="2-非简单请求-not-so-simple-request">2. 非简单请求（not-so-simple request）</h1>
<blockquote>
<p>非简单请求是那种对服务器有特殊要求的请求，比如请求方法是PUT或DELETE，或者Content-Type字段的类型是application/json。</p>
</blockquote>
<blockquote>
<p>（1) 使用了下面任一 HTTP 方法：</p>
<ul>
<li>PUT</li>
<li>DELETE</li>
<li>CONNECT</li>
<li>OPTIONS</li>
<li>TRACE</li>
<li>PATCH</li>
</ul>
</blockquote>
<blockquote>
<p>（2) 人为设置了对 CORS 安全的首部字段集合之外的其他首部字段。该集合为：</p>
<ul>
<li>Accept</li>
<li>Accept-Language</li>
<li>Content-Language</li>
<li>Content-Type (需要注意额外的限制)</li>
<li>DPR</li>
<li>Downlink</li>
<li>Save-Data</li>
<li>Viewport-Width</li>
<li>Width</li>
</ul>
</blockquote>
<blockquote>
<p>（3) Content-Type 的值不属于下列之一:</p>
<ul>
<li>application/x-www-form-urlencoded</li>
<li>multipart/form-data</li>
<li>text/plain</li>
</ul>
</blockquote>
<blockquote>
<p>（4) 请求中的XMLHttpRequestUpload 对象注册了任意多个事件监听器。</p>
</blockquote>
<blockquote>
<p>（5) 请求中使用了ReadableStream对象。</p>
</blockquote>
<p>假如站点 <a href="http://foo.example" target="_blank" rel="noopener">http://foo.example</a> 的网页应用想要访问 <a href="http://bar.other" target="_blank" rel="noopener">http://bar.other</a> 的资源。</p>
<p><img src="https://mdn.mozillademos.org/files/16753/preflight_correct.png" alt="预检请求+真实请求"></p>
<h2 id="2-1-预检请求-option">2.1 预检请求 OPTION</h2>
<p>OPTION 由于跨域请求被拦截，返回503：<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/HTTP-CORS/OPTION%20503.png" alt="OPTION 503"></p>
<p>Error:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Access to XMLHttpRequest at <span class="string">'https://B'</span> <span class="keyword">from</span> origin <span class="string">'https://A'</span> </span><br><span class="line">has been blocked by CORS policy: </span><br><span class="line">Response to preflight request doesn<span class="string">'t pass access control check: It does not have HTTP ok status.</span></span><br></pre></td></tr></table></figure>
<h2 id="2-2-真实请求">2.2 真实请求</h2>
<h1 id="3-附带身份凭证的请求">3 附带身份凭证的请求</h1>
<blockquote>
<p>它其实必然是1 简单请求（simple request）2. 非简单请求（not-so-simple request）的其中一种。只是多加了对Cookie和HTTP认证信息的判断。<br>
CORS请求默认不发送Cookie和HTTP认证信息。如果要把Cookie发到服务器，一方面要服务器同意，指定Access-Control-Allow-Credentials字段。</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Access-Control-Allow-Credentials: <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>另一方面，开发者必须在AJAX请求中打开withCredentials属性。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">xhr.withCredentials = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure>
<p>否则，即使服务器同意发送Cookie，浏览器也不会发送。或者，服务器要求设置Cookie，浏览器也不会处理。</p>
<p>但是，如果省略withCredentials设置，有的浏览器还是会一起发送Cookie。这时，可以显式关闭withCredentials。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">xhr.withCredentials = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure>
<p>A向B请求。<code>需要注意的是，如果要发送Cookie，Access-Control-Allow-Origin就不能设为星号，必须指定明确的、与请求网页A一致的域名。</code>否则报错：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">Access to XMLHttpRequest at <span class="string">'https://B'</span> <span class="keyword">from</span> origin <span class="string">'https://A'</span> has been blocked by CORS policy: </span><br><span class="line">The value <span class="keyword">of</span> the <span class="string">'Access-Control-Allow-Origin'</span> header <span class="keyword">in</span> the response must not be </span><br><span class="line">the wildcard <span class="string">'*'</span> when the request<span class="string">'s credentials mode is '</span>include<span class="string">'.</span></span><br><span class="line"><span class="string">The credentials mode of requests initiated by the XMLHttpRequest </span></span><br><span class="line"><span class="string">is controlled by the withCredentials attribute.</span></span><br></pre></td></tr></table></figure>
<p>同时，Cookie依然遵循同源政策，只有用服务器域名B设置的Cookie才会上传，其他域名的Cookie并不会上传，且（跨源）原网页A代码中的document.cookie也无法读取服务器域名下的Cookie。</p>
<p><img src="https://mdn.mozillademos.org/files/14291/cred-req.png" alt="附带身份凭证的请求"></p>
<h1 id="总结流程">总结流程</h1>
<p>来源：<a href="https://github.com/amandakelake/blog/issues/62" target="_blank" rel="noopener">CORS 简单请求+预检请求（彻底理解跨域）</a><br>
<img src="https://user-images.githubusercontent.com/25027560/50205881-c409b080-03a4-11e9-8a57-a2a6d0e1d879.png" alt="CORS请求流程"></p>
<h1 id="reference-links">Reference Links:</h1>
<p><a href="http://www.ruanyifeng.com/blog/2016/04/cors.html" target="_blank" rel="noopener">跨域资源共享 CORS 详解</a><br>
<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Access_control_CORS" target="_blank" rel="noopener">HTTP访问控制（CORS）</a><br>
<a href="https://github.com/amandakelake/blog/issues/62" target="_blank" rel="noopener">CORS 简单请求+预检请求（彻底理解跨域）</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Network</category>
        <category>Servlet/HTTP</category>
      </categories>
      <tags>
        <tag>CORS</tag>
      </tags>
  </entry>
  <entry>
    <title>React all articles</title>
    <url>/React-all-articles.html</url>
    <content><![CDATA[<p><a href="../React-16-New-feature-Summary-Links.html">React 16 new feature</a><br>
<a href="https://juejin.im/post/5c7df2e7f265da2d8a55d49d" target="_blank" rel="noopener">【React深入】React事件机制</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>React</category>
      </categories>
      <tags>
        <tag>Links</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown表格中单元格合并</title>
    <url>/Markdown%E8%A1%A8%E6%A0%BC%E4%B8%AD%E5%8D%95%E5%85%83%E6%A0%BC%E5%90%88%E5%B9%B6.html</url>
    <content><![CDATA[<ul>
<li><a href="https://3nice.cc/2018/10/01/markdowntable/" target="_blank" rel="noopener">解决在Markdown中的表格单元格合并的问题</a></li>
<li><a href="https://www.zhihu.com/question/50267650" target="_blank" rel="noopener">markdown的表格语法能合并单元格吗？</a><br>
<a href="https://blog.csdn.net/loongshawn/article/details/72829090" target="_blank" rel="noopener">Markdown表格之合并单元格效果</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>React 16 - DOM Attributes</title>
    <url>/React-16-DOM-Attributes.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>React</category>
      </categories>
      <tags>
        <tag>React 16</tag>
      </tags>
  </entry>
  <entry>
    <title>React 16 - Portal</title>
    <url>/React-16-Portal.html</url>
    <content><![CDATA[<p>转<a href="https://zhuanlan.zhihu.com/p/29880992" target="_blank" rel="noopener">传送门：React Portal</a>， 在这个基础上做了小的修改。</p>
<p>似乎所有说React Portal都直接用Portal这个单词，没听过这词的朋友可能觉得不知所云，其实，Portal可以有一个很形象的翻译——“传送门”。</p>
<h2 id="什么是传送门？">什么是传送门？</h2>
<p>曾经有一款游戏就叫做Portal，玩家手上一杆很厉害很科幻的枪，朝墙上开一枪，就可以开出两个“传送门”，人钻进这个传送门，可以从另一个传送门里走出来，也就是说，两个不同位置的传送门之间形成了对接。</p>
<p><img src="https://pic4.zhimg.com/80/v2-a650d2d42e0ed880c4413340ec961a27_hd.jpg" alt="传送门"></p>
<p>如果还不明白Portal是啥，那就拿范冰冰在《X战警：逆转未来》所演角色的GIF动图来看吧。<br>
<img src="https://pic1.zhimg.com/v2-89a003124def7b845832f3789ba8c4e8_b.jpg" alt="《X战警：逆转未来》"></p>
<p>你看一个哨兵机器人扑过来攻击一个X战警，范冰冰从一个传送门里神速穿越而来，顺手又甩出两个传送门，让哨兵机器人扑进了一个传送门，从另一个传送门一个踉跄掉了出来，从而救了那个X战警。</p>
<p>现在明白Portal是怎么回事了吧。</p>
<h2 id="为什么react需要传送门？">为什么React需要传送门？</h2>
<p>React Portal之所以叫Portal，因为做的就是和“传送门”一样的事情：<strong>render到一个组件里面去，实际改变的是网页上另一处的DOM结构</strong>。</p>
<p>在React的世界中，一切都是组件，用组件可以表示一切界面中发生的逻辑，不过，有些特例处理起来还比较麻烦，比如，某个组件在渲染时，在某种条件下需要显示一个对话框(Dialog)，这该怎么做呢？</p>
<p>最直观的做法，就是直接在JSX中把Dialog画出来，像下面代码的样子。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"foo"</span>&gt;</span><br><span class="line">   &lt;div&gt; ... &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">   &#123; needDialog ? &lt;Dialog /</span>&gt; : <span class="literal">null</span> &#125;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure>
<p>问题是，我们写一个Dialog组件，就这么渲染的话，Dialog最终渲染产生的HTML就存在于上面JSX产生的HTML一起了，类似下面这样。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"foo"</span>&gt;</span><br><span class="line">   &lt;div&gt; ... &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">   &lt;div class="dialog"&gt;Dialog Content&lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure>
<p>可是问题来了，对于对话框，从用户感知角度，应该是一个独立的组件，通常应该显示在屏幕的最中间，现在Dialog被包在其他组件中，要用CSS的position属性控制Dialog位置，就要求从Dialog往上一直到body没有其他postion是relative的元素干扰，这……有点难为作为通用组件的Dialog，毕竟，谁管得住所有组件不用position呢。</p>
<p>还有一点，Dialog的样式，因为包在其他元素中，各种样式纠缠，CSS样式太容易搞成一坨浆糊了。</p>
<h3 id="when-to-use-react传送门？-liyuankun-增加">When to use React传送门？【liyuankun 增加】</h3>
<p>当父组件样式有 overflow: hidden 或者 z-index，但是你需要子组件看起来“break out”它所在的container. 例如dialogs, hover cards 和 tool-tips.</p>
<h3 id="react-16-之前怎么实现传送门？">React 16 之前怎么实现传送门？</h3>
<p>看样子这样搞局限很多啊，行不通，有没有其他办法？</p>
<h4 id="通过redux或者其他通讯方式">通过Redux或者其他通讯方式</h4>
<p>有一个其他办法，就是在React组件树的最顶层留一个元素专属于Dialog，然后通过Redux或者其他什么通讯方式给这个Dialog发送信号，让Dialog显示或者不显示。<br>
<img src="https://pic1.zhimg.com/80/v2-4022e89a8d7a22461e426cf6c653e18c_hd.jpg" alt="Dialog"><br>
这种方法看起来还凑合着，但是，就这点事还要动用Redux有点高射炮打蚊子，而且，要控制两个不用位置的组件，好麻烦。</p>
<p>而且，如果我们把Dialog做成一个通用组件，希望里面的内容完全定制，这招就更加麻烦了。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"foo"</span>&gt;</span><br><span class="line">  &lt;div&gt; ... &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &#123; needDialog ? </span></span><br><span class="line"><span class="regexp">    &lt;Dialog&gt; </span></span><br><span class="line"><span class="regexp">       &lt;header&gt;Any Header&lt;/</span>header&gt;</span><br><span class="line">       &lt;section&gt;Any content&lt;<span class="regexp">/section&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>Dialog&gt;</span><br><span class="line">    : <span class="literal">null</span> &#125;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure>
<p>像上面那样，我们既希望在组件的JSX中选择使用Dialog，把Dialog用得像一个普通组件一样，但是又希望Dialog内容显示在另一个地方，就需要Portal上场了。</p>
<p>Portal就是建立一个“传送门”，让Dialog这样的组件在表示层和其他组件没有任何差异，但是渲染的东西却像经过传送门一样出现在另一个地方。</p>
<h4 id="react-15-api">React 15 API</h4>
<p>React在v16之前的传送门实现方法<br>
在v16之前，实现“传送门”，要用到两个秘而不宣的React API</p>
<ul>
<li>unstable_renderSubtreeIntoContainer</li>
<li>unmountComponentAtNode</li>
</ul>
<p>第一个unstable_renderSubtreeIntoContainer，都带上前缀unstable了，就知道并不鼓励使用，但是没办法啊，不用也得用，还好React一直没有deprecate这个API，一直挺到v16直接支持portal。这个API的作用就是建立“传送门”，可以把JSX代表的组件结构塞到传送门里面去，让他们在传送门的另一端渲染出来。</p>
<p>第二个unmountComponentAtNode用来清理第一个API的副作用，通常在unmount的时候调用，不调用的话会造成资源泄露的。</p>
<p>一个通用的Dialog组件的实现差不多是这样，注意看renderPortal中的注释。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;unstable_renderSubtreeIntoContainer, unmountComponentAtNode&#125; </span><br><span class="line">  <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dialog</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentDidMount() &#123;</span><br><span class="line">    <span class="keyword">const</span> doc = <span class="built_in">window</span>.document;</span><br><span class="line">    <span class="keyword">this</span>.node = doc.createElement(<span class="string">'div'</span>);</span><br><span class="line">    doc.body.appendChild(<span class="keyword">this</span>.node);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.renderPortal(<span class="keyword">this</span>.props);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentDidUpdate() &#123;</span><br><span class="line">    <span class="keyword">this</span>.renderPortal(<span class="keyword">this</span>.props);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentWillUnmount() &#123;</span><br><span class="line">    unmountComponentAtNode(<span class="keyword">this</span>.node);</span><br><span class="line">    <span class="built_in">window</span>.document.body.removeChild(<span class="keyword">this</span>.node);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  renderPortal(props) &#123;</span><br><span class="line">    unstable_renderSubtreeIntoContainer(</span><br><span class="line">      <span class="keyword">this</span>, <span class="comment">//代表当前组件</span></span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"dialog"</span>&gt;</span><br><span class="line">        &#123;props.children&#125;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;, /</span><span class="regexp">/ 塞进传送门的JSX</span></span><br><span class="line"><span class="regexp">      this.node /</span><span class="regexp">/ 传送门另一端的DOM node</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>
<p>首先，render函数不要返回有意义的JSX，也就说说这个组件通过正常生命周期什么都不画，要是画了，那画出来的HTML/DOM就直接出现在使用Dialog的位置了，这不是我们想要的。</p>
<p>在componentDidMount里面，利用原生API来在body上创建一个div，这个div的样式绝对不会被其他元素的样式干扰。</p>
<p>然后，无论componentDidMount还是componentDidUpdate，都调用一个renderPortal来往“传送门”里塞东西。</p>
<p>总结，这个Dialog组件做得事情是这样：</p>
<ol>
<li>它什么都不给自己画，render返回一个null就够了；</li>
<li>它做得事情是通过调用renderPortal把要画的东西画在DOM树上另一个角落。</li>
</ol>
<p>在renderPortal中，利用unstable_renderSubtreeIntoContainer函数往直前创建的div里塞JSX，这里我们用的JSX是这样。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"dialog"</span>&gt;</span><br><span class="line">     &#123;props.children&#125;</span><br><span class="line"> &lt;<span class="regexp">/div&gt;</span></span><br></pre></td></tr></table></figure>
<p>因为是吧children画出来，所以使用Dialog可以加上任意的子组件。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;Dialog&gt;</span><br><span class="line">     What ever shit</span><br><span class="line">     &lt;div&gt;Hello&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">     &lt;p&gt;World&lt;/</span>p&gt;</span><br><span class="line"> &lt;<span class="regexp">/Dialog&gt;</span></span><br></pre></td></tr></table></figure>
<p>你看，所谓React Portal，就是能够表面上渲染在一个地方，实际上渲染到了另一个地方。<br>
<img src="https://pic4.zhimg.com/80/v2-60771cc0b94e780ca29bdd72f2761d57_hd.jpg" alt="Portal"></p>
<p>是不是感觉好厉害，不光好厉害，而且像Dialog这样的场景Portal简直就是必不可少。</p>
<p>到了v16，React干脆直接支持Portal，当然，v15还将被使用一段时间，所以大家看了上面的内容也不算浪费时间:-)</p>
<h2 id="react-v16的portal支持">React v16的Portal支持</h2>
<p>在v16中，使用Portal创建Dialog组件简单多了，不需要牵扯到componentDidMount、componentDidUpdate，也不用调用API清理Portal，关键代码在render中，像下面这样就行。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;createPortal&#125; <span class="keyword">from</span> <span class="string">'react-dom'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dialog</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>() &#123;</span><br><span class="line">    <span class="keyword">super</span>(...arguments);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> doc = <span class="built_in">window</span>.document;</span><br><span class="line">    <span class="keyword">this</span>.node = doc.createElement(<span class="string">'div'</span>);</span><br><span class="line">    doc.body.appendChild(<span class="keyword">this</span>.node);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">return</span> createPortal(</span><br><span class="line">      &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"dialog"</span>&gt;</span><br><span class="line">        &#123;<span class="keyword">this</span>.props.children&#125;</span><br><span class="line">      &lt;<span class="regexp">/div&gt;, /</span><span class="regexp">/塞进传送门的JSX</span></span><br><span class="line"><span class="regexp">      this.node /</span><span class="regexp">/传送门的另一端DOM node</span></span><br><span class="line"><span class="regexp">    );</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  componentWillUnmount() &#123;</span></span><br><span class="line"><span class="regexp">    window.document.body.removeChild(this.node);</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>
<p>v16提供createPortal函数来创建“传送门”，我个人觉得这个函数应该叫renderPortal好一些，因为组件的render函数除了mount时会被调用，update时也会被调用，update时还叫createPortal有点不大合适。</p>
<h2 id="穿越portal的事件冒泡">穿越Portal的事件冒泡</h2>
<p>v16之前的React Portal实现方法，有一个小小的缺陷，就是Portal是单向的，内容通过Portal传到另一个出口，在那个出口DOM上发生的事件是不会冒泡传送回进入那一端的。</p>
<p>也就是说，这样的代码。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div onClick=&#123;onDialogClick&#125;&gt;   </span><br><span class="line">   &lt;Dialog&gt;</span><br><span class="line">     What ever shit</span><br><span class="line">   &lt;<span class="regexp">/Dialog&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>
<p>在Dialog画出的内容上点击，onDialogClick是不会被触发的。</p>
<p>当然，这只是一个小小的缺陷，大部分场景下事件不传过来也没什么大问题。</p>
<p>在v16中，通过Portal渲染出去的DOM，事件是会冒泡从传送门的入口端冒出来的，上面的onDialogClick也就会被调用到了。</p>
<h3 id="why事件冒泡可以到react-parent-liyuankun-增加">why事件冒泡可以到react parent 【liyuankun 增加】</h3>
<p>可以看这个例子：<a href="https://codepen.io/catherineliyuankun/pen/oNvpxKv" target="_blank" rel="noopener">Dialog 嵌套 Dialog demo</a></p>
<p>从真实的DOM结构上来看，Dialog组件中的onClick事件不应该被</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span>Here contain Dialog:<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>组件捕获。<br>
但从虚拟DOM的结构上来看，Dialog却是&quot;container&quot;组件的子节点，事件冒泡是遵循虚拟DOM的.</p>
<p>真实的DOM结构:<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/React-16-Portal/Real%20Dom%201.png" alt="真实的DOM结构1"><br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/React-16-Portal/Real%20Dom%202.png" alt="真实的DOM结构2"></p>
<p>虚拟DOM的结构:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div onClick=&#123;onDialogClick&#125;&gt;</span><br><span class="line">  &lt;div className=<span class="string">"container"</span>&gt;</span><br><span class="line">    Here contain Dialog:</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;Dialog onClick=&#123;onDialog1Click&#125;&gt;</span></span><br><span class="line"><span class="regexp">     &lt;div&gt;Dialog 1&lt;/</span>div&gt;</span><br><span class="line">      &lt;Dialog onClick=&#123;onDialog2Click&#125;&gt;</span><br><span class="line">        &lt;div&gt;Dialog <span class="number">2</span> Inside Dialog <span class="number">1</span> &lt;<span class="regexp">/div&gt;    </span></span><br><span class="line"><span class="regexp">      &lt;/</span>Dialog&gt;</span><br><span class="line">  &lt;<span class="regexp">/Dialog&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br></pre></td></tr></table></figure>
<h2 id="总结">总结</h2>
<p>React v16直接支持Portal，是因为Portal这个功能真的是必不可少，不然对话框这样的场景都没法应付。</p>
<h2 id="reference-links">Reference Links</h2>
<ul>
<li><a href="https://react.docschina.org/docs/portals.html" target="_blank" rel="noopener">官网文档中文版</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/29880992" target="_blank" rel="noopener">传送门：React Portal</a></li>
<li><a href="https://www.beautifulcode.co/blog/46-understanding-portals-in-react" target="_blank" rel="noopener">Understanding Portals in React</a></li>
</ul>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>React</category>
      </categories>
      <tags>
        <tag>React 16</tag>
      </tags>
  </entry>
  <entry>
    <title>React 16 - New feature Summary Links</title>
    <url>/React-16-New-feature-Summary-Links.html</url>
    <content><![CDATA[<p>React<br>
<a href="https://github.com/facebook/react/blob/master/CHANGELOG.md" target="_blank" rel="noopener">https://github.com/facebook/react/blob/master/CHANGELOG.md</a></p>
<p>Version	Feature	Host	Tech Article<br>
16.0.0 (September 26, 2017)</p>
<table>
<thead>
<tr>
<th>Version</th>
<th>Feature</th>
<th>Article Links</th>
</tr>
</thead>
<tbody>
<tr>
<td>16.0.0 (September 26, 2017)</td>
<td><a href="https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html" target="_blank" rel="noopener">Error boundaries</a></td>
<td><a href="../React-16-Error-Handling.html">Error boundaries</a></td>
</tr>
<tr>
<td>-</td>
<td>First-class support for declaratively rendering a subtree into another DOM node with <a href="https://reactjs.org/docs/portals.html#event-bubbling-through-portals" target="_blank" rel="noopener">ReactDOM.createPortal()</a></td>
<td><a href="../React-16-Portal.html">Portal</a></td>
</tr>
<tr>
<td>-</td>
<td><a href="https://reactjs.org/blog/2017/09/08/dom-attributes-in-react-16.html" target="_blank" rel="noopener">React DOM now allows passing non-standard attributes</a></td>
<td>DOM Attributes</td>
</tr>
<tr>
<td>16.2.0 (November 28, 2017)</td>
<td><a href="https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html" target="_blank" rel="noopener">Improved Support for Fragments</a></td>
<td>Fragments</td>
</tr>
<tr>
<td><a href="https://reactjs.org/blog/2018/03/29/react-v-16-3.html" target="_blank" rel="noopener">16.3.0 (March 29, 2018)</a></td>
<td><a href="https://reactjs.org/docs/context.html#contextprovider" target="_blank" rel="noopener">New officially supported context API</a></td>
<td>context API</td>
</tr>
<tr>
<td>16.2.0 (November 28, 2017)</td>
<td><a href="https://reactjs.org/docs/react-api.html#reactcreateref" target="_blank" rel="noopener">New React.createRef()</a></td>
<td>React.createRef</td>
</tr>
<tr>
<td>-</td>
<td><a href="https://reactjs.org/docs/react-api.html#reactforwardref" target="_blank" rel="noopener">New React.forwardRef()</a></td>
<td>React.forwardRef</td>
</tr>
<tr>
<td>-</td>
<td><a href="https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html" target="_blank" rel="noopener">StrictMode Component</a></td>
<td>Fragments</td>
</tr>
<tr>
<td>-</td>
<td>New lifecycles Add a new getDerivedStateFromProps() lifecycle and UNSAFE_ aliases for the legacy lifecycles.</td>
<td></td>
</tr>
</tbody>
</table>
<p>Add a new getSnapshotBeforeUpdate() lifecycle.<br>
<a href="https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html" target="_blank" rel="noopener">https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html</a> <a href="https://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html" target="_blank" rel="noopener">Improved Support for Fragments</a> | Fragments</p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>React</category>
      </categories>
      <tags>
        <tag>React 16</tag>
      </tags>
  </entry>
  <entry>
    <title>React 16 - Error Handling</title>
    <url>/React-16-Error-Handling.html</url>
    <content><![CDATA[<h2 id="react-15：">React 15：</h2>
<p>渲染过程中有出错，直接crash整个页面，并且错误信息不明确，可读性差.<br>
一旦某个组件发生错误，整个组件树将会从根节点被unmount下来。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BuggyCounter</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123; <span class="attr">counter</span>: <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">this</span>.handleClick = <span class="keyword">this</span>.handleClick.bind(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  componentWillMount() &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'I am crash'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  handleClick() &#123;</span><br><span class="line">    <span class="keyword">this</span>.setState(<span class="function">(<span class="params">&#123;counter&#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      counter: counter + <span class="number">1</span></span><br><span class="line">    &#125;));</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.state.counter === <span class="number">5</span>) &#123;</span><br><span class="line">      <span class="comment">// Simulate a JS error</span></span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'I crashed!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleClick&#125;</span>&gt;</span>&#123;this.state.counter&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        &lt;b&gt;</span><br><span class="line">          This is an example <span class="keyword">of</span> error boundaries <span class="keyword">in</span> React <span class="number">16.</span></span><br><span class="line">          &lt;br /&gt;<span class="xml"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="xml">          Click on the numbers to increase the counters.</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="xml">          The counter is programmed to throw when it reaches 5. This simulates a JavaScript error in a component.</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">      &lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">      &lt;hr /</span>&gt;</span><br><span class="line">        &lt;p&gt;These two counters are inside the same error boundary. If one crashes, the error boundary will replace both <span class="keyword">of</span> them.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">        &lt;BuggyCounter /</span>&gt;</span><br><span class="line">      &lt;hr /&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">ReactDOM.render(</span></span><br><span class="line"><span class="regexp">  &lt;App /</span>&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h3 id="demo地址"><a href="https://codepen.io/anon/pen/ErBjZM?editors=0010" target="_blank" rel="noopener">demo地址</a></h3>
<p>比如上面这个App，可以看到子组件BuggyCounter出了点问题，在没有Error Boundary的时候，整个App都会crash掉，所以显示白屏。</p>
<h2 id="react-16：">React 16：</h2>
<p>React之前没有提供一种合适的处理组件错误的方法，而React16.0中通过Error Boundaries来处理组件内部的错误，从而可以修正错误组件。<br>
用于捕获子组件树的组件异常（即错误边界只可以捕获组件在树中比他低的组件错误。），记录错误并展示一个用Error Boundary提供的内容替代错误组件。</p>
<h3 id="捕获范围：">捕获范围：</h3>
<p>渲染期间<br>
生命周期内<br>
整个组件树构造函数内</p>
<h3 id="如何使用：">如何使用：</h3>
<p>最佳实践：</p>
<ul>
<li>如果一个 class 组件中定义了 static getDerivedStateFromError() 或 componentDidCatch() 这两个生命周期方法中的任意一个（或两个）时，那么它就变成一个错误边界。当抛出错误后，请使用 static getDerivedStateFromError() 渲染备用 UI ，使用 componentDidCatch() 打印错误信息。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ErrorBoundary</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123; <span class="attr">hasError</span>: <span class="literal">false</span> &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> getDerivedStateFromError(error) &#123;</span><br><span class="line">    <span class="comment">// 更新 state 使下一次渲染能够显示降级后的 UI</span></span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">hasError</span>: <span class="literal">true</span> &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentDidCatch(error, info) &#123;</span><br><span class="line">    <span class="comment">// 你同样可以将错误日志上报给服务器</span></span><br><span class="line">    logErrorToMyService(error, info);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.state.hasError) &#123;</span><br><span class="line">      <span class="comment">// 你可以自定义降级后的 UI 并渲染</span></span><br><span class="line">      <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Something went wrong.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.props.children; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>将ErrorBoundary抽象为一个公用的组件类， 我们可以在容易出错的组件外使用ErrorBoundary将它包裹起来。</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;ErrorBoundary&gt;</span><br><span class="line">  &lt;MyWidget /&gt;</span><br><span class="line">&lt;<span class="regexp">/ErrorBoundary&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="componentdidcatch-生命周期函数">componentDidCatch（）生命周期函数</h3>
<p>componentDidCatch是一个新的生命周期函数，当组件有了这个生命周期函数，就成为了一个Error Boundaries。下面我们来看componnetDidCatch()中的参数：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">componentDidCatch(error, info) &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>error参数，表示的是被抛出的错误的信息，而info是一个对象包含了组件堆栈中的信息（也就是在发生错误的子组件中层层传递错误信息，到顶层的Error Boundaries，每一层中的组件名）。</p>
<h3 id="component-stack-traces">Component Stack Traces</h3>
<p>下面我们来看组件堆栈轨迹，我们假设这样一个结构：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;App&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">      &lt;ErrorBoundary&gt;</span><br><span class="line">        &lt;Child&gt;<span class="xml"><span class="tag">&lt;/<span class="name">Child</span>&gt;</span></span></span><br><span class="line">      &lt;<span class="regexp">/ErrorBoundary&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/App&gt;</span></span><br></pre></td></tr></table></figure>
<p>如果在Child组件中发生了js错误，那么堆栈的报错信息应该如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">the error is located at :</span><br><span class="line">     <span class="keyword">in</span> Child  (created by App)</span><br><span class="line">     <span class="keyword">in</span> ErrorBoundary(created by App)</span><br><span class="line">     <span class="keyword">in</span> div (created by App)</span><br><span class="line">     <span class="keyword">in</span> App</span><br></pre></td></tr></table></figure>
<p>如果需要报错信息显示错误组件所在的具体的行数和位置，可以使用babel-plugin-transform-react-jsx-source插件。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 先定一个组件ErrorBoundary</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ErrorBoundary</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123; <span class="attr">error</span>: <span class="literal">null</span>, <span class="attr">errorInfo</span>: <span class="literal">null</span> &#125;;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  componentDidCatch(error, errorInfo) &#123;</span><br><span class="line">    <span class="comment">// Catch errors in any components below and re-render with error message</span></span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">      error: error,</span><br><span class="line">      errorInfo: errorInfo</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// You can also log error messages to an error reporting service here</span></span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="comment">// 有错误的时候展示回退</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.state.errorInfo) &#123;</span><br><span class="line">      <span class="comment">// Error path</span></span><br><span class="line">      <span class="keyword">return</span> (</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">          &lt;h2&gt;Something went wrong.&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">          &lt;details style=&#123;&#123; whiteSpace: 'pre-wrap' &#125;&#125;&gt;</span></span><br><span class="line"><span class="regexp">            &#123;this.state.error &amp;&amp; this.state.error.toString()&#125;</span></span><br><span class="line"><span class="regexp">            &lt;br /</span>&gt;</span><br><span class="line">            &#123;<span class="keyword">this</span>.state.errorInfo.componentStack&#125;</span><br><span class="line">          &lt;<span class="regexp">/details&gt;</span></span><br><span class="line"><span class="regexp">        &lt;/</span>div&gt;</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 正常的话，直接展示组件</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.props.children;</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BuggyCounter</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123; <span class="attr">counter</span>: <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">this</span>.handleClick = <span class="keyword">this</span>.handleClick.bind(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  componentWillMount() &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'I am crash'</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  handleClick() &#123;</span><br><span class="line">    <span class="keyword">this</span>.setState(<span class="function">(<span class="params">&#123;counter&#125;</span>) =&gt;</span> (&#123;</span><br><span class="line">      counter: counter + <span class="number">1</span></span><br><span class="line">    &#125;));</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.state.counter === <span class="number">5</span>) &#123;</span><br><span class="line">      <span class="comment">// Simulate a JS error</span></span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'I crashed!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleClick&#125;</span>&gt;</span>&#123;this.state.counter&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">App</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;p&gt;</span><br><span class="line">        &lt;b&gt;</span><br><span class="line">          This is an example <span class="keyword">of</span> error boundaries <span class="keyword">in</span> React <span class="number">16.</span></span><br><span class="line">          &lt;br /&gt;<span class="xml"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="xml">          Click on the numbers to increase the counters.</span></span><br><span class="line"><span class="xml">          <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="xml">          The counter is programmed to throw when it reaches 5. This simulates a JavaScript error in a component.</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">      &lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">      &lt;hr /</span>&gt;</span><br><span class="line">        &lt;ErrorBoundary&gt;</span><br><span class="line">        &lt;p&gt;These two counters are inside the same error boundary. If one crashes, the error boundary will replace both <span class="keyword">of</span> them.&lt;<span class="regexp">/p&gt;</span></span><br><span class="line"><span class="regexp">        &lt;BuggyCounter /</span>&gt;</span><br><span class="line">        &lt;<span class="regexp">/ErrorBoundary&gt;</span></span><br><span class="line"><span class="regexp">      &lt;hr /</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">ReactDOM.render(</span></span><br><span class="line"><span class="regexp">  &lt;App /</span>&gt;,</span><br><span class="line">  <span class="built_in">document</span>.getElementById(<span class="string">'root'</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h3 id="demo地址-v2"><a href="https://codepen.io/gaearon/pen/wqvxGa?editors=0010" target="_blank" rel="noopener">demo地址</a></h3>
<p>可以看到加上Error Boundary之后，除了出错的组件，其他的地方都不受影响。</p>
<p>而且它很清晰的告诉我们是哪个组件发生了错误。</p>
<h3 id="注意事项：">注意事项：</h3>
<p>Error Boundary无法捕获下面的错误：</p>
<ol>
<li>事件函数里的错误</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyComponent</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123; <span class="attr">error</span>: <span class="literal">null</span> &#125;;</span><br><span class="line">    <span class="keyword">this</span>.handleClick = <span class="keyword">this</span>.handleClick.bind(<span class="keyword">this</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleClick() &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">// Do something that could throw</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">      <span class="keyword">this</span>.setState(&#123; error &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.state.error) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Caught an error.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleClick&#125;</span>&gt;</span>Click Me<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的例子中，handleClick方法里面发生的错误，Error Boundary是捕获不到的。因为它不发生在渲染阶段，所以采用try/catch来捕获。</p>
<ol start="2">
<li>异步代码（例如setTimeout 或 requestAnimationFrame 回调函数）</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">     render() &#123;</span><br><span class="line">        <span class="comment">// 此错误无法被捕获，渲染时组件正常返回 `&lt;div&gt;&lt;/div&gt;`</span></span><br><span class="line">        setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'error'</span>)</span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">        )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>服务端渲染</li>
</ol>
<p>因为服务器渲染不支持Error Boundary</p>
<ol start="4">
<li>Error Boundary自身抛出来的错误 （而不是其子组件）</li>
</ol>
<h3 id="错误边界放在哪里">错误边界放在哪里?</h3>
<p>一般来说，有两个地方：</p>
<ol>
<li>
<p>可以放在顶层，告诉用户有东西出错。但是我个人不建议这样，这感觉失去了错误边界的意义。因为有一个组件出错了，其他正常的也没办法正常显示了</p>
</li>
<li>
<p>包在子组件外面，保护其他应用不崩溃。</p>
</li>
</ol>
<h2 id="reference-links">Reference Links</h2>
<ul>
<li><a href="https://react.docschina.org/docs/error-boundaries.html" target="_blank" rel="noopener">官网文档中文版</a></li>
<li><a href="https://reactjs.org/blog/2017/07/26/error-handling-in-react-16.html" target="_blank" rel="noopener">React Error Handling in React 16</a></li>
<li><a href="https://my.oschina.net/u/2332658/blog/3019283" target="_blank" rel="noopener">React16新特性</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/57544233" target="_blank" rel="noopener">React 16 新特性全解（上）</a></li>
<li><a href="https://blog.csdn.net/liwusen/article/details/78521006" target="_blank" rel="noopener">React 16.0中的新特性——Error Boundaries及其注意点</a></li>
</ul>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>React</category>
      </categories>
      <tags>
        <tag>React 16</tag>
      </tags>
  </entry>
  <entry>
    <title>cryptic abbreviations of Github comments</title>
    <url>/cryptic-abbreviations-of-Github-comments.html</url>
    <content><![CDATA[<p>我们Github code review 的时候第一次遇到这些缩写时，一脸懵逼，一无所知脸的偷偷去搜搜是什么意思？<br>
这里整理一下这些缩写都是什么含义，以后我们也可以欢快地装逼了，装作娴熟的司机们来使用缩写来达到提高逼格的效果~~</p>
<ul>
<li>PR: Pull Request. 拉取请求，给其他项目提交代码</li>
<li>LGTM: Looks Good To Me. <s>朕知道了</s> 代码已review，可以合并</li>
<li>SGTM: Sounds Good To Me. 和上面那句意思差不多，也是已经通过了 review 的意思</li>
<li>ACK — acknowledgement, i.e. agreed/accepted change 同意/接受改动</li>
<li>NACK/NAK —negative acknowledgement, i.e. disagree with change and/or concept 不同意/接受改动</li>
<li>RFC — request for comments, i.e. I think this is a good idea, lets discuss 我觉得不错，你怎么看？</li>
<li>AFAIK/AFAICT — as far as I know / can tell 据我所知</li>
<li>IIRC — if I recall correctly 如果我recall的正确的话</li>
<li>IANAL — “I am not a lawyer”, but I smell licensing issues</li>
<li>WIP: Work In Progress, do not merge yet. 传说中提 PR 的最佳实践是，如果你有个改动很大的 PR，可以在写了一部分的情况下先提交，但是在标题里写上 WIP，以告诉项目维护者这个功能还未完成，方便维护者提前 review 部分提交的代码。</li>
<li>PTAL: Please Take A Look. 你来瞅瞅？用来提示别人来看一下</li>
<li>TBR: To Be Reviewed. 提示维护者进行 review</li>
<li>TL;DR: Too Long; Didn’t Read. 太长懒得看。也有很多文档在做简略描述之前会写这么一句</li>
<li>TBD: To Be Done(or Defined/Discussed/Decided/Determined). 根据语境不同意义有所区别，但一般都是还没搞定的意思</li>
</ul>
<p>有些也使用比特币的黑客术语：</p>
<ul>
<li>Concept ACK — agree with the concept, but haven’t reviewed the changes 理论上同意，但我还没review过。。。</li>
<li>utACK (aka. Untested ACK) — agree with the changes and reviewed them, but didn’t test review过并同意改动，但我没测过~~~</li>
<li>Tested ACK — agree with the changes, reviewed and tested 同意改动，我也review过并测过了</li>
</ul>
<p>Reference links:<br>
<a href="https://farer.org/2017/03/01/code-review-acronyms/" target="_blank" rel="noopener">LGTM? 那些迷之缩写</a><br>
<a href="https://www.freecodecamp.org/news/what-do-cryptic-github-comments-mean-9c1912bcc0a4/" target="_blank" rel="noopener">What do cryptic Github comments mean?</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>SE life</category>
      </categories>
      <tags>
        <tag>git</tag>
        <tag>abbr</tag>
      </tags>
  </entry>
  <entry>
    <title> Mac 上优化储存空间</title>
    <url>/Mac-%E4%B8%8A%E4%BC%98%E5%8C%96%E5%82%A8%E5%AD%98%E7%A9%BA%E9%97%B4.html</url>
    <content><![CDATA[<ol>
<li><a href="https://support.apple.com/zh-cn/guide/system-information/sysp4ee93ca4/mac" target="_blank" rel="noopener">在 Mac 上优化储存空间</a></li>
</ol>
<ol start="2">
<li><a href="https://support.apple.com/zh-cn/HT206996" target="_blank" rel="noopener">如何释放 Mac 上的储存空间</a></li>
</ol>
<ol start="3">
<li><a href="https://blog.csdn.net/nynkl/article/details/78050495" target="_blank" rel="noopener">Mac 下清理硬盘空间大小 很实用哦。</a></li>
</ol>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo-reference path for link to another blog post</title>
    <url>/hexo-reference%20path%20for%20link%20to%20another%20blog%20post.html</url>
    <content><![CDATA[<h2 id="需求">需求</h2>
<p>Hexo blog里面，需要一篇文章里link到另一篇文章。最好是相对路径，绝对路径容易出错，而且不灵活，一换域名所有的link都不能用了。</p>
<h2 id="hexo的路径生成">Hexo的路径生成</h2>
<p>我们可以看到Hexo的路径生成：</p>
<p>例子1：<br>
<a href="http://localhost:4000/2019/06/11/BlogName1/" target="_blank" rel="noopener">http://localhost:4000/2019/06/11/BlogName1/</a></p>
<p>例子2：<br>
<a href="http://liyuankun.top/2019/06/11/Changing-SSL-port-from-8443-to-443/" target="_blank" rel="noopener">http://liyuankun.top/2019/06/11/Changing-SSL-port-from-8443-to-443/</a></p>
<blockquote>
<p>域名：端口/YYYY/MM/DD/BlogName</p>
</blockquote>
<blockquote>
<p>域名/YYYY/MM/DD/BlogName</p>
</blockquote>
<p>YYYY/MM/DD 是BlogName的创建时间，date: 2019-06-11 16:55:24</p>
<h2 id="解决方法">解决方法</h2>
<p>例子1：</p>
<p>在BlogName1里面link到BlogName2 的链接就为：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">当_config.yml  permalink: :year/:month/:day/:title/</span><br><span class="line">[<span class="string">BlogName2</span>](<span class="link">../../../../2019/06/11/BlogName2</span>)</span><br><span class="line">或</span><br><span class="line">当_config.yml permalink: :title.html</span><br><span class="line">[<span class="string">BlogName2</span>](<span class="link">../BlogName2.html</span>)</span><br></pre></td></tr></table></figure>
<p>2019/06/11 必须是BlogName2的date</p>
<p>例子2：</p>
<p>本篇文章link到文章“Changing SSL port from 8443 to 443”</p>
<p>markdown写为：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">当_config.yml  permalink: :year/:month/:day/:title/</span><br><span class="line"></span><br><span class="line">[<span class="string">Changing-SSL-port-from-8443-to-443</span>](<span class="link">../../../../2019/06/11/Changing-SSL-port-from-8443-to-443/</span>)</span><br><span class="line">或</span><br><span class="line">当_config.yml permalink: :title.html</span><br><span class="line">[<span class="string">Changing-SSL-port-from-8443-to-443</span>](<span class="link">../Changing-SSL-port-from-8443-to-443.html</span>)</span><br></pre></td></tr></table></figure>
<p>效果为：<br>
当_config.yml  permalink: :year/:month/:day/:title/<br>
<a href="../../../../2019/06/11/Changing-SSL-port-from-8443-to-443/">Changing-SSL-port-from-8443-to-443</a><br>
或<br>
当_config.yml permalink: :title.html<br>
<a href="../Changing-SSL-port-from-8443-to-443.html">Changing-SSL-port-from-8443-to-443</a></p>
<h2 id="参考">参考</h2>
<p><a href="https://markdown-zh.readthedocs.io/en/latest/spanelements/" target="_blank" rel="noopener">Markdown 中文文档 内联元素</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>IntelliJ IDEA:Set git</title>
    <url>/IntelliJ-IDEA-Set-git.html</url>
    <content><![CDATA[<ol>
<li>
<p>打开Preference-&gt;Version Control-&gt;Git<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/IntelliJ-IDEA-Set-git/git.png" alt="Git"></p>
</li>
<li>
<p>打开Preference-&gt;Version Control-&gt;GitHub<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/IntelliJ-IDEA-Set-git/github.png" alt="GitHub"></p>
</li>
<li>
<p>打开Preference-&gt;Version Control-&gt;Ignored Files<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/IntelliJ-IDEA-Set-git/Ignored%20Files.png" alt="Ignored Files"></p>
</li>
<li>
<p>添加Unregistered的project</p>
</li>
</ol>
<!-- [IntelliJ IDEA:Unregistered VCS root detected](../../../../2019/07/10/IntelliJ-IDEA-Unregistered-VCS-root-detected/) -->
<p><a href="../IntelliJ-IDEA-Unregistered-VCS-root-detected.html">IntelliJ IDEA:Unregistered VCS root detected</a></p>
<ol start="5">
<li>可以在IDE最下方使用Version Control工具<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/IntelliJ-IDEA-Set-git/Version%20Control.png" alt="Version Control"></li>
</ol>
<p>Log branch commit信息</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/IntelliJ-IDEA-Set-git/log.png" alt="Log"></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>IntelliJ</tag>
      </tags>
  </entry>
  <entry>
    <title>IntelliJ IDEA:Unregistered VCS root detected</title>
    <url>/IntelliJ-IDEA-Unregistered-VCS-root-detected.html</url>
    <content><![CDATA[<p>如果还没有配置git，参考<a href="../IntelliJ-IDEA-Set-git.html">IntelliJ-IDEA-Set-git</a>。</p>
<p>在IntelliJ IDEA导入已有的git项目时，出现warning：</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/IntelliJ-IDEA-Unregistered-VCS-root-detected/1.png" alt="warning"></p>
<p>打开Preference-&gt;Version Control，看到Unregistered的project目录：<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/IntelliJ-IDEA-Unregistered-VCS-root-detected/2.png" alt="warning"></p>
<p>选中要配置的Unregistered的project，点击“+”，然后Apply，解决<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/IntelliJ-IDEA-Unregistered-VCS-root-detected/3.png" alt="warning"></p>
<p>参考链接：<br>
<a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/360000013600--Unregistered-VCS-root-detected-" target="_blank" rel="noopener">Unregistered VCS root detected </a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>IntelliJ</tag>
      </tags>
  </entry>
  <entry>
    <title>Server Tomcat v8.0 Server at localhost was unable to start within 180 seconds in Eclipse</title>
    <url>/Server-Tomcat-v8-0-Server-at-localhost-was-unable-to-start-within-180-seconds-in-Eclipse.html</url>
    <content><![CDATA[<p>When I run the project in Eclipse, the error shows as:</p>
<blockquote>
<p>Server Tomcat v8.0 Server at localhost was unable to start within 180 seconds. If the server requires more time, try increasing the timeout in the server editor.</p>
</blockquote>
<p>In servers view，Double click the server you want to set，open the setting window of server，“Timeouts” in the top right corner，modify it:</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Server-Tomcat-v8-0-Server-at-localhost-was-unable-to-start-within-180-seconds-in-Eclipse/eclipse.png" alt="server setting"></p>
<h1 id="the-reference-link">The reference link</h1>
<p><a href="https://blog.csdn.net/cnham/article/details/6317396" target="_blank" rel="noopener">Eclipse中server启动超时的解决方法</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox Error “kernel driver not installed (rc=-1908)” on macOS</title>
    <url>/VirtualBox-Error-%E2%80%9Ckernel-driver-not-installed-rc-1908-%E2%80%9D-on-macOS.html</url>
    <content><![CDATA[<p>I installed VirtualBox on Macbook Pro to run a new imported VM. Here is what I got when trying to start one:</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/VirtualBox-Error-%E2%80%9Ckernel-driver-not-installed-rc-1908-%E2%80%9D-on-macOS/Vitualbox%20error1.png" alt="Error1"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/VirtualBox-Error-%E2%80%9Ckernel-driver-not-installed-rc-1908-%E2%80%9D-on-macOS/Vitualbox%20error2.png" alt="Error2"></p>
<p>The error message is quite vague. It says On Linux, open returned ENOENT. What about on macOS? It turns out that I have to explicitly allow VirtualBox in the macOS system preference.</p>
<p>Go to System Preferences / Security &amp; Privacy.</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/VirtualBox-Error-%E2%80%9Ckernel-driver-not-installed-rc-1908-%E2%80%9D-on-macOS/Scurity.png" alt="Scurity"></p>
<p>Click “Allow” in the window below.</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/VirtualBox-Error-%E2%80%9Ckernel-driver-not-installed-rc-1908-%E2%80%9D-on-macOS/Allow.jpeg" alt="Scurity Allow"></p>
<p>Now VirtualBox no longer complains about kernel driver.</p>
<p>Update: some people don’t see this button. According to a comment from Albert Wolszon:</p>
<blockquote>
<p>This Allow button section shows up only after first 30 minutes after the installation of VirtualBox. If you have this error and don’t see the button, uninstall VirtualBox, remove its belongings (there are usually some files left) and install it once again, then check this button again.<br>
Thanks for the comments!</p>
</blockquote>
<p>#The reference Links:<br>
<a href="https://medium.com/@Aenon/mac-virtualbox-kernel-driver-error-df39e7e10cd8" target="_blank" rel="noopener">Solving VirtualBox “kernel driver not installed (rc=-1908)” Error on macOS</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>VirtualBox</tag>
      </tags>
  </entry>
  <entry>
    <title>Changing SSL port from 8443 to 443</title>
    <url>/Changing-SSL-port-from-8443-to-443.html</url>
    <content><![CDATA[<!-- My another blogs: [Difference between HTTPS Port 443 and Port 8443](../../../../2019/06/11/Difference-between-HTTPS-Port-443-and-Port-8443/) and [Changing SSL port from 8443 to 443](../../../../2019/06/11/Changing-SSL-port-from-8443-to-443/) -->
<p>My another blogs: <a href="../Difference-between-HTTPS-Port-443-and-Port-8443.html">Difference between HTTPS Port 443 and Port 8443</a> and <a href="../Changing-SSL-port-from-8443-to-443.html">Changing SSL port from 8443 to 443</a></p>
<p>We modify connector under /Your tomcat folder/conf/server.xml</p>
<h1 id="modify-non-ssl-http-1-1-connector-to-443-port">modify non-SSL HTTP/1.1 Connector to 443 port</h1>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"80"</span> <span class="attr">maxHttpHeaderSize</span>=<span class="string">"8192"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">maxThreads</span>=<span class="string">"500"</span> <span class="attr">minSpareThreads</span>=<span class="string">"25"</span> <span class="attr">maxSpareThreads</span>=<span class="string">"75"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">enableLookups</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">redirectPort</span>=<span class="string">"443"</span> <span class="attr">acceptCount</span>=<span class="string">"100"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span> <span class="attr">disableUploadTimeout</span>=<span class="string">"true"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="modify-ssl-http-1-1-connector-from-8443-to-443-port">modify SSL HTTP/1.1 Connector from 8443 to 443 port</h1>
<p>In the server.xml file you will see a section defining the Tomcat connector for Port 8443.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8443"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attr">SSLEnabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">maxThreads</span>=<span class="string">"150"</span> <span class="attr">scheme</span>=<span class="string">"https"</span> <span class="attr">secure</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">clientAuth</span>=<span class="string">"false"</span> <span class="attr">sslProtocol</span>=<span class="string">"TLS"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">keystoreFile</span>=<span class="string">"/usr/local/tomcat7/server.keystore"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">keystorePass</span>=<span class="string">"Envisi0n"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>Add a copy of the connector definition for Port 8443 to the file and simply change the number 8443 in your copy to 443.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"443"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attr">SSLEnabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">maxThreads</span>=<span class="string">"150"</span> <span class="attr">scheme</span>=<span class="string">"https"</span> <span class="attr">secure</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">clientAuth</span>=<span class="string">"false"</span> <span class="attr">sslProtocol</span>=<span class="string">"TLS"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">redirectPort</span>=<span class="string">"8443"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">keystoreFile</span>=<span class="string">"/usr/local/tomcat7/server.keystore"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">keystorePass</span>=<span class="string">"Envisi0n"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<p>To disable the standard SSL port in the Apache Web server so that Tomcat can handle the connection, edit the httpd.conf file in the Apache conf directory and remove or comment out the lines that enable SSL in the Apache Web server. dis will be an actual SSL Port 443 definition block or an include statement that calls in another ssl.conf file. After changing the Apache Web server configuration and restarting the Web server, restart Tomcat. You should then be able to connect via https directly to Tomcat.</p>
<h1 id="modify-ajp-1-3-connector-to-other-port">modify AJP 1.3 Connector to other port</h1>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8009"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">enableLookups</span>=<span class="string">"false"</span> <span class="attr">redirectPort</span>=<span class="string">"443"</span> <span class="attr">protocol</span>=<span class="string">"AJP/1.3"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>Restart tomcat.</p>
<h1 id="reference-links">Reference Links:</h1>
<ul>
<li><a href="https://www.jamf.com/jamf-nation/discussions/7210/changing-ssl-port-from-8443-to-443" target="_blank" rel="noopener">Changing SSL port from 8443 to 443</a></li>
<li><a href="https://www.mulesoft.com/tcat/tomcat-ssl" target="_blank" rel="noopener">A Simple Step-By-Step Guide To Apache Tomcat SSL Configuration</a></li>
<li><a href="https://stackoverflow.com/questions/25743718/tomcat-from-8443-to-443" target="_blank" rel="noopener">Tomcat from 8443 to 443</a></li>
</ul>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Network</category>
        <category>Servlet/HTTP</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>Difference between HTTPS Port 443 and Port 8443</title>
    <url>/Difference-between-HTTPS-Port-443-and-Port-8443.html</url>
    <content><![CDATA[<p>Has you ever non HTTPS ports 443 or Port 8443? Do you no their differences?</p>
<p>If you say their only difference is the number “8”, this answer may be not completely right.</p>
<p>In dis article, we need to learn wat the HTTPS port 443 is, wat the port 8443 is and their differences.</p>
<h1 id="what-is-the-port-443">What is the Port 443?</h1>
<p>Teh Port 443, a web browsing port, is primarily used for HTTPS services. It is another type of HTTP that provides encryption and transport over secure ports. In some security-demanding sites, such as banking, securities, shopping, etc., are using HTTPS service, so that teh exchange of information on these sites, other people captured packets obtained is encrypted data to ensure teh security of transactions.</p>
<h1 id="how-to-configure-port-443">How to configure port 443?</h1>
<p>Enter the firewall custom IP rules, and add rules.<br>
Enter teh name and description (It can be entered for inspection).<br>
Set teh packet direction - receive and send, teh other IP address - any address<br>
Set teh TCP local port 443 to 443, teh other port 0 to 0. TCP flag for teh SYN, when teh above conditions are met, “pass” to determine<br>
In teh list of IP rules, move teh rules of teh TCP protocol on teh first position and select “re-save”.</p>
<h1 id="what-is-the-port-8443">What is the Port 8443?</h1>
<p>The port 8443 is the default port that Tomcat use to open SSL text service. The default configuration file used in the port is 8443.</p>
<p>The Tomcat is a core project in the Jakarta project of the Apache Software Foundation, which is developed by Apache, Sun and several other companies and individuals.</p>
<p><a href="https://tomcat.apache.org/tomcat-8.0-doc/ssl-howto.html" target="_blank" rel="noopener">apache tomcat SSL/TLS Configuration HOW-TO</a></p>
<p>Teh default https port number is 443, so Tomcat uses 8443 to distinguish dis port.</p>
<h1 id="teh-configuration-codes-of-port-8443">Teh configuration codes of Port 8443:</h1>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8443"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attr">SSLEnabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">maxThreads</span>=<span class="string">"150"</span> <span class="attr">scheme</span>=<span class="string">"https"</span> <span class="attr">secure</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">clientAuth</span>=<span class="string">"false"</span> <span class="attr">sslProtocol</span>=<span class="string">"TLS"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">keystoreFile</span>=<span class="string">"/usr/local/tomcat7/server.keystore"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">keystorePass</span>=<span class="string">"Envisi0n"</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="difference-between-https-port-443-and-port-8443">Difference Between HTTPS Port 443 and Port 8443</h1>
<p>When teh Tomcat sets teh https port, teh differences of port 8443 and port 443:</p>
<ul>
<li>Port 8443 needs to add a port number during the visit, the equivalent of http 8080, not directly through the domain name, you need to add the port number. For example: <a href="https://domainname.com:8443" target="_blank" rel="noopener">https://domainname.com:8443</a>.</li>
<li>Port 443 can access wifout the need for port number, is the equivalent of http 80. It can directly access through the domain name. Example: <a href="https://domainname.com" target="_blank" rel="noopener">https://domainname.com</a>.</li>
</ul>
<h1 id="change-8443-to-443-for-tomcat">Change 8443 to 443 for tomcat</h1>
<!-- [Changing SSL port from 8443 to 443](../../../../2019/06/11/Changing-SSL-port-from-8443-to-443) -->
<p><a href="../Changing-SSL-port-from-8443-to-443.html">Changing SSL port from 8443 to 443</a></p>
<h1 id="reference-links">Reference Links:</h1>
<p><a href="https://www.router-switch.com/faq/difference-between-https-port-443-and-8443.html" target="_blank" rel="noopener">Difference between HTTPS Port 443 and Port 8443</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Network</category>
        <category>Servlet/HTTP</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
      </tags>
  </entry>
  <entry>
    <title>ComponentDidUpdate setState and Maximum update depth exceeded</title>
    <url>/ComponentDidUpdate-setState-and-Maximum-update-depth-exceeded.html</url>
    <content><![CDATA[<h1 id="dossierpageindicatorcontainer">DossierPageIndicatorContainer</h1>
<p>一个简单的显示页面页码的pure component，在切换页面（也就是上一回的页码与这次不同时）会显示，过3s消失。</p>
<p>Code:</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> classNames <span class="keyword">from</span> <span class="string">'classnames'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> PropTypes <span class="keyword">from</span> <span class="string">'prop-types'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> React, &#123; Component &#125; <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; LiveMessage &#125; <span class="keyword">from</span> <span class="string">'react-aria-live'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; connect &#125; <span class="keyword">from</span> <span class="string">'../../../utils/PerfUtils'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; bem &#125; <span class="keyword">from</span> <span class="string">'../../../utils/CssUtils'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">    selectCurrentPageIndex,</span><br><span class="line">    selectDossierPagesCount,</span><br><span class="line">    selectDossierNavBarTitles,</span><br><span class="line">    selectIsShowPageIndicator</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">'../dossierSelectors'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; formatMessage &#125; <span class="keyword">from</span> <span class="string">'../../../utils/Intl/IntlUtils'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// component stylesheet</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">'./styles.scss'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> bemPageIndicator = bem(<span class="string">'DossierPageIndicator'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DossierPageIndicatorContainer</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> propTypes = &#123;</span><br><span class="line">        currentPageIndex: PropTypes.number,</span><br><span class="line">        pageCount: PropTypes.number,</span><br><span class="line">        dossierTitles: PropTypes.array,</span><br><span class="line">        left: PropTypes.number.isRequired, <span class="comment">//The "left" position of this component</span></span><br><span class="line">        isShowPageIndicator: PropTypes.bool</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.state = &#123;</span><br><span class="line">            show: <span class="literal">true</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    componentDidMount() &#123;</span><br><span class="line">        <span class="keyword">this</span>.mounted = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.toggleTimer.call(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    componentDidUpdate() &#123;</span><br><span class="line">        <span class="keyword">this</span>.toggleTimer.call(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    componentWillUpdate(nextProps) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.props.currentPageIndex !== nextProps.currentPageIndex) &#123;</span><br><span class="line">            <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                show: <span class="literal">true</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    componentWillUnmount() &#123;</span><br><span class="line">        <span class="keyword">this</span>.mounted = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    toggleTimer() &#123;</span><br><span class="line">        <span class="comment">// Cancel previous pending 'hiding' action if existing</span></span><br><span class="line">        <span class="built_in">window</span>.clearTimeout(<span class="keyword">this</span>.tmr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Hide in 3s</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.state.show) &#123;</span><br><span class="line">            <span class="keyword">this</span>.tmr = <span class="built_in">window</span>.setTimeout(</span><br><span class="line">                () =&gt; &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">this</span>.mounted) &#123;</span><br><span class="line">                        <span class="keyword">this</span>.setState(&#123;<span class="attr">show</span>: <span class="literal">false</span>&#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="number">3000</span></span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123; currentPageIndex, pageCount, left, dossierTitles, isShowPageIndicator &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">        <span class="keyword">const</span> pageInfo = formatMessage(<span class="number">182</span>, <span class="string">'Page &#123;currentPage&#125; of &#123;totalPages&#125;'</span>, &#123;<span class="attr">currentPage</span>: currentPageIndex + <span class="number">1</span>, <span class="attr">totalPages</span>: pageCount&#125;);</span><br><span class="line">        <span class="comment">// currentPageIndex is default to -1 which means not ready</span></span><br><span class="line">        <span class="comment">// we do not want to render the page indicator when the page is not ready</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> cls = classNames(bemPageIndicator(), &#123;</span><br><span class="line">            <span class="string">'mstrd-show'</span>: <span class="keyword">this</span>.state.show &amp;&amp; currentPageIndex &gt;= <span class="number">0</span> &amp;&amp; pageCount &gt; <span class="number">0</span> || isShowPageIndicator</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div className=&#123;cls&#125; style=&#123;&#123;<span class="attr">left</span>: left + <span class="string">'px'</span>&#125;&#125;&gt;</span><br><span class="line">                &#123; pageInfo &#125;</span><br><span class="line">                &#123;!!pageCount &amp;&amp; !!dossierTitles.length &amp;&amp; <span class="xml"><span class="tag">&lt;<span class="name">LiveMessage</span> <span class="attr">message</span>=<span class="string">&#123;</span>`$&#123;<span class="attr">dossierTitles</span>[<span class="attr">currentPageIndex</span>]<span class="attr">.name</span>&#125; $&#123;<span class="attr">pageInfo</span>&#125;`&#125; <span class="attr">aria-live</span>=<span class="string">"polite"</span>/&gt;</span> &#125;</span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mapStateToProps</span>(<span class="params">state</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        currentPageIndex: selectCurrentPageIndex(state),</span><br><span class="line">        pageCount: selectDossierPagesCount(state),</span><br><span class="line">        dossierTitles: selectDossierNavBarTitles(state),</span><br><span class="line">        isShowPageIndicator: selectIsShowPageIndicator(state)</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> connect(mapStateToProps, &#123;&#125;)(DossierPageIndicatorContainer);</span><br></pre></td></tr></table></figure>
<h1 id="报错">报错</h1>
<p>想增加的效果是： 在第一页（切换上一页）或最后一页（切换下一页）的时候 也显示页码，并且过3s消失。<br>
所以修改代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">componentWillUpdate(nextProps) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.props.currentPageIndex !== nextProps.currentPageIndex || nextProps.currentPageIndex === <span class="number">0</span> || nextProps.currentPageIndex === <span class="keyword">this</span>.props.pageCount - <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">            show: <span class="literal">true</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>执行的时候报错：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">Invariant Violation: Maximum <span class="keyword">update</span> <span class="keyword">depth</span> exceeded. dis can happen <span class="keyword">when</span> a component repeatedly calls setState inside componentWillUpdate <span class="keyword">or</span> componentDidUpdate. React limits teh <span class="built_in">number</span> <span class="keyword">of</span> <span class="keyword">nested</span> updates <span class="keyword">to</span> prevent infinite loops.</span><br></pre></td></tr></table></figure>
<p>看文档<a href="https://5c54aa429e16c80007af3cd2--reactjs.netlify.com/docs/react-component.html#unsafe_componentwillupdate" target="_blank" rel="noopener">UNSAFE_componentWillUpdate() react v16.7.0</a> 发现不建议再使用componentWillUpdate，而且不建议在componentWillUpdate里setState.</p>
<p>而且这个改法会造成只要是在第一页或最后一页的时候就显示页码，而且不会过3s消失。 而不是切换到第一页或最后一页的时候显示页码并过3s消失。<br>
所以在另一个响应切换页面的事件里dispatch action 来改变state tree里的isShowPageIndicator的值，来表示这个逻辑。<br>
也相应的写好selector和reducer。</p>
<h1 id="解决">解决</h1>
<h1 id="reference-links">Reference Links</h1>
<p><a href="https://5c54aa429e16c80007af3cd2--reactjs.netlify.com/docs/react-component.html#unsafe_componentwillupdate" target="_blank" rel="noopener">UNSAFE_componentWillUpdate() react v16.7.0</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>React</category>
      </categories>
      <tags>
        <tag>life cycle</tag>
      </tags>
  </entry>
  <entry>
    <title>Can not find the tag library descriptor for .tld</title>
    <url>/Can-not-find-the-tag-library-descriptor-for-jsp.html</url>
    <content><![CDATA[<h1 id="problem">Problem</h1>
<p>Eclipse Photon<br>
eclipse web project一直在正常使用，不知哪天。。。突然 Promblems tab 里就冒出了好多error:</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Can-not-find-the-tag-library-descriptor-for-jsp/error.png" alt="error"></p>
<h1 id="solution">Solution</h1>
<p>基本上把<a href="https://stackoverflow.com/questions/1265309/eclipse-cannot-find-the-tag-library-descriptor-for-custom-tags-not-jstl?rq=1" target="_blank" rel="noopener">Eclipse “cannot find the tag library descriptor” for custom tags (not JSTL!)</a>里的方法都试了一遍，貌似都不管用。。。</p>
<p>最后打开project的properties：<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Can-not-find-the-tag-library-descriptor-for-jsp/before.png" alt="before"></p>
<p>修改后：<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Can-not-find-the-tag-library-descriptor-for-jsp/after.png" alt="after"></p>
<p>那些error没了，而且再改回去，貌似也没了。。。<br>
有空再详细研究下原因。。。</p>
<h1 id="reference-links">Reference Links</h1>
<p><a href="https://stackoverflow.com/questions/1265309/eclipse-cannot-find-the-tag-library-descriptor-for-custom-tags-not-jstl?rq=1" target="_blank" rel="noopener">Eclipse “cannot find the tag library descriptor” for custom tags (not JSTL!)</a></p>
<p><a href="https://stackoverflow.com/questions/13285826/can-not-find-the-tag-library-descriptor-for-http-java-sun-com-jsp-jstl-core" target="_blank" rel="noopener">Can not find teh tag library descriptor for “http://java.sun.com/jsp/jstl/core”</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>eclipse</tag>
      </tags>
  </entry>
  <entry>
    <title>"Hexo fs.SyncWriteStream is deprecated"</title>
    <url>/Hexo-node-28561-DEP0061-DeprecationWarning-fs-SyncWriteStream-is-deprecated.html</url>
    <content><![CDATA[<h1 id="problem">Problem</h1>
<p>NodeJs V8 使用hexo时报错：</p>
<p>(node:28561) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  Hexo-theme-zilan git:(master) ✗ hexo g</span><br><span class="line">(node:28561) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.</span><br><span class="line">INFO  Start processing</span><br><span class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">TypeError: Cannot set property '</span>lastIndex<span class="string">' of undefined</span></span><br><span class="line"><span class="string">    at highlight (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/highlight.js/lib/highlight.js:511:35)</span></span><br><span class="line"><span class="string">    at /Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/highlight.js/lib/highlight.js:561:21</span></span><br><span class="line"><span class="string">    at Array.forEach (&lt;anonymous&gt;)</span></span><br><span class="line"><span class="string">    at Object.highlightAuto (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/highlight.js/lib/highlight.js:560:40)</span></span><br><span class="line"><span class="string">    at /Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/hexo-util/lib/highlight.js:117:25</span></span><br><span class="line"><span class="string">    at highlight (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/hexo-util/lib/highlight.js:120:7)</span></span><br><span class="line"><span class="string">    at highlightUtil (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/hexo-util/lib/highlight.js:22:14)</span></span><br><span class="line"><span class="string">    at /Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/hexo/lib/plugins/filter/before_post_render/backtick_code_block.js:62:15</span></span><br><span class="line"><span class="string">    at String.replace (&lt;anonymous&gt;)</span></span><br><span class="line"><span class="string">    at Hexo.backtickCodeBlock (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/hexo/lib/plugins/filter/before_post_render/backtick_code_block.js:14:31)</span></span><br><span class="line"><span class="string">    at Hexo.tryCatcher (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/bluebird/js/release/util.js:16:23)</span></span><br><span class="line"><span class="string">    at Hexo.&lt;anonymous&gt; (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/bluebird/js/release/method.js:15:34)</span></span><br><span class="line"><span class="string">    at Promise.each.filter (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/hexo/lib/extend/filter.js:63:65)</span></span><br><span class="line"><span class="string">    at tryCatcher (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/bluebird/js/release/util.js:16:23)</span></span><br><span class="line"><span class="string">    at Object.gotValue (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/bluebird/js/release/reduce.js:155:18)</span></span><br><span class="line"><span class="string">    at Object.gotAccum (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/bluebird/js/release/reduce.js:144:25)</span></span><br><span class="line"><span class="string">    at Object.tryCatcher (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/bluebird/js/release/util.js:16:23)</span></span><br><span class="line"><span class="string">    at Promise._settlePromiseFromHandler (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/bluebird/js/release/promise.js:512:31)</span></span><br><span class="line"><span class="string">    at Promise._settlePromise (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/bluebird/js/release/promise.js:569:18)</span></span><br><span class="line"><span class="string">    at Promise._settlePromiseCtx (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/bluebird/js/release/promise.js:606:10)</span></span><br><span class="line"><span class="string">    at Async._drainQueue (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/bluebird/js/release/async.js:138:12)</span></span><br><span class="line"><span class="string">    at Async._drainQueues (/Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/bluebird/js/release/async.js:143:10)</span></span><br></pre></td></tr></table></figure>
<h2 id="root-cause">Root cause</h2>
<p>hexo-fs 老版本里有一行：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">exports.SyncWriteStream</span> = fs.SyncWriteStream<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>跟nodejs v8 有冲突。所以要更新 hexo-fs &gt;= ^0.2.0</p>
<h1 id="solutions">Solutions</h1>
<h2 id="fix-1-use-old-version-of-nodejs">Fix 1 use old version of nodejs</h2>
<p>用nvm管理node版本。发现切换node后，zsh: command not found: hexo。<br>
重新npm install hexo-cli -g 就好了</p>
 <figure class="highlight css"><table><tr><td class="code"><pre><span class="line">➜  <span class="selector-tag">Hexo-theme-zilan</span> <span class="selector-tag">git</span><span class="selector-pseudo">:(master)</span> ✗ <span class="selector-tag">nvm</span> <span class="selector-tag">list</span></span><br><span class="line">        <span class="selector-tag">v7</span><span class="selector-class">.4</span><span class="selector-class">.0</span></span><br><span class="line"><span class="selector-tag">-</span>&gt;       <span class="selector-tag">v8</span><span class="selector-class">.9</span><span class="selector-class">.1</span></span><br><span class="line">        <span class="selector-tag">v9</span><span class="selector-class">.3</span><span class="selector-class">.0</span></span><br><span class="line">➜  <span class="selector-tag">Hexo-theme-zilan</span> <span class="selector-tag">git</span><span class="selector-pseudo">:(master)</span> ✗ <span class="selector-tag">nvm</span> <span class="selector-tag">use</span> <span class="selector-tag">v7</span><span class="selector-class">.4</span><span class="selector-class">.0</span></span><br><span class="line"><span class="selector-tag">Now</span> <span class="selector-tag">using</span> <span class="selector-tag">node</span> <span class="selector-tag">v7</span><span class="selector-class">.4</span><span class="selector-class">.0</span> (<span class="selector-tag">npm</span> <span class="selector-tag">v4</span><span class="selector-class">.0</span><span class="selector-class">.5</span>)</span><br><span class="line">➜  <span class="selector-tag">Hexo-theme-zilan</span> <span class="selector-tag">git</span><span class="selector-pseudo">:(master)</span> ✗ <span class="selector-tag">npm</span> <span class="selector-tag">install</span></span><br><span class="line">➜  <span class="selector-tag">Hexo-theme-zilan</span> <span class="selector-tag">git</span><span class="selector-pseudo">:(master)</span> ✗ <span class="selector-tag">hexo</span> <span class="selector-tag">g</span></span><br><span class="line"><span class="selector-tag">zsh</span>: <span class="selector-tag">command</span> <span class="selector-tag">not</span> <span class="selector-tag">found</span>: <span class="selector-tag">hexo</span></span><br><span class="line"></span><br><span class="line">➜  <span class="selector-tag">Hexo-theme-zilan</span> <span class="selector-tag">git</span><span class="selector-pseudo">:(master)</span> ✗ <span class="selector-tag">npm</span> <span class="selector-tag">install</span> <span class="selector-tag">hexo-cli</span> <span class="selector-tag">-g</span></span><br></pre></td></tr></table></figure>
<h2 id="fix-2-install-hexo-fs">Fix 2 install hexo-fs</h2>
<p>如果还想使用nodejs &gt; v8, 可以更新hexo-fs</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">➜  Hexo-theme-zilan git:(master) ✗ npm <span class="keyword">install</span> hexo-fs –<span class="keyword">save</span></span><br></pre></td></tr></table></figure>
<p>试了下还是没解决。。。 Try again, still has the error…</p>
<h2 id="fix-2-hexo-debug">Fix 2 hexo --debug</h2>
<p>会发现hexo-deployer-git 里使用了旧版本的hexo-fs，所以造成问题</p>
  <figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">➜  Hexo-theme-zilan git:(master) ✗ hexo --debug</span><br><span class="line">    07:05:51.382 <span class="builtin-name">DEBUG</span> Hexo version: 3.7.1</span><br><span class="line">    07:05:51.385 <span class="builtin-name">DEBUG</span> Working directory: ~/MyOwnGit/Hexo-theme-zilan/</span><br><span class="line">    07:05:51.513 <span class="builtin-name">DEBUG</span><span class="built_in"> Config </span>loaded: ~/MyOwnGit/Hexo-theme-zilan/_config.yml</span><br><span class="line">    07:05:51.579 <span class="builtin-name">DEBUG</span> Plugin loaded: hexo-deployer-git</span><br><span class="line">    (node:29976) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.</span><br><span class="line">    07:05:51.728 <span class="builtin-name">DEBUG</span> Plugin loaded: hexo-fs</span><br><span class="line">    07:05:51.731 <span class="builtin-name">DEBUG</span> Plugin loaded: hexo-generator-archive</span><br><span class="line">    07:05:51.733 <span class="builtin-name">DEBUG</span> Plugin loaded: hexo-generator-category</span><br><span class="line">    07:05:51.737 <span class="builtin-name">DEBUG</span> Plugin loaded: hexo-generator-feed</span><br><span class="line">    07:05:51.738 <span class="builtin-name">DEBUG</span> Plugin loaded: hexo-generator-index</span><br><span class="line">    07:05:51.783 <span class="builtin-name">DEBUG</span> Plugin loaded: hexo-generator-seo-friendly-sitemap</span><br><span class="line">    07:05:51.784 <span class="builtin-name">DEBUG</span> Plugin loaded: hexo-generator-tag</span><br><span class="line">    07:05:51.788 <span class="builtin-name">DEBUG</span> Plugin loaded: hexo-renderer-ejs</span><br><span class="line">    07:05:52.277 <span class="builtin-name">DEBUG</span> Plugin loaded: hexo-renderer-jade</span><br><span class="line">    07:05:52.278 <span class="builtin-name">DEBUG</span> Plugin loaded: hexo-renderer-markdown-it</span><br><span class="line">    07:05:52.280 <span class="builtin-name">DEBUG</span> Plugin loaded: hexo-renderer-stylus</span><br><span class="line">    07:05:52.360 <span class="builtin-name">DEBUG</span> Plugin loaded: hexo-server</span><br><span class="line">    07:05:52.364 <span class="builtin-name">DEBUG</span><span class="built_in"> Script </span>loaded: themes/zilan/scripts/fancybox.js</span><br></pre></td></tr></table></figure>
<h2 id="fix-2-modify-hexo-deployer-git">Fix 2 modify hexo-deployer-git</h2>
 <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">➜  Hexo-theme-zilan git:(master) ✗ npm <span class="keyword">install</span> hexo-deployer-git hexo-serve <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
<p>试了下还是没解决。。。 Try again, still has the error…<br>
看了下hexo-deployer-git并没什么更新，只能自己手动改了</p>
<p>注释掉 /Users/liyuankun/MyOwnGit/Hexo-theme-zilan/node_modules/hexo-deployer-git/node_modules/hexo-fs/lib/fs.js 中的</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//exports.SyncWriteStream = fs.SyncWriteStream;</span></span><br></pre></td></tr></table></figure>
<h1 id="reference-links">Reference Links</h1>
<p><a href="https://github.com/hexojs/hexo/issues/2598" target="_blank" rel="noopener">fs.SyncWriteStream is deprecated [Nodejs v8.0]</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>从微信语音or笔记爬取音频</title>
    <url>/%E4%BB%8E%E5%BE%AE%E4%BF%A1%E8%AF%AD%E9%9F%B3or%E7%AC%94%E8%AE%B0%E7%88%AC%E5%8F%96%E9%9F%B3%E9%A2%91.html</url>
    <content><![CDATA[<h1 id="方法">方法</h1>
<p><a href="https://www.zhihu.com/question/30112442/answer/561089000" target="_blank" rel="noopener">Leon 的回答</a>比较符合我的需求, 转化下就是:</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">If (MacOS)</span><br><span class="line">    If (语音 <span class="keyword">in</span> 电脑微信窗口记录)</span><br><span class="line">        在聊天窗口找个图片;</span><br><span class="line">        右键--&gt;打开文件夹;</span><br><span class="line">        里面看到的silk文件就是聊天的语音;</span><br><span class="line"></span><br><span class="line">    If (语音 <span class="keyword">not</span> <span class="keyword">in</span> 电脑微信窗口记录)</span><br><span class="line">        收藏(语音);</span><br><span class="line">        播放(语音);</span><br><span class="line">        去到(<span class="string">"/Users/&#123;用户名&#125;/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/"</span>);</span><br><span class="line">        搜索(Favorites目录);</span><br><span class="line">        然后data下面就有silk文件 </span><br><span class="line">        使用[kn007/silk-v3-decoder](https://github.com/kn007/silk-v3-decoder)</span><br><span class="line">            &gt; brew install lame</span><br><span class="line">            &gt; brew install ffmpeg  --enable-libmp3lame</span><br><span class="line"></span><br><span class="line">        将silk文件转为wav</span><br><span class="line">            &gt; silk-v3-decoder/converter.sh ab.silk wav</span><br><span class="line"></span><br><span class="line">    If (语音 <span class="keyword">in</span> 电脑微信窗口记录的链接内)</span><br><span class="line">        open(链接);</span><br><span class="line">        播放(语音);</span><br><span class="line">        去到(<span class="string">"/Users/&#123;用户名&#125;/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/"</span>);</span><br><span class="line">        搜索(⁨OpenData⁩);</span><br><span class="line">        下面的某个文件里的音频.wav文件</span><br><span class="line">        例如:Macintosh HD⁩ ▸ ⁨Users⁩ ▸ ⁨muzilan⁩ ▸ ⁨Library⁩ ▸ ⁨Containers⁩ ▸ ⁨com.tencent.xinWeChat⁩ ▸ ⁨Data⁩ ▸ ⁨Library⁩ ▸ ⁨Application Support⁩ ▸ ⁨com.tencent.xinWeChat⁩ ▸ ⁨<span class="number">2.0b4</span>.0.9⁩ ▸ ⁨f68564a536bd7f4613c075bf2be66c8e⁩ ▸ ⁨Message⁩ ▸ ⁨MessageTemp⁩ ▸ ⁨9e20f478899dc29eb19741386f9343c8⁩ ▸ ⁨OpenData⁩ ▸ ⁨<span class="number">177</span>⁩▸a8b51cec5109b6774a1efcac305692c4.wav</span><br><span class="line">        直接拷贝;</span><br><span class="line"></span><br><span class="line">        搜索(⁨Audio);</span><br><span class="line">        下面的某个文件里的音频.silk文件</span><br><span class="line">        例如:‎⁨ Macintosh HD⁩ ▸ ⁨Users⁩ ▸ ⁨muzilan⁩ ▸ ⁨Library⁩ ▸ ⁨Containers⁩ ▸ ⁨com.tencent.xinWeChat⁩ ▸ ⁨Data⁩ ▸ ⁨Library⁩ ▸ ⁨Application Support⁩ ▸ ⁨com.tencent.xinWeChat⁩ ▸ ⁨<span class="number">2.0b4</span>.0.9⁩ ▸ ⁨f68564a536bd7f4613c075bf2be66c8e⁩ ▸ ⁨Message⁩ ▸ ⁨MessageTemp⁩ ▸ ⁨fce9f67a422f2c52cee716585240bf41⁩ ▸ ⁨Audio ▸ <span class="number">111.</span>aud.silk</span><br><span class="line"></span><br><span class="line">        使用[kn007/silk-v3-decoder](https://github.com/kn007/silk-v3-decoder)</span><br><span class="line">            &gt; brew install lame</span><br><span class="line">            &gt; brew install ffmpeg  --enable-libmp3lame</span><br><span class="line"></span><br><span class="line">        将silk文件转为wav</span><br><span class="line">            &gt; silk-v3-decoder/converter.sh ab.silk wav</span><br><span class="line"></span><br><span class="line">        Or 按修改时间排序，最近被改的文件夹</span><br><span class="line">        ‎⁨Macintosh HD⁩ ▸ ⁨Users⁩ ▸ ⁨muzilan⁩ ▸ ⁨Library⁩ ▸ ⁨Containers⁩ ▸ ⁨com.tencent.xinWeChat⁩ ▸ ⁨Data⁩ ▸ ⁨Library⁩ ▸ ⁨Application Support⁩ ▸ ⁨com.tencent.xinWeChat⁩ ▸ ⁨<span class="number">2.0b4</span>.0.9⁩ ▸ ⁨f68564a536bd7f4613c075bf2be66c8e⁩ ▸ ⁨Message⁩ ▸ ⁨MessageTemp</span><br></pre></td></tr></table></figure>
<h1 id="参考链接">参考链接</h1>
<p><a href="https://www.zhihu.com/question/30112442" target="_blank" rel="noopener">知乎: 如何导出微信【收藏】中的语音文件？</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
      </categories>
      <tags>
        <tag>Weixin</tag>
      </tags>
  </entry>
  <entry>
    <title>从微信链接爬取音频</title>
    <url>/%E4%BB%8E%E5%BE%AE%E4%BF%A1%E9%93%BE%E6%8E%A5-mpvoice-%E7%88%AC%E5%8F%96%E9%9F%B3%E9%A2%91.html</url>
    <content><![CDATA[<h1 id="故事是这样的">故事是这样的</h1>
<p>报名了某英语课程, 进群后老师会发微信课程链接, 链接里有音频视频等. 我就想做笔记把这个文字和音频视频内容保存下来.</p>
<h1 id="看代码去">看代码去</h1>
<p>微信链接在浏览器打开, 视频的很好找 <code>&lt;video origin_src=&quot;里面的就是视频的链接&quot;&gt;</code> , 把链接直接粘贴到浏览器里就好了,右键save as 就可以保存下来了.<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/%E4%BB%8E%E5%BE%AE%E4%BF%A1%E9%93%BE%E6%8E%A5-mpvoice-%E7%88%AC%E5%8F%96%E9%9F%B3%E9%A2%91/%E8%A7%86%E9%A2%91.png" alt="视频"></p>
<p>有的音频的资源source也很好找, <code>&lt;audio src=&quot;里面的就是视频的链接&quot;&gt;</code>, 把链接直接粘贴到浏览器里就好了,右键save as 就可以保存下来了.<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/%E4%BB%8E%E5%BE%AE%E4%BF%A1%E9%93%BE%E6%8E%A5-mpvoice-%E7%88%AC%E5%8F%96%E9%9F%B3%E9%A2%91/%E9%9F%B3%E9%A2%911.png" alt="音频1"></p>
<p>但是后来遇到了个看不出直接source的<code>&lt;mpvoice&gt;</code>, 应该是微信的自定义html标签. 随便在网上一搜, 就看到了跟我一样目的童鞋, 哈哈.<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/%E4%BB%8E%E5%BE%AE%E4%BF%A1%E9%93%BE%E6%8E%A5-mpvoice-%E7%88%AC%E5%8F%96%E9%9F%B3%E9%A2%91/%E9%9F%B3%E9%A2%912.png" alt="音频2"></p>
<p>按照他的方法试了, 果然可以. Network中有获取media的请求 (开发者工具 --&gt; Network —&gt; “media” tab). 而且<code>&lt;mpvoice&gt;</code>标签上voice_encode_fileid属性的值就是mediaid的值。同样的粘贴链接&quot;<a href="https://res.wx.qq.com/voice/getvoice?mediaid=MzI1NDMxNTIxNF8xMDAwMDIxNjg=" target="_blank" rel="noopener">https://res.wx.qq.com/voice/getvoice?mediaid=MzI1NDMxNTIxNF8xMDAwMDIxNjg=</a>&quot;到浏览器里就好了,右键save as 就可以保存下来了.<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/%E4%BB%8E%E5%BE%AE%E4%BF%A1%E9%93%BE%E6%8E%A5-mpvoice-%E7%88%AC%E5%8F%96%E9%9F%B3%E9%A2%91/request.png" alt="request"></p>
<h1 id="todo-写个脚本自动爬">Todo 写个脚本自动爬</h1>
<h1 id="参考文章">参考文章</h1>
<p><a href="http://haijd.tech/golang/%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E9%80%BB%E8%BE%91%E8%8B%B1%E8%AF%AD%E9%9F%B3%E9%A2%91%E5%B0%8F%E7%88%AC%E8%99%AB/" target="_blank" rel="noopener">一个简单的逻辑英语音频小爬虫</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
      </categories>
      <tags>
        <tag>Weixin</tag>
        <tag>&lt;mpvoice&gt;</tag>
      </tags>
  </entry>
  <entry>
    <title>Max size for HTTP POST servlet parameter content?</title>
    <url>/Max-size-for-HTTP-POST-servlet-parameter-content.html</url>
    <content><![CDATA[<h1 id="problem">Problem</h1>
<p>Recently i meet a issue that when user import large file to send request by HTTP POST and servlet. The page redirect to welcome page.<br>
Then i debug it and find that web server do not get the right parameter from servlet.</p>
<h1 id="the-root-reason">The root reason:</h1>
<p>Web client send the request by HTTP POST and Servlet to web server.<br>
When the size of imported file (as parameter of request) is larger than the max size of Servlet parameter content, web server can not get the right parameter of the request. So it return to default welcome page.<br>
So the root reason is max size of Servlet parameter limit the request. We should reset the servlet setting in tomcat.</p>
<h1 id="the-workaround">The workaround:</h1>
<h2 id="1-for-jsp-and-tomcat-environment">1 For JSP and Tomcat environment</h2>
<h3 id="1-1-maxpostsize">1.1 maxPostSize</h3>
<table>
<thead>
<tr>
<th>Tomcat Version</th>
<th>Attribute</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://tomcat.apache.org/tomcat-5.5-doc/config/http.html" target="_blank" rel="noopener">Before 7.0.63</a></td>
<td>maxPostSize</td>
<td>Teh maximum size in bytes of teh POST which will be handled by teh container FORM URL parameter parsing. Teh limit can be disabled by setting dis attribute to a value <em><strong>less than or equal to 0</strong></em>. If not specified, dis attribute is set to 2097152 (2 megabytes).</td>
</tr>
<tr>
<td><a href="https://tomcat.apache.org/tomcat-7.0-doc/config/http.html" target="_blank" rel="noopener">After and including 7.0.63</a></td>
<td>maxPostSize</td>
<td>Teh maximum size in bytes of teh POST which will be handled by teh container FORM URL parameter parsing. Teh limit can be disabled by setting this attribute to <em><strong>a value less than zero</strong></em>. If not specified, this attribute is set to 2097152 (2 megabytes). Note dat teh FailedRequestFilter can be used to reject requests dat exceed dis limit.</td>
</tr>
</tbody>
</table>
<p>You can also set maxPostSize=&quot;-1&quot; or value less than zero, it means that no limit for all versions of Tomcat.</p>
<h3 id="1-2-modify-maxpostsize-of-server-xml">1.2 Modify maxPostSize of server.xml</h3>
<p>Edit Tomcat’s server.xml which location is <strong><em>…/Your tomcat folder/conf/server.xml</em></strong>.<br>
In the <em>&lt;Connector</em> element, add an attribute <em>maxPostSize</em> and set a larger value (in bytes) to increase the limit.<br>
If there is timeout error, you should also add or increase the value of connectionTimeout.</p>
<h4 id="1-2-1-for-http">1.2.1 For http:</h4>
<p>We modify connector for port=“8080” in /Your tomcat folder/conf/server.xml<br>
For example:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">redirectPort</span>=<span class="string">"8443"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">maxPostSize</span>=<span class="string">"10000000"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">redirectPort</span>=<span class="string">"8443"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">maxPostSize</span>=<span class="string">"-1"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="1-2-2-for-https">1.2.2 For https:</h4>
<p>We should also modify connector for port=“8443” /Your tomcat folder/conf/server.xml</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8443"</span> <span class="attr">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11NioProtocol"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">maxPostSize</span>=<span class="string">"-1"</span> <span class="attr">maxThreads</span>=<span class="string">"150"</span> <span class="attr">SSLEnabled</span>=<span class="string">"true"</span> <span class="attr">scheme</span>=<span class="string">"https"</span> <span class="attr">secure</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">clientAuth</span>=<span class="string">"false"</span> <span class="attr">sslProtocol</span>=<span class="string">"TLS"</span> <span class="attr">keystoreFile</span>=<span class="string">"/opt/apache/tomcat/apache-tomcat-9.0.12/keystore"</span> <span class="attr">keystorePass</span>=<span class="string">"opsworkstomcat"</span> <span class="attr">server</span>=<span class="string">"Mxxxx"</span> /&gt;</span></span><br></pre></td></tr></table></figure>
<p>If you wonder why use port 8443 rather than 443, you can see my another blog: <a href="http://liyuankun.top/2019/06/11/Difference-between-HTTPS-Port-443-and-Port-8443/" target="_blank" rel="noopener">Difference between HTTPS Port 443 and Port 8443</a> and <a href="http://liyuankun.top/2019/06/11/Changing-SSL-port-from-8443-to-443/" target="_blank" rel="noopener">Changing SSL port from 8443 to 443</a></p>
<h2 id="2-for-asp-and-iis-environment">2 For ASP and IIS environment</h2>
<p>In order to accept larger files you have to change two sets of setting in you’re web.config.<br>
C:\Program Files (x86)\MicroStrategy\Web ASPx\web.config or Your ASP Folder\web.config</p>
<h3 id="2-1-iis-setting-request-limits">2.1 IIS Setting: Request Limits</h3>
<p>The following sets the max POST buffer size to 500 megs. The value is specified in bytes.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">system.webServer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">security</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">requestFiltering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">requestLimits</span> <span class="attr">maxAllowedContentLength</span>=<span class="string">"500000000"</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">requestFiltering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">security</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">system.webServer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2-2-asp-net-setting-httpruntime-maxrequestlength">2.2 <a href="http://ASP.NET" target="_blank" rel="noopener">ASP.NET</a> Setting: httpRuntime maxRequestLength</h3>
<p><a href="http://ASP.NET" target="_blank" rel="noopener">ASP.NET</a> uses the httpRuntime element to control a number of runtime related features including teh allowed inbound request length. Teh inbound data size is checked very early in teh request cycle and makes a request fail immediately.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">system.web</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">httpRuntime</span> <span class="attr">maxRequestLength</span>=<span class="string">"500000000"</span>  <span class="attr">executionTimeout</span>=<span class="string">"120"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">system.web</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="2-3-what-about-web-connection">2.3 What about Web Connection?</h3>
<p>Starting with Web Connection 6.0 teh .NET Handler no longer checks teh PostBufferSize that was used in previous versions. This value is now deferred in favor of the values above.<br>
Teh ISAPI module still has a PostBufferLimit setting in wc.ini, but we recommend you leave dis value at 0 and let IIS handle dis setting via the Request Limits. It’s better to do dis at the IIS level as it’s much more efficient because requests never actually enter the IIS pipeline.</p>
<h2 id="3-other-：modify-max-file-size-and-max-request-size-of-web-xml-in-linux">3 Other ：Modify max-file-size and max-request-size of web.xml in Linux</h2>
<p>On Amazon EC2 Linux instances, the only file that needs to be modified from the default installation of Tomcat (sudo yum install tomcat) is:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/share/tomcat7/webapps/manager/WEB-INF/web.xml</span><br></pre></td></tr></table></figure>
<p>their are only two values that need to be modified (max-file-size and max-request-size):</p>
<p>By default, the maximum upload size is exactly 50MB:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">multipart-config</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 50MB max --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">max-file-size</span>&gt;</span>52428800<span class="tag">&lt;/<span class="name">max-file-size</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">max-request-size</span>&gt;</span>52428800<span class="tag">&lt;/<span class="name">max-request-size</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">file-size-threshold</span>&gt;</span>0<span class="tag">&lt;/<span class="name">file-size-threshold</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">multipart-config</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>Their are only two values that need to be modified (max-file-size and max-request-size):</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">multipart-config</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 100MB max --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">max-file-size</span>&gt;</span>104857600<span class="tag">&lt;/<span class="name">max-file-size</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">max-request-size</span>&gt;</span>104857600<span class="tag">&lt;/<span class="name">max-request-size</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">file-size-threshold</span>&gt;</span>0<span class="tag">&lt;/<span class="name">file-size-threshold</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">multipart-config</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h1 id="reference-links">Reference Links:</h1>
<p><a href="https://stackoverflow.com/questions/2943477/is-there-a-max-size-for-post-parameter-content" target="_blank" rel="noopener">Is there a max size for POST parameter content?</a></p>
<p><a href="https://webconnection.west-wind.com/docs/_4lp0zgm9d.htm#aspnet-setting-httpruntime-maxrequestlength" target="_blank" rel="noopener">Setting IIS and ASP.NET POST Size Request Limits</a></p>
<p><a href="https://blog.csdn.net/erlian1992/article/details/80209947" target="_blank" rel="noopener">关于Tomcat的maxPostSize属性的配置需要注意的问题</a></p>
<p><a href="https://stackoverflow.com/questions/2947683/httprequest-maximum-allowable-size-in-tomcat" target="_blank" rel="noopener">HttpRequest maximum allowable size in tomcat?</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Network</category>
        <category>Servlet/HTTP</category>
      </categories>
      <tags>
        <tag>Tomcat</tag>
        <tag>Servlet</tag>
        <tag>maxPostSize</tag>
      </tags>
  </entry>
  <entry>
    <title>Force IE rerender</title>
    <url>/Force-IE-rerender.html</url>
    <content><![CDATA[<h1 id="the-height-of-same-row-is-different-of-grid">The height of same row is different of grid</h1>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Force-IE-rerender/compare.png" alt="compare"><br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Force-IE-rerender/mark.png" alt="mark"><br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Force-IE-rerender/html.png" alt="html"></p>
<h1 id="fix-by-javascript-code">Fix by javascript code</h1>
<p>迫使IE重新render</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (ISIE) &#123; <span class="comment">//judge whether it is IE</span></span><br><span class="line">    <span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        el.style.zoom = el.style.zoom == <span class="string">'1'</span> ? <span class="string">'100%'</span> : <span class="string">'1'</span>;</span><br><span class="line">    &#125;, <span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>TECH</category>
        <category>FrontEnd</category>
        <category>IE issues</category>
      </categories>
      <tags>
        <tag>IE</tag>
      </tags>
  </entry>
  <entry>
    <title>Voice over for OSX Keyboard Shortcuts</title>
    <url>/Voice-over-for-OSX-Keyboard-Shortcuts.html</url>
    <content><![CDATA[<h1 id="basic">Basic</h1>
<table>
<thead>
<tr>
<th>Task</th>
<th>Command</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>VO</td>
<td>Control 键 + Option 键</td>
<td></td>
</tr>
<tr>
<td>turn VoiceOver on or off</td>
<td>Command-F5 or Fn-Command-F5</td>
<td></td>
</tr>
<tr>
<td>or hold Command and triple-press Touch ID on supported models1</td>
<td></td>
<td></td>
</tr>
<tr>
<td>教程</td>
<td>VO-Command-F8</td>
<td></td>
</tr>
<tr>
<td>Keyboard Help</td>
<td>VO-K</td>
<td></td>
</tr>
<tr>
<td>Activate Link</td>
<td>Enter</td>
<td></td>
</tr>
<tr>
<td>Activate button</td>
<td>Enter or Space Bar</td>
<td></td>
</tr>
<tr>
<td>Read next/previous item</td>
<td>VO + Right/Left Arrow</td>
<td></td>
</tr>
<tr>
<td>Go to next heading</td>
<td>VO + Command + H</td>
<td></td>
</tr>
<tr>
<td>Go to next table</td>
<td>VO + command + T</td>
<td></td>
</tr>
<tr>
<td>Go to previous (heading, table, etc.)</td>
<td>VO + Command + [H, T, etc.]</td>
<td></td>
</tr>
<tr>
<td>Interact with (go into/out of) objects(like iframes, menus, application regions, etc.)</td>
<td>VO + Shift + Down/Up Arrows</td>
<td></td>
</tr>
<tr>
<td>Dock</td>
<td>VO-D</td>
<td>To move between icons in the Dock, press VO-Left Arrow or VO-Right Arrow</td>
</tr>
<tr>
<td>mac menu bar</td>
<td>VO-M</td>
<td>navigate to the status menus, press VO-M-M.</td>
</tr>
<tr>
<td>Lock (or unlock) VO keys</td>
<td>VO +</td>
<td></td>
</tr>
<tr>
<td>Adjust the Voice</td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>VO-Command-Shift-Right Arrow several times</td>
<td>start setting</td>
</tr>
<tr>
<td></td>
<td>VO-Command-Shift-Up/Down Arrow</td>
<td>increase/decrease the setting’s value</td>
</tr>
</tbody>
</table>
<h1 id="navigation">Navigation</h1>
<table>
<thead>
<tr>
<th>Task</th>
<th>Command</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Go to next/previous focusable item</td>
<td>Tab / Shift + Tab</td>
<td>(link, button, input, etc.)</td>
</tr>
<tr>
<td>Move to the next control when a text field is selected</td>
<td>Control-Tab</td>
<td></td>
</tr>
<tr>
<td>Move the focus to the previous grouping of controls</td>
<td>Control-Shift-Tab</td>
<td></td>
</tr>
<tr>
<td>Move to the adjacent item in a list, tab group, or menu；Move sliders and adjusters (Up Arrow to increase values, Down Arrow to decrease values)</td>
<td>Arrow keys</td>
<td></td>
</tr>
<tr>
<td>move the VoiceOver cursor</td>
<td>VO-Up/Down/Left/Right Arrow</td>
<td></td>
</tr>
<tr>
<td>Move to a control adjacent to the text field</td>
<td>Control–Arrow keys</td>
<td></td>
</tr>
<tr>
<td>Click the default button or perform the default action</td>
<td>Return or Enter</td>
<td></td>
</tr>
<tr>
<td>Click the Cancel button or close a menu without choosing an item</td>
<td>Esc</td>
<td></td>
</tr>
<tr>
<td>Navigate Webpages</td>
<td>VO + U</td>
<td>Open rotor (see explanation below)</td>
</tr>
<tr>
<td>auto web spot</td>
<td>VO-Command-N / VO-Command-Shift-N</td>
<td>To jump to the next or previous auto web spot</td>
</tr>
<tr>
<td>VO-Right/Left Arrow</td>
<td>To move to the item before or after an auto web spot</td>
<td></td>
</tr>
<tr>
<td>select controls</td>
<td>VO-Space</td>
<td>interact with checkboxes, radio buttons, pop-up menus, and other onscreen controls</td>
</tr>
<tr>
<td>start/stop Interact with Elements</td>
<td>VO-Shift-Down/Up Arrow</td>
<td></td>
</tr>
<tr>
<td>Next link</td>
<td>VO + command + L</td>
<td></td>
</tr>
<tr>
<td>Next visited link</td>
<td>VO + command + V</td>
<td></td>
</tr>
<tr>
<td>Next form control</td>
<td>VO + command + J</td>
<td></td>
</tr>
<tr>
<td>Next list</td>
<td>VO + command + X</td>
<td></td>
</tr>
<tr>
<td>Next graphic</td>
<td>VO + command + G</td>
<td></td>
</tr>
<tr>
<td>Move the focus to the previous panel</td>
<td>Control-Shift-F6</td>
<td></td>
</tr>
<tr>
<td>Move to the status menu in the menu bar</td>
<td>Control-F8</td>
<td></td>
</tr>
<tr>
<td>Activate the next open window in the front app</td>
<td>Command-Accent (`)</td>
<td></td>
</tr>
<tr>
<td>Activate the previous open window in the front app</td>
<td>Shift-Command-Accent (`)</td>
<td></td>
</tr>
<tr>
<td>Move the focus to the window drawer</td>
<td>Option-Command-Accent (`)</td>
<td></td>
</tr>
</tbody>
</table>
<h1 id="data-tables">Data Tables</h1>
<table>
<thead>
<tr>
<th>Task</th>
<th>Command</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Go to next table</td>
<td>VO + command + T</td>
<td></td>
</tr>
<tr>
<td>Read column header</td>
<td>VO + C</td>
<td></td>
</tr>
<tr>
<td>Read row header</td>
<td>VO + R</td>
<td>/row from VO cursor location to end of row</td>
</tr>
<tr>
<td>read a table column</td>
<td>VO-C-C</td>
<td></td>
</tr>
<tr>
<td>read a row</td>
<td>VO-R-R</td>
<td></td>
</tr>
<tr>
<td>Read column from VO cursor location to bottom of column</td>
<td>VO + R + C</td>
<td></td>
</tr>
<tr>
<td>Navigate table cells</td>
<td>O + Arrow Keys (<img src="evernotecid://42B76B16-D58D-4F3C-B807-6F2A8086E7B7/appyinxiangcom/7963496/ENResource/p14465" alt="cdd13b4aaa32b8cfc4863a60d3882054.png"> or <img src="evernotecid://42B76B16-D58D-4F3C-B807-6F2A8086E7B7/appyinxiangcom/7963496/ENResource/p14466" alt="fd5faf1d96d8e526b6097b376d46b409.png"> or <img src="evernotecid://42B76B16-D58D-4F3C-B807-6F2A8086E7B7/appyinxiangcom/7963496/ENResource/p14467" alt="ab12b66bf3cd78a3e111fda1cef5e9fb.png"> or <img src="evernotecid://42B76B16-D58D-4F3C-B807-6F2A8086E7B7/appyinxiangcom/7963496/ENResource/p14468" alt="3cf03e7a94843864c6ed88c74c8247a1.png"> )</td>
<td></td>
</tr>
</tbody>
</table>
<h1 id="reading">Reading</h1>
<table>
<thead>
<tr>
<th>Task</th>
<th>Command</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Start reading</td>
<td>VO + A</td>
<td></td>
</tr>
<tr>
<td>Stop reading</td>
<td>Control</td>
<td></td>
</tr>
<tr>
<td>Read next item	VO + Right Arrow</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Read previous item	VO + Left Arrow</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Read paragraph	VO + P</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Read sentence	VO + S</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Read word (press W multiple times to spell words alphabetically and phonetically)</td>
<td>VO + W</td>
<td></td>
</tr>
<tr>
<td>Read from top to current location</td>
<td>VO + B</td>
<td></td>
</tr>
<tr>
<td>Jump to top of page (on desktop keyboard)</td>
<td>VO + Home</td>
<td></td>
</tr>
<tr>
<td>Jump to top of page (on laptop keyboards)</td>
<td>VO + fn + Left Arrow</td>
<td></td>
</tr>
<tr>
<td>Jump to bottom of page (on desktop keyboard)</td>
<td>VO + End</td>
<td></td>
</tr>
<tr>
<td>Jump to bottom of page (on laptop keyboards)</td>
<td>VO + fn + Right Arrow</td>
<td></td>
</tr>
<tr>
<td>Select speech setting option (speaking rate, voice, pitch, etc.)</td>
<td>VO + command + Right Arrow / Left Arrow</td>
<td></td>
</tr>
<tr>
<td>Modify the selected speech setting</td>
<td>VO + command + Up Arrow / Down Arrow</td>
<td></td>
</tr>
</tbody>
</table>
<h1 id="multi-touch-trackpad">Multi-Touch Trackpad</h1>
<table>
<thead>
<tr>
<th>Task</th>
<th>Command</th>
</tr>
</thead>
<tbody>
<tr>
<td>enable/disable the Trackpad Commander</td>
<td>VO + rotate two fingers clockwise/counter clockwise on the trackpad</td>
</tr>
<tr>
<td>move to the next or previous item</td>
<td>flick right or left</td>
</tr>
<tr>
<td>start or stop interacting with the current item</td>
<td>flick two fingers right or left</td>
</tr>
<tr>
<td>select the current item</td>
<td>double tap</td>
</tr>
</tbody>
</table>
<h1 id="reference-links">Reference links</h1>
<p><a href="https://dequeuniversity.com/screenreaders/voiceover-keyboard-shortcuts" target="_blank" rel="noopener">https://dequeuniversity.com/screenreaders/voiceover-keyboard-shortcuts</a></p>
<p><a href="https://support.apple.com/en-gb/HT204434" target="_blank" rel="noopener">https://support.apple.com/en-gb/HT204434</a></p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Accessibility</category>
      </categories>
      <tags>
        <tag>Voice over</tag>
      </tags>
  </entry>
  <entry>
    <title>A11ycasts Learning Notes</title>
    <url>/A11ycasts-Learning-Notes.html</url>
    <content><![CDATA[<p>You can also visit the whole list in <a href="https://www.youtube.com/playlist?list=PLNYkxOF6rcICWx0C9LVWWVqvHlYJyqw7g" target="_blank" rel="noopener">A11ycasts with Rob Dodson</a>.</p>
<p>These are my learning notes from the video.</p>
<h2 id="introducing-a11ycasts-a11ycasts-01">Introducing A11ycasts! – A11ycasts #01</h2>
<p>Hey folks! Accessibility is a topic very near and dear to my heart. And as I’ve spent the past year speaking about it I’ve realized that so many developers WANT to build accessible apps, but they’re just not sure how to go about it. To help teach those fundamentals I thought it would be great to have a series dedicated entirely to the art of accessibility. Meet A11ycasts!</p>
<blockquote>
<p>A11ycasts is short for AccessibilityCasts (a11y is a common shortening of the term accessibility because there are 11 letters in between the ““A”” and the ““Y””). The goal of A11ycasts is to teach developers how accessibility works all the way down at the platform level, while also demonstrating real world accessibility problems and solutions to fix them. If you want to follow along be sure to click the subscribe button to be notified every time we roll out a new episode.</p>
</blockquote>
<p>Thanks and enjoy the show!  – Rob</p>
<p>Watch all A11ycasts episodes: <a href="https://goo.gl/06qEUW" target="_blank" rel="noopener">https://goo.gl/06qEUW</a></p>
<p>“Over a billion people, about 15% of the world’s population, have some form of disability.” source: <a href="http://www.who.int/mediacentre/factsh" target="_blank" rel="noopener">http://www.who.int/mediacentre/factsh</a>…</p>
<h2 id="2-assistive-tech-switch-device">2 Assistive Tech: Switch Device</h2>
<h2 id="3-assistive-tech-voiceover-on-ios">3 Assistive Tech: VoiceOver on iOS</h2>
<p>iphone setting-&gt;general --&gt; accessbility --&gt; voice over</p>
<p>iphone setting-&gt;general --&gt; accessbility --&gt; accessbility shortcut --&gt; trun on “voice over” and “switch control”</p>
<p>tap once to  select</p>
<p>tap twice to active selection</p>
<p>two finger tap to move to stop vocie over.<br>
swipe left/right to move to next part.</p>
<p>three finger swipe up/down to scroll page</p>
<p>twisting gesture to switch the reading mode like heading or links</p>
<hr>
<h2 id="4-assistive-tech-talkback">4 Assistive Tech: TalkBack</h2>
<p>anroid phone</p>
<hr>
<h2 id="5-testing-shadow-dom-with-axe-coconut-a11ycasts-26">5 Testing Shadow DOM with aXe Coconut - A11ycasts #26</h2>
<p>chrome extension : aXe Coconut<br>
<a href="https://chrome.google.com/webstore/detail/axe-coconut/iobddmbdndbbbfjopjdgadphaoihpojp?hl=en-US" target="_blank" rel="noopener">https://chrome.google.com/webstore/detail/axe-coconut/iobddmbdndbbbfjopjdgadphaoihpojp?hl=en-US</a></p>
<p>aria-label</p>
<blockquote>
<p>What is Shadow DOM ?<br>
<a href="https://developer.mozilla.org/zh-CN/docs/Web/Web_Components/%E5%BD%B1%E5%AD%90_DOM" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/Web_Components/影子_DOM</a><br>
<a href="http://www.cnblogs.com/coco1s/p/5711795.html" target="_blank" rel="noopener">http://www.cnblogs.com/coco1s/p/5711795.html</a></p>
</blockquote>
<h2 id="6-how-to-build-a-toggle-button-a11ycasts-25">6 How to build a toggle button - A11ycasts #25</h2>
<h3 id="aria-authoring-practices-1-1-button">ARIA Authoring Practices 1.1: Button:</h3>
<p><a href="https://goo.gl/bx42jW" target="_blank" rel="noopener">https://goo.gl/bx42jW</a></p>
<blockquote>
<p>aria-pressed</p>
</blockquote>
<h3 id="custom-elements">Custom elements:</h3>
<p><a href="https://goo.gl/9xUH4Y" target="_blank" rel="noopener">https://goo.gl/9xUH4Y</a></p>
<h3 id="howto-components">HowTo: Components:</h3>
<p><a href="https://goo.gl/MfL1f5" target="_blank" rel="noopener">https://goo.gl/MfL1f5</a></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/6-1.png" alt="6-1.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/6-2.png" alt="6-2.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/6-3.png" alt="6-3.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/6-4.png" alt="6-4.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/6-5.png" alt="6-5.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/6-6.png" alt="6-6.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/6-7.png" alt="6-7.png"></p>
<p>Watch all A11ycasts episodes: <a href="https://goo.gl/06qEUW" target="_blank" rel="noopener">https://goo.gl/06qEUW</a></p>
<p>Subscribe to the Chrome Developers YouTube channel for updates on new episodes of A11ycasts: <a href="http://goo.gl/LLLNvf" target="_blank" rel="noopener">http://goo.gl/LLLNvf</a></p>
<hr>
<h2 id="8-the-new-way-to-test-accessibility-with-chrome-devtools-audits-a11ycasts-23">8 The new way to test accessibility with Chrome DevTools - Audits - A11ycasts #23</h2>
<p>The new way to test performance, accessibility and user experience.</p>
<p>Chrome version 60 ships with an exciting new DevTools feature called Audits 2.0. This panel replaces the previous Audits panel with a new set of tests powered by Lighthouse. Lighthouse is a tool which checks for various performance and best practice metrics, including accessibility. Under the hood, these accessibility tests are powered by aXe, the open source accessibility engine from the folks at Deque.</p>
<p>Today on A11ycasts I’ll show you how to get started with Audits 2.0 by checking a sample site for some common accessibility issues.</p>
<p>It’s important to note that a tool like the new Audits panel can only really check for a subset of accessibility issues (basically anything that can be automated). There are still a number of areas that this tool can’t test, so make sure you’re manually checking your site as well. Here’s a helpful guide if you’re not quite sure how to manually check for accessibility issues: <a href="https://goo.gl/2xUPh2" target="_blank" rel="noopener">https://goo.gl/2xUPh2</a></p>
<p>Command palette in DevTools: You can open this with cmd-shift-P or ctrl-shift-P on Windows.</p>
<p>New Audits panel, powered by Lighthouse: <a href="https://goo.gl/Nsp7wB" target="_blank" rel="noopener">https://goo.gl/Nsp7wB</a></p>
<p>Automated testing with aXe: <a href="https://goo.gl/QmBy9d" target="_blank" rel="noopener">https://goo.gl/QmBy9d</a></p>
<p>Note at around 3:23 I show a feature where you can click on a node in the Audits panel and inspect it in the Elements panel. This feature is still a little buggy. You can track the issue here: <a href="https://goo.gl/ugtVgu" target="_blank" rel="noopener">https://goo.gl/ugtVgu</a></p>
<p>Watch all A11ycasts episodes: <a href="https://goo.gl/06qEUW" target="_blank" rel="noopener">https://goo.gl/06qEUW</a></p>
<p>Subscribe to the Chrome Developers YouTube channel for updates on new episodes of A11ycasts: <a href="http://goo.gl/LLLNvf" target="_blank" rel="noopener">http://goo.gl/LLLNvf</a></p>
<hr>
<h2 id="12-accessible-modal-dialogs-a11ycasts-19">12 Accessible Modal Dialogs – A11ycasts #19</h2>
<p>When user opens the dialog, we want to retain knowledge of what previous active element was. So when they close it, we can return that.</p>
<p>ARIA Authoring Practices: Dialog - <a href="https://goo.gl/ibNKWw" target="_blank" rel="noopener">https://goo.gl/ibNKWw</a>  <a href="https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal" target="_blank" rel="noopener">https://www.w3.org/TR/wai-aria-practices-1.1/#dialog_modal</a><br>
eBay MIND Patterns: Dialog - <a href="https://goo.gl/FI5NHa" target="_blank" rel="noopener">https://goo.gl/FI5NHa</a><br>
Inert Polyfill - <a href="https://goo.gl/nXMS1V" target="_blank" rel="noopener">https://goo.gl/nXMS1V</a></p>
<p>Today on A11ycasts I’ll show you how to properly manage focus when adding a dialog to the page, and how to prevent a screen reader user from accidentally escaping behind the modal.</p>
<p>When close the dialog, the focus should return to the previousActiveElement.</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/12-1.png" alt="12-1.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/12-2.png" alt="12-2.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/12-3.png" alt="12-3.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/12-4.png" alt="12-4.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/12-5.png" alt="12-5.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/12-6.png" alt="12-6.png"></p>
<hr>
<h2 id="13-why-headings-and-landmarks-are-so-important-a11ycasts-18">13 Why headings and landmarks are so important – A11ycasts #18</h2>
<p>Screen Readers can use this information</p>
<p>Ctril + option + U to open rotor to find all the headings</p>
<p><a href="https://www.w3.org/TR/2018/NOTE-wai-aria-practices-1.1-20180726/examples/landmarks/HTML5.html" target="_blank" rel="noopener">https://www.w3.org/TR/2018/NOTE-wai-aria-practices-1.1-20180726/examples/landmarks/HTML5.html</a></p>
<hr>
<h2 id="15-focus-ring-a11ycasts-16">15  Focus Ring! – A11ycasts #16</h2>
<p>Make sure you are not just removing focus outlines throughout your app, because that’s going to create a really gnarly experience for your keyboard users.</p>
<p>add  tabindex</p>
<p><a href="https://drafts.csswg.org/selectors-4/#the-focusring-pseudo" target="_blank" rel="noopener">https://drafts.csswg.org/selectors-4/#the-focusring-pseudo</a></p>
<p>Download polyfill<br>
<a href="https://github.com/WICG/focus-visible" target="_blank" rel="noopener">https://github.com/WICG/focus-visible</a></p>
<p>add &lt;script src=&quot;./focus-ring.js&quot;<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/15-1.png" alt="15-1.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/15-2.png" alt="15-2.png"></p>
<p>You can show the Focus Ring for mouse user (input and texarea), not show for button…</p>
<p>At the same time, You can show the Focus Ring for keyboard user (input and texarea, button…)</p>
<p>And you can use the class name “.focus-ring” to set the style of the outline</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/15-3.png" alt="15-3.png"></p>
<p>Another polyfill what-input<br>
<a href="https://github.com/ten1seven/what-input" target="_blank" rel="noopener">https://github.com/ten1seven/what-input</a></p>
<hr>
<h2 id="16-automated-testing-with-axe-a11ycasts-15">16 Automated testing with aXe – A11ycasts #15</h2>
<p>an extension of Chrome Developer Tools<br>
Selenium automated test;</p>
<p><a href="https://github.com/dequelabs/axe-core" target="_blank" rel="noopener">axe-core</a><br>
<a href="https://github.com/dequelabs/axe-webdriverjs" target="_blank" rel="noopener">axe-webdriverjs</a><br>
<a href="https://github.com/dequelabs/axe-cli" target="_blank" rel="noopener">axe-cli</a> running in terminal</p>
<h3 id="axe-webdriverjs">axe-webdriverjs</h3>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/16-1.png" alt="16-1.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/16-2.png" alt="16-2.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/16-3.png" alt="16-3.png"></p>
<p>Download Chrome binary:  <a href="http://chromedriver.storage.googleapis.com/index.html" target="_blank" rel="noopener">chromedriver.storage.googleapis.com/index.html</a><br>
and put it in folder ~/bin/</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/16-4.png" alt="16-4.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/16-5.png" alt="16-5.png"></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/16-6.png" alt="16-6.png"></p>
<p>restart terminal<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/16-7.png" alt="16-7.png"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; node index</span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/dequelabs/axe-webdriverjs/raw/develop/test/integration/doc-lang.js" target="_blank" rel="noopener">https://github.com/dequelabs/axe-webdriverjs/raw/develop/test/integration/doc-lang.js</a></p>
<h3 id="axe-cli">axe-cli</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; npm install axe-cli -g</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; axe https://robdodson.me</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="20-how-i-do-an-accessibility-check-a11ycasts-11">20 How I do an accessibility check – A11ycasts #11</h2>
<p><a href="https://webaim.org/intro/" target="_blank" rel="noopener">https://webaim.org/intro/</a></p>
<ul>
<li>skip link (top left-hand corner) to skip heavy navigation to jump to main content</li>
<li>Can navigate using Tab, and there are discernible focused styles</li>
<li>As tabbing around the page, make sure  disabling off-screen interactive content(屏幕缩小造成有些内容没在视线内，最大化的时候在视线内) that can accidentally be focused</li>
<li>Can do a simple navigation of the page using a screen reader, alt text for images.  If something is being dynamically added to the page, focus is directed to it(Dropdown selection and add to shopping cart.).</li>
<li>Check page structure, make sure the page is using appropriate headings, and there are appropriate landmark rules or landmark elements on the page. In voiceover, you can open headings, landmarks or links by using Control-Alt or Control-Option-U. 左右键切换headings, landmarks or links。Use main tags, use nav tags, or use like roll attributes to create those land marks.</li>
<li>Color and contrast. Someone with low vision impairment is able to discern the text on the page.</li>
</ul>
<blockquote>
<p><a href="https://chrome.google.com/webstore/detail/accessibility-developer-t/fpkknkljclfencbdbgkenhalefipecmb?hl=en-US" target="_blank" rel="noopener">Accessibility Developer Tools of Chrome</a><br>
<a href="https://developers.google.com/web/updates/2018/01/devtools#a11y" target="_blank" rel="noopener">New accessibility tools in chrome</a></p>
</blockquote>
<blockquote>
<p><a href="https://chrome.google.com/webstore/detail/axe/lhdoppojpmngadmnindnejefpokejbdd?hl=en-US" target="_blank" rel="noopener">axe chrome extention</a>    ;</p>
</blockquote>
<hr>
<h2 id="25-roving-tabindex-a11ycasts-06">25 Roving TabIndex – A11ycasts #06</h2>
<p>One Control One Tab, for radio list, first Tab enter the list and second Tab out, using Up or Down to traverse inside the control. The last “Down” go to first one, The first “Up” go to last one.<br>
<a href="https://www.w3.org/TR/wai-aria-practices-1.1/#radiobutton" target="_blank" rel="noopener">https://www.w3.org/TR/wai-aria-practices-1.1/#radiobutton</a><br>
<a href="https://www.w3.org/TR/wai-aria-practices-1.1/examples/radio/radio-1/radio-1.html" target="_blank" rel="noopener">https://www.w3.org/TR/wai-aria-practices-1.1/examples/radio/radio-1/radio-1.html</a></p>
<blockquote>
<p>set the selected radio tabindex = “0” aria-checked = false, others tabindex = “-1”, aria-checked = true. So, tab + shift will return to the last selected item.</p>
</blockquote>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/25-1.png" alt="25-1.png"><br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/25-2.png" alt="25-2.png"><br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/25-3.png" alt="25-3.png"><br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/25-4.png" alt="25-4.png"><br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/25-5.png" alt="25-5.png"></p>
<p>If you’d like to read more on the pattern itself, you can check it out over on MDN: <a href="https://goo.gl/1adKIh" target="_blank" rel="noopener">https://goo.gl/1adKIh</a></p>
<hr>
<h2 id="26-just-use-button-a11ycasts-05">26 Just use button – A11ycasts #05</h2>
<p>Try to use native control.<br>
1. For DIV, ScreenReader will consider it as “Group” instead of “Button”; tab 的时候不会focus到DIV上，需要加上tabindex=“0” 才会 in the focus order；Screen reader read the DIV as “Sign up, group” rather than “Sign up, button”. Button 不需要加tabindex=“0” 就会in the focus order, ；Screen reader read the Button as “Sign up, button&quot;。<br>
2. We cannot use “Enter” or “Space” to trigger click event for DIV, but can trigger for Button automatically;<br>
3. When DIV is set disabled, we can still Tab to it, and it will also have the focus ring, the click event can still be triggered. When Button is set disabled, can not focus and click triggered.<br>
4. So, you’d better to use humble button rather than DIV, stick to the native elements (like select, input)</p>
<pre><code>5. small tip: instead of &lt;a href=&quot;#&quot;&gt;some link&lt;/a&gt; try this &lt;a href=&quot;javascript:void(0)&quot;&gt;some link&lt;/a&gt;﻿ 
</code></pre>
<p><a href="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/26-1.png" target="_blank" rel="noopener">26-1.png</a></p>
<hr>
<h2 id="27-controlling-focus-with-tabindex-a11ycasts-04">27 Controlling focus with tabindex – A11ycasts #04</h2>
<blockquote>
<p>tabindex=“0” means that the element is also programmatically focusable. call focus() method; you can also add it to non-interactive elements to make them focusable and add into focus order</p>
<p>tabindex=&quot;-1&quot; means that element is focusable but not added into focus order. Use to manage focus. That is also the inert-polyfill does under the hood. It sets all its children to tabindex -1.</p>
<p>tabindex=“5”  tabindex &gt; 0 will be on top of the tab order (eg, we have tabindex = 0 3 4 5, the order will be 3,4,5,0). Anti-pattern, not a good way to suggest. The general best practice, if you want some higher in the tab order = earlier in the DOM</p>
</blockquote>
<p>Whenever possible you want to use native HTML elements for your custom controls. The button tag, for instance, is very easy to style, and has built-in keyboard support and semantics.</p>
<p>But there are times when you need to build something that doesn’t have a corresponding native element. Sometimes you’ve just gotta build something new! In these cases it’s important to remember to add in crucial keyboard support so all of your users can access your content.</p>
<p>The first step is to make sure that a user can actually focus your control. To accomplish this you can use the tabindex attribute. Today on the show we’ll cover the various states of tabindex, when and how to use it, and point out one very important gotcha!</p>
<p>Watch all A11ycasts episodes: <a href="https://goo.gl/06qEUW" target="_blank" rel="noopener">https://goo.gl/06qEUW</a></p>
<p>Subscribe to the Chrome Developers YouTube channel for updates on new episodes of A11ycasts: <a href="http://goo.gl/LLLNvf" target="_blank" rel="noopener">http://goo.gl/LLLNvf</a></p>
<hr>
<h2 id="28-what-is-focus-a11ycasts-03">28 What is Focus? – A11ycasts #03</h2>
<blockquote>
<p>Tab or Shift-Tab keys  to move focus to<br>
Can only focus on the interactive elements like button. (The screen reader can handle the work of reading non-interactive elements like div, p, head)<br>
HTML dictates focus order (If developer change the order/position of dom via css, the tab order still based on the html sequence. Fix: 1 move the position in the HTML; 2 tabIndex attribute)</p>
</blockquote>
<p>Focus is one of the main pillars of accessibility, but it’s also an area that many developers are a little fuzzy on.</p>
<p>Here’s a good quote from Web AIM to help explain it: ““When an item has keyboard ‘focus’, it can be activated or manipulated with the keyboard.”” In other words, if an element is currently focused, and you press a key on your keyboard, that keyboard event will be directed at that element. <a href="http://webaim.org/techniques/keyboard" target="_blank" rel="noopener">http://webaim.org/techniques/keyboard</a>…</p>
<p>Users can change the currently focused element by pressing either the</p>
<blockquote>
<p>Tab or Shift-Tab keys.</p>
</blockquote>
<p>The order that elements receive focus is known as the <strong>““Tab Order””</strong>. Making sure you have a consistent, logical tab order is extremely important, especially for users who rely on the keyboard as their primary means of navigating a page.</p>
<p>In this episode we’ll show off what it means for elements to be implicitly focusable, and correct some common mistakes relating to mixed up tab orders.</p>
<p>Watch all A11ycasts episodes: <a href="https://goo.gl/06qEUW" target="_blank" rel="noopener">https://goo.gl/06qEUW</a></p>
<p>Subscribe to the Chrome Developers YouTube channel for updates on new episodes of A11ycasts: <a href="http://goo.gl/LLLNvf" target="_blank" rel="noopener">http://goo.gl/LLLNvf</a></p>
<hr>
<h2 id="29-inert-polyfill-a11ycasts-02">29 Inert Polyfill – A11ycasts #02</h2>
<p>Hamburger side bar / subnav   Without inert you’ll need to traverse the entire tree and set tabindex=-1 on everything that could be focusable, then undo those changes when the drawer animates out.        <a href="https://github.com/WICG/inert" target="_blank" rel="noopener">https://github.com/WICG/inert</a></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/29-1.png" alt="29-1.png"><br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/A11ycasts-Learning-Notes/29-2.png" alt="29-2.png"></p>
<hr>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Accessibility</category>
      </categories>
      <tags>
        <tag>Learning Notes</tag>
      </tags>
  </entry>
  <entry>
    <title>Git Pages + Jekyll/Hexo Build your own blog</title>
    <url>/Git-Pages-Jekyll-Hexo-Build-your-own-blog.html</url>
    <content><![CDATA[<h1 id="1-github-pages">1 Github Pages</h1>
<p>比较懒，默认都是用过gitbhub的啦</p>
<p>安装 Git</p>
<blockquote>
<p>Windows：下载并安装 git.<br>
Mac：使用 Homebrew, MacPorts ：brew install git;或下载 安装程序 安装。<br>
Linux (Ubuntu, Debian)：sudo apt-get install git-core<br>
Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core<br>
Windows 用户<br>
由于众所周知的原因，从上面的链接下载git for windows最好挂上一个代理，否则下载速度十分缓慢。也可以参考这个页面，收录了存储于百度云的下载地址。</p>
</blockquote>
<blockquote>
<p>Mac 用户<br>
您在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install 安装命令行工具。</p>
</blockquote>
<hr>
<blockquote>
<p>Windows 用户<br>
由于众所周知的原因，从上面的链接下载git for windows最好挂上一个代理，否则下载速度十分缓慢。也可以参考<a href="https://github.com/waylau/git-for-win" target="_blank" rel="noopener">这个页面</a>，收录了存储于百度云的下载地址。</p>
</blockquote>
<h2 id="step1-创建一个库-create-a-repository">step1 创建一个库 Create a repository</h2>
<p>在<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a> 页面<a href="https://github.com/new" target="_blank" rel="noopener">创建一个库</a> 命名规则是：<a href="http://username.github.io" target="_blank" rel="noopener">username.github.io</a>（username是Github用户名）。</p>
<p><a href="http://xn--CatherineLiyuankun-z372az17lh1lmp5ax1t6s3g.github.io" target="_blank" rel="noopener">例如我的就是CatherineLiyuankun.github.io</a>，我已经建过这个库了，所以报错说库已经存在。<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Git-Pages-Jekyll-Hexo-Build-your-own-blog/setp1-1.png" alt="setp1-1"></p>
<h2 id="step2-clone-库">step2 clone 库</h2>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Git-Pages-Jekyll-Hexo-Build-your-own-blog/setp2.png" alt="setp2.png"></p>
<h2 id="step3-创建index-html">step3 创建index.html</h2>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Git-Pages-Jekyll-Hexo-Build-your-own-blog/setp3-1.png" alt="setp3-1.png"></p>
<h2 id="step4-git-push">step4 git push</h2>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Git-Pages-Jekyll-Hexo-Build-your-own-blog/setp4-1.png" alt="setp4-1.png"></p>
<h2 id="step5-访问页面">step5 访问页面</h2>
<p>我的对应页面就是： <a href="https://catherineliyuankun.github.io/">https://catherineliyuankun.github.io/</a></p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Git-Pages-Jekyll-Hexo-Build-your-own-blog/setp5-1..png" alt="setp5-1"><br>
上面照着pages页面的步骤做就行，重点在下面</p>
<hr>
<h1 id="2-jekyll-or-hexo">2 Jekyll or Hexo ?</h1>
<p>弄到这里，我就犹疑了，查了查有用Jekyll 也有用 Hexo。这两个静态页面生成器（Static Website Generation）到底有什么区别，各自优缺有是什么呢？</p>
<table>
<thead>
<tr>
<th>Tables</th>
<th style="text-align:center">Jekyll</th>
<th style="text-align:right">Hexo</th>
</tr>
</thead>
<tbody>
<tr>
<td>依赖</td>
<td style="text-align:center">ruby  gem （gem依赖也许会带来不兼容问题 <strong>弱点</strong>）</td>
<td style="text-align:right">nodejs</td>
</tr>
<tr>
<td></td>
<td style="text-align:center"><em>brew install ruby</em></td>
<td style="text-align:right"><em>brew install node</em></td>
</tr>
<tr>
<td>安装</td>
<td style="text-align:center"><em>gem install jekyll</em></td>
<td style="text-align:right"><strong><em>npm install hexo-cli -g</em></strong></td>
</tr>
<tr>
<td>生成静态站点的速度</td>
<td style="text-align:center">随着网站内容增加越来越慢  <strong>最大弱点</strong></td>
<td style="text-align:right">相当快 <strong>优点</strong></td>
</tr>
<tr>
<td>与git Pages关系</td>
<td style="text-align:center">背后运行引擎，支持html/md格式（把原文上传github， 可以直接生成博客，也可以用在线编辑器处理，但只能用<a href="https://help.github.com/articles/adding-jekyll-plugins-to-a-github-pages-site/" target="_blank" rel="noopener">Github-safe plugins</a>）<strong>优点</strong></td>
<td style="text-align:right">无直接关系（本地生成 html 再上传），部署简单：deploy to Github pages or any other host with one deploy command</td>
</tr>
<tr>
<td>格式</td>
<td style="text-align:center">html/md</td>
<td style="text-align:right">md</td>
</tr>
<tr>
<td>是否需本地环境</td>
<td style="text-align:center">不需</td>
<td style="text-align:right">需要</td>
</tr>
<tr>
<td>编辑</td>
<td style="text-align:center">不支持在titles或者YAML使用变量，许多插件过时了 <strong>弱点</strong> ；不buid-in支持livereload；不buid-in支持post pagination as of Jekyll 3</td>
<td style="text-align:right">大量可用的<a href="https://hexo.io/plugins/" target="_blank" rel="noopener">免费插件</a>  <strong>优点</strong></td>
</tr>
<tr>
<td>模板</td>
<td style="text-align:center">copy Jekyll创始人的<a href="https://github.com/mojombo/tpw" target="_blank" rel="noopener">示例库</a>，以及其他用Jekyll搭建的<a href="https://github.com/jekyll/jekyll/wiki/Sites" target="_blank" rel="noopener">blog</a></td>
<td style="text-align:right">大量可用的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">免费开源主题</a> 中国社区很活跃 <strong>优点</strong></td>
</tr>
<tr>
<td>迁移</td>
<td style="text-align:center">依靠<a href="https://import.jekyllrb.com/docs/home/" target="_blank" rel="noopener">Jekyll importers</a>可从其他平台迁移博客（例如WordPress）<strong>优点</strong></td>
<td style="text-align:right"><a href="https://hexo.io/zh-cn/docs/migration" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/migration</a></td>
</tr>
<tr>
<td>开源</td>
<td style="text-align:center">免费开源</td>
<td style="text-align:right">免费开源</td>
</tr>
<tr>
<td>category 分类</td>
<td style="text-align:center">需要自己写标签语言遍历然后在创建各个分类的主页，再设置页面css，或者用ruby写插件</td>
<td style="text-align:right">文章前使用“category: 分类名”，自动右边生成，包括分类主页，默认样式</td>
</tr>
<tr>
<td>教程难度</td>
<td style="text-align:center">相对更难</td>
<td style="text-align:right">更简洁</td>
</tr>
<tr>
<td>上手难度</td>
<td style="text-align:center">相对更难</td>
<td style="text-align:right">更简单</td>
</tr>
</tbody>
</table>
<hr>
<h1 id="3-jekyll">3 Jekyll</h1>
<p>官网： <a href="https://jekyllrb.com/docs/quickstart/" target="_blank" rel="noopener">https://jekyllrb.com/docs/quickstart/</a><br>
中文版官网：<a href="https://www.jekyll.com.cn/docs/quickstart/" target="_blank" rel="noopener">https://www.jekyll.com.cn/docs/quickstart/</a></p>
<h2 id="step-0-前提安装有ruby">step 0 前提安装有ruby</h2>
<ul>
<li>
<p>如果你是Mac用户，你就需要安装 Xcode 和 Command-Line Tools了。下载方式 Preferences →<br>
Downloads → Components。如果安装过Xcode和 Command-Line Tools，那就已经有ruby了。</p>
</li>
<li>
<p>在 Windows 下使用 Jekyll 你可以使用 Jekyll running on Windows, 但是官方文档并不建议你在 Windows 平台上安装 Jekyll。</p>
</li>
</ul>
<p>安装 ruby</p>
<p>Mac</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>ruby</span><br></pre></td></tr></table></figure>
<p>Linux</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> intall ruby</span><br></pre></td></tr></table></figure>
<p>我已经安装有了。<br>
检查下版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ruby -v</span><br></pre></td></tr></table></figure>
<h2 id="step1-安装jekyll">step1 安装Jekyll</h2>
<p>开始正题</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~ gem install jekyll</span><br></pre></td></tr></table></figure>
<h2 id="step2-建my-awesome-site">step2 建my-awesome-site</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">~ jekyll new my-awesome-site</span><br></pre></td></tr></table></figure>
<p>手动把my-awesome-site目录下的所有内容复制到自己的git库中，我的是~/MyOwnGit/CatherineLiyuankun.github.io 或者是命令行复制</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> my-awesome-site</span><br><span class="line">cp -R * /Users/liyuankun/MyOwnGit/CatherineLiyuankun.github.io/</span><br></pre></td></tr></table></figure>
<h2 id="step3-启动jekyll环境">step3 启动Jekyll环境</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  CatherineLiyuankun.github.io git:(master) ✗ jekyll serve</span><br></pre></td></tr></table></figure>
<h2 id="step4-访问页面">step4 访问页面</h2>
<p>通过http://localhost:4000 ，访问页面。</p>
<h2 id="step5-jekyll博客模板">step5 Jekyll博客模板</h2>
<p>Jekyll创始人的<a href="https://github.com/mojombo/tpw" target="_blank" rel="noopener">示例库</a>，以及其他用Jekyll搭建的<a href="https://github.com/jekyll/jekyll/wiki/Sites" target="_blank" rel="noopener">blog</a>。</p>
<hr>
<h1 id="4-hexo">4 Hexo</h1>
<p>官网主题(模板)： <a href="https://hexo.io/themes/" target="_blank" rel="noopener">https://hexo.io/themes/</a><br>
中文版官网：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a></p>
<h2 id="step-0-前提安装有node-js">step 0 前提安装有Node.js</h2>
<p>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。<br>
安装 Node.js 的最佳方式是使用 nvm。</p>
<p>cURL:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure>
<p>Wget:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</span><br></pre></td></tr></table></figure>
<p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ nvm install stable</span><br></pre></td></tr></table></figure>
<p>或者您也可以下载 安装程序 来安装。</p>
<blockquote>
<p>Windows 用户<br>
对于windows用户来说，建议使用安装程序进行安装。安装时，请勾选Add to PATH选项。<br>
另外，您也可以使用Git Bash，这是git for windows自带的一组程序，提供了Linux风格的shell，在该环境下，您可以直接用上面提到的命令来安装Node.js。打开它的方法很简单，在任意位置单击右键，选择“Git Bash Here”即可。由于Hexo的很多操作都涉及到命令行，您可以考虑始终使用Git Bash来进行操作。</p>
</blockquote>
<h2 id="step1-安装-hexo">step1 安装 Hexo</h2>
<p>开始正题,所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<h2 id="step2-init-hexo">step2 init Hexo</h2>
<p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中(我新建了文件夹hexofolder)新建所需要的文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init hexofolder</span><br><span class="line">$ <span class="built_in">cd</span> hexofolder</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<p>新建完成后，指定文件夹的目录如下：</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── <span class="variable">_config</span>.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── <span class="variable">_drafts</span></span><br><span class="line">|   └── <span class="variable">_posts</span></span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure>
<p>_config.yml<br>
网站的 配置 信息，您可以在此<a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">配置大部分的参数</a>。</p>
<p>package.json<br>
应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。(具体看官方文档，这里就不赘述了)</p>
<p>scaffolds<br>
模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>
<p>Hexo的模板是指在新建的markdown文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p>
<p>source<br>
资源文件夹是存放用户资源的地方。除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。</p>
<p>themes<br>
主题 文件夹。Hexo 会根据主题来生成静态页面。</p>
<h2 id="step3-hexo-命令">step3 Hexo 命令</h2>
<p>在<folder>文件夹下就可以执行</folder></p>
<figure class="highlight verilog"><table><tr><td class="code"><pre><span class="line">$ hexo g #hexo <span class="keyword">generate</span> 生成</span><br><span class="line">$ hexo s #启动本地web服务器</span><br></pre></td></tr></table></figure>
<p>这时，通过http://localhost:4000 ，访问页面。就可以看到，hexo默认带的主题landscap的效果。</p>
<blockquote>
<p>Hexo<a href="https://hexo.io/zh-cn/docs/commands" target="_blank" rel="noopener">常用的几个命令</a>：<br>
hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹<br>
hexo server (hexo s) 启动本地web服务，用于博客的预览<br>
hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）<br>
另外还有其他几个常用命令：</p>
</blockquote>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"postName"</span> #新建文章</span><br><span class="line">$ hexo new<span class="built_in"> page </span><span class="string">"pageName"</span> #新建页面</span><br></pre></td></tr></table></figure>
<p>常用简写</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">$ hexo n == hexo new</span><br><span class="line">$ hexo g == hexo generate</span><br><span class="line">$ hexo s == hexo server</span><br><span class="line">$ hexo d == hexo deploy</span><br></pre></td></tr></table></figure>
<p>常用组合</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ </span>hexo d -g <span class="comment">#生成部署</span></span><br><span class="line"><span class="variable">$ </span>hexo s -g <span class="comment">#生成预览</span></span><br></pre></td></tr></table></figure>
<h2 id="step4-添加其他主题">step4 添加其他主题</h2>
<p>官网主题(模板)： <a href="https://hexo.io/themes/%EF%BC%8C%E5%9C%A8%E4%B8%8A%E9%9D%A2%E9%80%89%E6%8B%A9%E8%87%AA%E5%B7%B1%E5%96%9C%E6%AC%A2%E7%9A%84%E6%A8%A1%E6%9D%BF%EF%BC%8C%E8%BF%9B%E5%85%A5%E5%AE%83%E5%AF%B9%E5%BA%94%E7%9A%84git%E9%A1%B5%E9%9D%A2%EF%BC%8C%E8%8E%B7%E5%BE%97clone%E7%9A%84%E9%93%BE%E6%8E%A5%E3%80%82" target="_blank" rel="noopener">https://hexo.io/themes/，在上面选择自己喜欢的模板，进入它对应的git页面，获得clone的链接。</a></p>
<p>这里以我改的主题Hexo-theme-zilan为例进行说明， 我这个主题增加了。</p>
<h3 id="安装主题">安装主题</h3>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> hexofolder/themes</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/CatherineLiyuankun/Hexo-theme-zilan.git</span></span><br></pre></td></tr></table></figure>
<p>可以看到themes文件夹下多了一个文件夹Hexo-theme-zilan。</p>
<h3 id="启用主题">启用主题</h3>
<p>修改Hexo目录下的_config.yml配置文件中的theme属性，将其设置为Hexo-theme-zilan。</p>
<p>###更新主题</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> themes/Hexo-theme-zilan</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git pull</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo g <span class="comment"># 生成</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo s <span class="comment"># 启动本地web服务器</span></span></span><br></pre></td></tr></table></figure>
<p>现在打开http://localhost:4000/ ，会看到我们已经应用了一个新的主题。</p>
<h2 id="step5-部署到git-pages">step5 部署到git pages</h2>
<p>这一步恐怕是最关键的一步了，让我们把在本地web环境下预览到的博客部署到github上，然后就可以直接通过http://CatherineLiyuankun.github.io/访问了。</p>
<p>首先需要明白所谓部署到github的原理。</p>
<p>之前步骤中在Github上创建的那个特别的repo（<a href="http://CatherineLiyuankun.github.io">CatherineLiyuankun.github.io</a>）一个最大的特点就是其master中的html静态文件，可以通过链接http://CatherineLiyuankun.github.io来直接访问。<br>
Hexo -g 会生成一个静态网站（第一次会生成一个public目录），这个静态文件可以直接访问。<br>
需要将hexo生成的静态网站，提交(git commit)到github上。<br>
明白了原理，怎么做自然就清晰了。</p>
<p>使用hexo deploy部署<br>
hexo deploy可以部署到很多平台，具体可以参考这个链接. 如果部署到github，需要在配置文件_config.xml中作如下修改：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com/CatherineLiyuankun.github.io</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>注意部署到git需要提前安装一个扩展：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
<p>然后在命令行中执行</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure>
<p>即可完成部署。</p>
<p>去自己的git pages看下部署的成果吧！<a href="https://catherineliyuankun.github.io/">https://catherineliyuankun.github.io/</a></p>
<h2 id="step5-添加分类">step5 添加分类</h2>
<h3 id="添加分类页">添加分类页</h3>
<p>新建一个页面，命名为 categories 。命令如下：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">hexo new<span class="built_in"> page </span>categories</span><br></pre></td></tr></table></figure>
<p>编辑刚新建的页面/source/categories/index.md，将页面的类型设置为 categories ，主题将自动为这个页面显示所有分类。</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">title: 分类</span><br><span class="line">date: 2018-8-22 12:39:04</span><br><span class="line">type: "categories"</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>注意：如果有启用多说 或者 Disqus 评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false，如：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-8</span><span class="bullet">-22</span> <span class="number">12</span><span class="string">:39:04</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<p>在菜单中添加链接。编辑主题的 _config.yml ，将 menu 中的 categories: /categories 注释去掉，如下:</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">menu</span>:</span><br><span class="line">  home: /</span><br><span class="line">  categorie<span class="variable">s:</span> /categories</span><br><span class="line">  archive<span class="variable">s:</span> /archives</span><br><span class="line">  <span class="keyword">tag</span><span class="variable">s:</span> /<span class="keyword">tags</span></span><br></pre></td></tr></table></figure>
<p>但是这样部署之后，在分类页面还是看不到任何分类的，同时官方的next教程中并没有写。<br>
其实为文章添加分类关联的教程已经在hexo教程给出了。。<br>
下面仅仅做个简单的介绍，全面的教程参照<a href="https://hexo.io/zh-cn/docs/front-matter.html#%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE" target="_blank" rel="noopener">hexo官方教程</a></p>
<p>文章内添加分类：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Installing</span> <span class="string">MySQL</span> <span class="string">on</span> <span class="string">Mac</span></span><br><span class="line"><span class="attr">catalog:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-09</span><span class="bullet">-29</span> <span class="number">14</span><span class="string">:23:53</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">"zsh: command not found"</span></span><br><span class="line"><span class="attr">header-img:</span> <span class="string">"https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Installing-MySQL-on-Mac/mysql-header.png"</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">MySQL</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">TECH</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Database</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<p>###添加文章分类关联<br>
hexo中有Front-matter这个概念，是文件最上方以 — 分隔的区域，用于指定个别文件的变量。举个栗子，在hexo new post article时会生成article.md文件，文件生成好的文章属性。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo next 为文章添加分类</span><br><span class="line">date: 2018-8-22 18:12:43</span><br><span class="line">tags:</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>在其中添加categories属性，再部署之后就可以在分类页看到分类了</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: hexo next 为文章添加分类</span><br><span class="line">date: 2018-8-22 18:12:43</span><br><span class="line">tags:</span><br><span class="line">categories: </span><br><span class="line"><span class="bullet">- </span>Frontend</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h2 id="step5-分类显示页面">step5+ 分类显示页面</h2>
<p>参考<a href="https://github.com/hughshen/blog/blob/c3390a5a99cfcf398a012a9cf742b7f41b49d345/app/posts/1437904915000-hexo-modify-theme.md" target="_blank" rel="noopener">hughshen的文章</a></p>
<p>我的Commit代码1：<a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/5005553605b5b2c1a2077d5b025b2e387d93a030" target="_blank" rel="noopener">[categories] page and category page work</a></p>
<p>Commit 代码2：<a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/2183339d41a39eb4c88847f953d08f6a8df72909" target="_blank" rel="noopener">重构archive，category, tags </a><br>
Commit 代码3：<a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/84b8445e9e682c1ef284dc4a17938a16da977f89" target="_blank" rel="noopener">重构archive，category, tags2 </a></p>
<p>├── archive.ejs //文章归档，包括单个分类与单个标签，调用 _partial/archive.ejs<br>
├── categories.ejs  //显示所有分类的布局，<br>
├── category.ejs  //单个分类显示的布局，调用 _partial/archive.ejs<br>
├── tags.ejs  //显示所有显示的布局，调用 _partial/archive.ejs, 调用_partial/tags.ejs</p>
<h2 id="step6-多级分类显示">step6 多级分类显示</h2>
<p>利用系统的<a href="https://hexo.io/zh-cn/docs/helpers.html#list-categories" target="_blank" rel="noopener">list_categories([categories], [options])</a>辅助函数生成分类列表;</p>
<p>&lt;%- list_categories([options]) %&gt;</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td>orderby</td>
<td>分类排列方式</td>
<td>name</td>
</tr>
<tr>
<td>order</td>
<td>分类排列顺序。1, asc 升序；-1, desc 降序。</td>
<td>1</td>
</tr>
<tr>
<td>show_count</td>
<td>显示每个分类的文章总数</td>
<td>true</td>
</tr>
<tr>
<td>style</td>
<td>分类列表的显示方式。使用 list 以无序列表（unordered list）方式显示。</td>
<td>list</td>
</tr>
<tr>
<td>separator</td>
<td>分类间的分隔符号。只有在 style 不是 list 时有用。</td>
<td>,</td>
</tr>
<tr>
<td>depth</td>
<td>要显示的分类层级。0 显示所有层级的分类；-1 和 0 很类似，但是显示不分层级；1 只显示第一层的分类。</td>
<td>0</td>
</tr>
<tr>
<td>class</td>
<td>分类列表的 class 名称。</td>
<td>category</td>
</tr>
<tr>
<td>transform</td>
<td>改变分类名称显示方法的函数</td>
<td></td>
</tr>
</tbody>
</table>
<p>具体代码见Commit: <a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/e7a7cd1843986f6cc4ac124184d3d0021d93aafe" target="_blank" rel="noopener">[categories][sidebar]Make categories display as hierarchical structure in sidebar</a></p>
<h2 id="step6-分类页面显示不同背景图片">step6+ 分类页面显示不同背景图片</h2>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- /Hexo-theme-zilan/themes/zilan/layout/_partial/header.ejs --&gt;</span><br><span class="line">&lt;!-- Post Header --&gt;</span><br><span class="line">&lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">    header.intro-header&#123;</span><br><span class="line">        &lt;% if (is_home()) &#123; %&gt;</span><br><span class="line">            background-image: url(&apos;&lt;%= config.root + config[&quot;header-img&quot;] %&gt;&apos;); </span><br><span class="line">            /*config*/</span><br><span class="line">        &lt;%&#125; else if (is_post())&#123;%&gt;</span><br><span class="line">            background-image: url(&apos;&lt;%= page[&quot;header-img&quot;] %&gt;&apos;);</span><br><span class="line">            /*post*/</span><br><span class="line">        &lt;%&#125; else if (is_category())&#123;%&gt;</span><br><span class="line">            background-image: url(&apos;&lt;%= config.root + &quot;img/header_img/category-bg.jpg&quot; %&gt;&apos;);</span><br><span class="line">            /*category*/</span><br><span class="line">        &lt;%&#125; else &#123;%&gt;</span><br><span class="line">            background-image: url(&apos;&lt;%= config.root + page[&quot;header-img&quot;] %&gt;&apos;);</span><br><span class="line">            /*page*/</span><br><span class="line">        &lt;%&#125; %&gt;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;% if (config.signature) &#123;%&gt;</span><br><span class="line">    #signature&#123;</span><br><span class="line">        background-image: url(&apos;&lt;%= config.root + config[&quot;signature-img&quot;] %&gt;&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;%&#125;%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;% if (config[&quot;header-cover-color&quot;]) &#123;%&gt;</span><br><span class="line">    #header-cover&#123;</span><br><span class="line">        background-color: &lt;%= config[&quot;header-cover-color&quot;] %&gt;;</span><br><span class="line">    &#125;</span><br><span class="line">    &lt;%&#125;%&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure>
<p>具体代码见Commit: <a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/25b40c9d72c1eb0d62f97c376b6366d942eda12f" target="_blank" rel="noopener">[category][header]background img for url http://liyuankun.top/categories/xxxxx/</a></p>
<p>参考文章： <a href="https://blog.chonghan.me/Hexo/Hexo-change-header-background-image/" target="_blank" rel="noopener">Hexo 魔改： 为 Next 主题 Header 栏设置可变化的背景图片</a></p>
<h2 id="step7-添加widget">step7 添加widget</h2>
<p>看我的commit：<a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/f799a1a0457d6c88bcd47a2502aecdbd2f4efd40" target="_blank" rel="noopener">侧边栏 添加微信二维码widget</a></p>
<h2 id="step8-模板">step8 模板</h2>
<p>在layout布局文件夹中, 可以看到有的主题布局文件是.ejs 结尾，有的是.swig结尾，其实是使用的模板不同。<br>
用于存放主题的模板文件，决定了网站内容的呈现方式，Hexo 内建 Swig 模板引擎，您可以另外安装插件来获得 EJS、Haml 或 Jade 支持，Hexo 根据模板文件的扩展名来决定所使用的模板引擎。<br>
对于下载的<a href="https://github.com/hexojs/hexo-renderer-jade" target="_blank" rel="noopener">jade的模板</a>，需要在安装插件。终端下输入</p>
<figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install </span>hexo-renderer-<span class="keyword">jade </span>--save</span><br></pre></td></tr></table></figure>
<p>对于下载的<a href="https://github.com/hexojs/hexo-renderer-ejs" target="_blank" rel="noopener">Ejs的模板</a>，需要在安装插件。终端下输入：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-renderer-ejs <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
<p>对于下载的<a href="https://github.com/hexojs/hexo-renderer-haml" target="_blank" rel="noopener">Haml的模板</a>，需要在安装插件。终端下输入：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> hexo-renderer-haml <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
<hr>
<h1 id="5-博客配置">5 博客配置</h1>
<h2 id="5-1-绑定域名">5.1 绑定域名</h2>
<h3 id="step1-买域名">step1 买域名</h3>
<p>可以在<a href="https://wanwang.aliyun.com/domain/?spm=5176.8006371.1007.dnetcndomain.q1ys4x" target="_blank" rel="noopener">阿里云</a>购买的域名。我这个 liyuankun.top 的域名第一年才只要1元(<a href="https://wanwang.aliyun.com/domain/1yuan?spm=5176.8112568.483655.12.3c8f9ed5abPlyL" target="_blank" rel="noopener">新用户特惠</a>)~ 我又续了9年，共10年才145元。</p>
<p>域名尽量选择短一点比较好记住，中文域名比如 博客.top ,GitHub Pages 无法处理中文域名，会导致你的域名在你的主页上不能使用。</p>
<p>常见国际域名后缀：.com，.net，.top，tech，.ink，.info，.win等<br>
常见国内域名后缀：.cn,   .com.cn,  .cx,  .cc,  .xin等</p>
<h3 id="step2-修改cname">step2 修改CNAME</h3>
<p>如果你不想用http://username.github.com/jekyll_demo/这个域名，可以换成自己的域名。</p>
<p>具体方法是在repo的根目录下面，新建一个名为CNAME的文本文件（注意一定是大写的！！！），里面写入你要绑定的域名，<a href="http://xn--liyuankun-k99pf62n.xn--topxxx-r06lr19q.example.com" target="_blank" rel="noopener">比如liyuankun.top或者xxx.example.com</a>。<br>
或者是在github 你的pages库：<a href="http://CatherineLiyuankun.github.io">CatherineLiyuankun.github.io</a> 的Setting 选项里，设置Custom domain：liyuankun.top。就会自动新建一个名为CNAME的文本文件，里面写入你填写的域名：liyuankun.top。<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Git-Pages-Jekyll-Hexo-Build-your-own-blog/5_1-1.png" alt="5_1-1.png"><br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Git-Pages-Jekyll-Hexo-Build-your-own-blog/5_1-2.png" alt="5_1-2"></p>
<h3 id="step3-域名解析">step3 域名解析</h3>
<p>在你的域名注册提供商那里配置DNS解析，获取<a href="https://help.github.com/articles/setting-up-an-apex-domain/" target="_blank" rel="noopener">GitHub的IP地址</a>, 或者直接ping <a href="http://CatherineLiyuankun.github.io">CatherineLiyuankun.github.io</a>, 得到IP。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ping CatherineLiyuankun.github.io</span><br><span class="line">PING catherineliyuankun.github.io (185.199.109.153): 56 data bytes</span><br><span class="line">64 bytes from 185.199.109.153: icmp_seq=0 ttl=47 time=459.228 ms</span><br></pre></td></tr></table></figure>
<p>如果绑定的是顶级域名，则DNS要新建一条A记录，指向185.199.109.153，主机记录为 www,代表可以解析 www.liyuankun.top的域名。</p>
<p>另一个为 @, 代表 liyuankun.top，记录值就是我们博客的IP地址，刚才ping出的地址 185.199.109.153<br>
（如果绑定的是二级域名，则DNS要新建一条CNAME记录，<a href="http://xn--CatherineLiyuankun-m254at60r.github.com" target="_blank" rel="noopener">指向CatherineLiyuankun.github.com</a>）</p>
<p>此外，别忘了将_config.yml文件中的baseurl改成根目录&quot;/&quot;。</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Git-Pages-Jekyll-Hexo-Build-your-own-blog/5_1-step3.png" alt="5_1-step3.png"></p>
<h3 id="step4-域名备案">step4 域名备案</h3>
<blockquote>
<p>购买好域名后我就可以直接使用它吗？<br>
如果只是用作pages博客的域名，前面三步骤就可以使用了。<br>
如果需要绑定七牛云或者其他用途，则需要域名备案。域名只有经过备案审核后才能使用，审核必须有相应的主机，光有域名不行。</p>
</blockquote>
<blockquote>
<p>那我该如何备案呢？</p>
</blockquote>
<h4 id="1通过全国公安机关互联网安全管理服务平台-备案">1通过全国公安机关互联网安全管理服务平台 备案</h4>
<p><a href="https://developer.qiniu.com/af/kb/3987/how-to-make-website-and-inquires-the-police-put-on-record-information" target="_blank" rel="noopener">如何进行公安网备案？</a></p>
<h4 id="2通过阿里云-备案">2通过阿里云 备案</h4>
<blockquote>
<ol>
<li>在阿里云登录后进入<a href="https://beian.aliyun.com/" target="_blank" rel="noopener">备案系统</a>，申请备案。</li>
<li>按表单要求填写真实的备案信息，然后点击提交。此操作需要证件照（身份证或其他有效证件）的正反面照片。按表单要求填写真实的备案信息，然后点击提交。此操作需要证件照（身份证或其他有效证件）的正反面照片。</li>
<li>提交申请后过一天或两天，阿里云工作人员会给你打电话，验证你的姓名和身份证后四位等信息就算是初审通过了。</li>
<li>接下来你需要再次登录备案系统，申请幕布拍照，然后点击指定链接，网购价值15元的幕布，以此为背景拍照再上传到备案系统。</li>
<li>工作人员会对照片进行审核，照片审核通过后他们会把你的备案信息提交给省通信管理局审核，通信管理局一般会审核11—20天，审核通过后会发短信和邮件通知你。</li>
</ol>
</blockquote>
<h2 id="5-2-网站统计">5.2 网站统计</h2>
<p>集成了 <a href="https://marketingplatform.google.com/about/" target="_blank" rel="noopener">Baidu Analytics</a> 和 <a href="https://marketingplatform.google.com/about/" target="_blank" rel="noopener">Google Analytics</a>，到各个网站注册拿到track_id替换下面的就可以了</p>
<p>配置方法： <a href="https://www.jianshu.com/p/7e1166eb412a" target="_blank" rel="noopener">https://www.jianshu.com/p/7e1166eb412a</a></p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="section"># Analytics settings</span></span><br><span class="line"><span class="section"># Baidu Analytics</span></span><br><span class="line"><span class="section"># ba_track_id: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span></span><br><span class="line"><span class="section"># Google Analytics</span></span><br><span class="line">ga<span class="emphasis">_track_</span>id: 'UA-XXXXXXXX-X'          # Format: UA-xxxxxx-xx</span><br><span class="line">ga_domain: yoursite</span><br></pre></td></tr></table></figure>
<h3 id="sitemap"><a href="https://github.com/hexojs/hexo-generator-sitemap" target="_blank" rel="noopener">sitemap</a></h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>
<p>在_config.yml里添加：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#sitemap</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">sitemap.xml</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>
<p>配完之后，就可以访问http://CatherineLiyuankun.github.io/sitemap.xml，发现这个文件已经成功生成了</p>
<h2 id="5-3-评论">5.3 评论</h2>
<h3 id="disqus"><a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a></h3>
<p>博客中使用的是 <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 评论系统，注册帐号后，按下面的步骤简单的配置即可：</p>
<blockquote>
<p>一定一定要注意不是username!!! 是shortname！！！！</p>
</blockquote>
<p>刚开始被有些文章误导了，disqus_username: 填成username。造成评论一直无法显示!</p>
<blockquote>
<p>We were unable to load Disqus. If you are a moderator please see our troubleshooting guide.</p>
</blockquote>
<p>什么是shortname?  <a href="https://help.disqus.com/installation/whats-a-shortname" target="_blank" rel="noopener">https://help.disqus.com/installation/whats-a-shortname</a><br>
去哪找shortname呢？<br>
在https://disqus.com/admin/create/  点击setting。<br>
没创建页面的先创建页面，输入网站名（就是根据这个生成Shortname的）lyk,<br>
下一步选免费的，然后选应用，填网址https://catherineliyuankun.github.io/。成功！</p>
<blockquote>
<p>Shortname    Your website shortname is lyk-1</p>
</blockquote>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Git-Pages-Jekyll-Hexo-Build-your-own-blog/5_3-1.png" alt="5_3-1.png"></p>
<p>这个 Shortname 就是我们 _config.yml 中 disqus_username</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Disqus settings</span></span><br><span class="line"><span class="attr">disqus_username:</span> <span class="string">lyk-1</span></span><br></pre></td></tr></table></figure>
<h3 id="gitment">Gitment</h3>
<p>####<strong>step 1 注册 OAuth Application</strong></p>
<ol>
<li>登录 Github。 注册 <a href="https://github.com/settings/profile" target="_blank" rel="noopener">https://github.com/settings/profile</a> (左侧下方的 Developer<br>
settings-&gt;点击绿色 Register a new application)</li>
<li>填写：</li>
</ol>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">Application name：Gitment</span><br><span class="line">Homepage <span class="built_in">URL</span>：<span class="keyword">https</span>://catherineliyuankun.github.io/</span><br><span class="line">Application description：Blog comment <span class="keyword">system</span></span><br><span class="line">Authorization callback <span class="built_in">URL</span>：<span class="keyword">https</span>://catherineliyuankun.github.io/</span><br></pre></td></tr></table></figure>
<p>点击 Register application后获取：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">Client ID: xxxx</span><br><span class="line">Client Secret: xxxxxxxxxx</span><br></pre></td></tr></table></figure>
<ol start="3">
<li>新建一个git 库存放 gitment-comments, Repository name 为 gitment-comments<br>
地址：<a href="https://github.com/catherineliyuankun/gitment-comments" target="_blank" rel="noopener">https://github.com/catherineliyuankun/gitment-comments</a><br>
但是稍后填的是库名：gitment-comments，不是地址。</li>
</ol>
<h4 id="step-2-添加-gitment-到博客">step 2 添加 Gitment 到博客</h4>
<p>打开 __config.yml, 添加设置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">gitment:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  mint:</span> <span class="literal">true</span> 		<span class="comment"># RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span></span><br><span class="line"><span class="attr">  count:</span> <span class="literal">true</span> 		<span class="comment"># Show comments count in post meta area</span></span><br><span class="line"><span class="attr">  lazy:</span> <span class="literal">false</span> 		<span class="comment"># Comments lazy loading with a button</span></span><br><span class="line"><span class="attr">  cleanly:</span> <span class="literal">false</span> 	<span class="comment"># Hide 'Powered by ...' on footer, and more</span></span><br><span class="line"><span class="attr">  language:</span> 		<span class="comment"># Force language, or auto switch by theme</span></span><br><span class="line"><span class="attr">  github_user:</span> <span class="string">catherineliyuankun</span> 	<span class="comment"># 此处 - Your Github ID</span></span><br><span class="line"><span class="attr">  github_repo:</span> <span class="string">gitment-comments</span> <span class="comment"># 此处注意 - The repo you use to store Gitment comments</span></span><br><span class="line"><span class="attr">  client_id:</span> <span class="string">xxxxxxxxxxxxxxxxxx</span> <span class="comment"># 此处 - Github client id for the Gitment</span></span><br><span class="line"><span class="attr">  client_secret:</span> <span class="string">xxxxxxxxxxxxx</span> <span class="comment"># 此处 - Github access secret token for the Gitment</span></span><br><span class="line"><span class="attr">  proxy_gateway:</span> <span class="comment"># Address of api proxy, See: https://github.com/aimingoo/intersect</span></span><br><span class="line"><span class="attr">  redirect_protocol:</span> <span class="comment"># Protocol of redirect_uri with force_redirect_protocol when mint enabled</span></span><br></pre></td></tr></table></figure>
<p>添加gitment代码（页面，样式，script等）到主题：我的主题的<a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/28458cf69588837448ab769f645eea3948a704fc" target="_blank" rel="noopener">commit gitment代码</a></p>
<p>部署:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure>
<p>之后文章底部会出现 初始化本文的评论页，点击初始化。</p>
<h2 id="5-4-二维码">5.4 二维码</h2>
<p>添加微信二维码 commit 代码 ：<a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/f799a1a0457d6c88bcd47a2502aecdbd2f4efd40" target="_blank" rel="noopener">Add wechat QR code widget</a></p>
<h2 id="5-5-git-fork-me">5.5 git fork me</h2>
<p>获取<a href="https://blog.github.com/2008-12-19-github-ribbons/" target="_blank" rel="noopener">forlk me代码</a>，选择你喜欢的代码添加到hexo/themes/zilan/layout/layout.ejs的末尾即可，注意要将代码里的you改成你的Github账号名。</p>
<p>我的博客模板的<a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/15cced30f3d95e466cd5d10f8f3a462707c9d336" target="_blank" rel="noopener">commit</a>。</p>
<h2 id="5-6-使用图床">5.6 使用图床</h2>
<h3 id="七牛云">七牛云</h3>
<p>有很多推荐<a href="https://portal.qiniu.com/signup?code=3lbl5aqwrovv6" target="_blank" rel="noopener">七牛云</a>, 具体方法可以看<a href="https://www.jianshu.com/p/44d818f781a7" target="_blank" rel="noopener">这篇文章</a>.</p>
<p>用插件上传图片时报错：</p>
<blockquote>
<p>请求报文格式错误。(400：incorrect region, please use <a href="http://up-z2.qiniup.com" target="_blank" rel="noopener">up-z2.qiniup.com</a>)<br>
我之前选的“华南”地区。伤心，查了查官网上传没有问题，可以自动切换上传区域。插件可能还没更新最新的sdk造成的。算了先用官网上传吧。</p>
</blockquote>
<p><a href="https://developer.qiniu.com/kodo/manual/1671/region-endpoint" target="_blank" rel="noopener">存储区域和上传域名的对应关系</a>：<br>
<a href="https://developer.qiniu.com/kodo/kb/3882/upload-problem-faq" target="_blank" rel="noopener">上传慢、上传失败等上传常见问题的处理方法</a></p>
<p>除了上传图片的基本功能，还可以<a href="https://developer.qiniu.com/dora/manual/1316/image-watermarking-processing-watermark" target="_blank" rel="noopener">添加水印</a>。<a href="https://blog.csdn.net/yongf2014/article/details/50016761" target="_blank" rel="noopener">制作图片水印以及缩略图</a></p>
<p>但是现在七牛云的测试域名30天就会回收不能使用了，需要<a href="https://portal.qiniu.com/cdn/domain/create?ref=developer.qiniu.com" target="_blank" rel="noopener">绑定自己的域名</a>，但是自己的域名必须<a href="https://developer.qiniu.com/af/kb/3987/how-to-make-website-and-inquires-the-police-put-on-record-information" target="_blank" rel="noopener">公安网备案</a>才可以使用。备案审核必须有相应的主机，光有域名不行。也就是说你只买有域名，同时没有买过（或租）服务器是无法审核的。所以不想买主机的童鞋可以用下面👇的方法，或者换其他的图床。</p>
<h3 id="github-做图床">github 做图床</h3>
<p>用github新建个库，<a href="https://github.com/CatherineLiyuankun/PictureBed" target="_blank" rel="noopener">PictureBed</a>专门放我的博客图好了。<br>
克隆到本地：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/CatherineLiyuankun/PictureBed.git</span><br></pre></td></tr></table></figure>
<p>然后添加图片。<br>
需要注意的是：到GitHub提取图片地址时，注意把blob改成 raw。<br>
例如github中一张图片的地址是：<a href="https://github.com/CatherineLiyuankun/PictureBed/blob/master/blog/base/alipay.png" target="_blank" rel="noopener">https://github.com/CatherineLiyuankun/PictureBed/blob/master/blog/base/alipay.png</a></p>
<p>在博客中图片使用时的地址是：<br>
<a href="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/base/alipay.png" target="_blank" rel="noopener">https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/base/alipay.png</a></p>
<h2 id="5-7-rss订阅">5.7 RSS订阅</h2>
<p>我的<a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/28f6a36b995656795f1a1ffc844d74964875f872" target="_blank" rel="noopener">commit</a></p>
<h3 id="安装插件">安装插件</h3>
<p>hexo博客有一个专门生成RSS xml文件的插件hexo-generator-feed。<br>
安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>
<h3 id="配置">配置</h3>
<p>_config.yml文件中添加如下内容</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="attr">plugins:</span></span><br><span class="line">    <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="comment">#Feed Atom</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="attr">    type:</span> <span class="string">atom</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="attr">    limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure>
<p>###生成RSS</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">➜  Hexo-theme-zilan git:(master) ✗ hexo g</span><br><span class="line">(node:88561) [DEP0061] DeprecationWarning: fs.SyncWriteStream is deprecated.</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded <span class="keyword">in</span> 437 ms</span><br><span class="line">INFO  Generated: category-sitemap.xml</span><br><span class="line">INFO  Generated: sitemap.xsl</span><br><span class="line">INFO  Generated: sitemap.xml</span><br><span class="line">INFO  Generated: tags/index.html</span><br><span class="line">INFO  Generated: about/index.html</span><br><span class="line">INFO  Generated: archive/index.html</span><br><span class="line">INFO  Generated: atom.xml     就是生成这个！</span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<p>可以订阅了，把https://catherineliyuankun.github.io/atom.xml输入到邮箱的订阅地址就行了！</p>
<h2 id="5-8-font-awesome-图标">5.8 font awesome 图标</h2>
<p><a href="http://www.bootcss.com/p/font-awesome/" target="_blank" rel="noopener">http://www.bootcss.com/p/font-awesome/</a></p>
<h2 id="5-9-添加email-to">5.9 添加email to</h2>
<p><a href="https://hexo.io/zh-cn/docs/helpers#mail-to" target="_blank" rel="noopener">官网教程</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%- mail_to(&apos;a@abc.com&apos;) %&gt;</span><br><span class="line">// &lt;a href=&quot;mailto:a@abc.com&quot; title=&quot;a@abc.com&quot;&gt;a@abc.com&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;%- mail_to(&apos;a@abc.com&apos;, &apos;Email&apos;) %&gt;</span><br><span class="line">// &lt;a href=&quot;mailto:a@abc.com&quot; title=&quot;Email&quot;&gt;Email&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<p>我的<a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/246e4e2c3b93426bbbeef1e347067da4e01b947e" target="_blank" rel="noopener">commit代码</a>，还用到了font awesome 图标。</p>
<h2 id="5-10-捐赠-赏">5.10 捐赠/赏</h2>
<p>我的<a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/b080910aeea650d72ab4932fd2673f885c05b21c" target="_blank" rel="noopener">commit代码</a><br>
在_config.yml里添加属性来控制是否显示捐赠按钮：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># donate</span></span><br><span class="line"><span class="attr">donate:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">donate-alipay:</span> <span class="string">img/alipay.png</span></span><br><span class="line"><span class="attr">donate-wechat:</span> <span class="string">img/wechatpay.png</span></span><br></pre></td></tr></table></figure>
<p>在zilan/layout/_partial下添加donate.ejs文件，用来放相应页面代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Donate --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span>(<span class="attr">config</span>['<span class="attr">donate</span>']) &#123; %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"donate-container"</span> <span class="attr">style</span>=<span class="string">"padding: 10px 0; margin: auto auto; width: 90%; text-align: center;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"rewardButton"</span> <span class="attr">disable</span>=<span class="string">"enable"</span> <span class="attr">onclick</span>=<span class="string">"var qr = document.getElementById('QR'); if (qr.style.display === 'none') &#123;qr.style.display='block';&#125; else &#123;qr.style.display='none'&#125;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span>Donate<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"QR"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wechat"</span> <span class="attr">style</span>=<span class="string">"display: inline-block"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"wechat_qr"</span> <span class="attr">src</span>=<span class="string">"&lt;%= config['donate-wechat']%&gt;"</span> <span class="attr">alt</span>=<span class="string">"WeChat Pay"</span> <span class="attr">style</span>=<span class="string">"width: 200px; height: 200px; text-align: center;"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;p&gt;Wechat&lt;/p&gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"alipay"</span> <span class="attr">style</span>=<span class="string">"display: inline-block"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"alipay_qr"</span> <span class="attr">src</span>=<span class="string">"&lt;%= config['donate-alipay']%&gt;"</span> <span class="attr">alt</span>=<span class="string">"Alipay"</span> <span class="attr">style</span>=<span class="string">"width: 200px; height: 200px; text-align: center;"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;p&gt;Alipay&lt;/p&gt; --&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure>
<p>在博客文章页面 themes/zilan/layout/post.ejs 里添加进捐献页面donate.ejs</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;%- partial(&apos;_partial/donate&apos;) %&gt;</span><br></pre></td></tr></table></figure>
<h2 id="5-11-利用-fancybox-添加图片放大预览查看功能">5.11 利用 Fancybox 添加图片放大预览查看功能</h2>
<p>基于donate功能，为二维码图片提供点击放大的功能。<br>
我的<a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/40e5b397a9d9cf5eb657c55867cd8999da3874c2" target="_blank" rel="noopener">commit代码</a></p>
<p>###在_config.yml里添加属性来控制是否使用fancybox按钮：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>###下载fancybox库<br>
点击下载最新的 <a href="https://github.com/fancyapps/fancybox/releases/tag/v3.4.0" target="_blank" rel="noopener">fancybox 库</a>， 解压缩至 /theme/material/source/fancybox/ 目录下，这里贴出目录结构：</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Git-Pages-Jekyll-Hexo-Build-your-own-blog/5_11-1.png" alt="5_11-1.png"></p>
<p>###在themes/zilan/source/js/下添加wrapImage.js, 用于在指定的 <img> 外裹一层 fancybox 所需要的属性</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Caption</span></span><br><span class="line">$(<span class="string">'.donate-container'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i</span>)</span>&#123;</span><br><span class="line">  $(<span class="keyword">this</span>).find(<span class="string">'img'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ($(<span class="keyword">this</span>).parent().hasClass(<span class="string">'fancybox'</span>)) <span class="keyword">return</span>;</span><br><span class="line">     <span class="keyword">var</span> alt = <span class="keyword">this</span>.alt;</span><br><span class="line">     <span class="keyword">if</span> (alt) $(<span class="keyword">this</span>).after(<span class="string">'&lt;span class="caption"&gt;'</span> + alt + <span class="string">'&lt;/span&gt;'</span>);</span><br><span class="line">     $(<span class="keyword">this</span>).wrap(<span class="string">'&lt;a href="'</span> + <span class="keyword">this</span>.src + <span class="string">'" title="'</span> + alt + <span class="string">'" class="fancybox"&gt;&lt;/a&gt;'</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">   $(<span class="keyword">this</span>).find(<span class="string">'.fancybox'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).attr(<span class="string">'rel'</span>, <span class="string">'article'</span> + i);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"> <span class="keyword">if</span> ($.fancybox)&#123;</span><br><span class="line">  $(<span class="string">'.fancybox'</span>).fancybox();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>###在themes/zilan/layout/layout.ejs下添加fancybox script, css</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;% if (theme.fancybox)&#123; %&gt;</span><br><span class="line">    &lt;%- css(&apos;/fancybox/jquery.fancybox&apos;) %&gt;</span><br><span class="line">    &lt;%- js(&apos;/fancybox/jquery.fancybox.pack&apos;) %&gt;</span><br><span class="line">    &lt;%- js(&apos;/js/wrapImage.js&apos;) %&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>
<p>成功！</p>
<h2 id="5-12-share-分享">5.12 Share 分享</h2>
<p>用的第三方组件<a href="https://github.com/revir/need-more-share2" target="_blank" rel="noopener">need-more-share2</a><br>
另外可以参考主题next添加need-more-share2的<a href="https://github.com/iissnan/hexo-theme-next/pull/1913/files" target="_blank" rel="noopener">pull request</a></p>
<p>fix bug: <a href="https://github.com/iissnan/hexo-theme-next/pull/1976" target="_blank" rel="noopener">微信分享图片无法loading出来</a><br>
source\lib\needsharebutton\needsharebutton.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> imgSrc = <span class="string">"https://api.qinco.me/api/qr?size=400&amp;content="</span> + <span class="built_in">encodeURIComponent</span>(myoptions.url);</span><br></pre></td></tr></table></figure>
<p>改为</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> imgSrc = <span class="string">"http://tool.oschina.net/action/qrcode/generate?output=image/png&amp;error=L&amp;type=0&amp;margin=2&amp;size=4&amp;data="</span> + <span class="built_in">encodeURIComponent</span>(myoptions.url);</span><br></pre></td></tr></table></figure>
<p>我的<a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/3c6ca2bdef522acbc1d57bb252868481f99620b3" target="_blank" rel="noopener">commit</a></p>
<h2 id="5-13-版权声明">5.13 版权声明</h2>
<p>以zilan 主题来举例，”your_theme“ is ”zilan“。<br>
对应commit 代码： <a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/21b7d216e43e494c3757b6764198d214b021943f" target="_blank" rel="noopener">[copyright][post] add copyright</a></p>
<h3 id="5-13-1-html-内容">5.13.1 Html 内容</h3>
<p>在your_theme\layout_partial\post下面，创建一个名为copyright.ejs的文件，在里面填写</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">!</span> <span class="attr">--</span> 添加版权信息 <span class="attr">--</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"article-footer-copyright"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>本文标题: <span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- page.path %&gt;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"&lt;%= page.title %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">page.title</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>本文链接: <span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%- config.root %&gt;&lt;%- page.path %&gt;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"&lt;%= page.title %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">%-</span> <span class="attr">config.url</span> %&gt;</span>/<span class="tag">&lt;<span class="name">%-</span> <span class="attr">page.path</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span>本文由<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&lt;%= config.root %&gt;index.html"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">title</span>=<span class="string">"&lt;%= config.author %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">%=</span> <span class="attr">config.author</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>创作和发表,采用<span class="tag">&lt;<span class="name">b</span>&gt;</span>BY<span class="tag">&lt;/<span class="name">b</span>&gt;</span>-<span class="tag">&lt;<span class="name">b</span>&gt;</span>NC<span class="tag">&lt;/<span class="name">b</span>&gt;</span>-<span class="tag">&lt;<span class="name">b</span>&gt;</span>SA<span class="tag">&lt;/<span class="name">b</span>&gt;</span>国际许可协议进行许可,转载请注明作者及出处。<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="5-13-2-html-内容添加到post文尾">5.13.2 Html 内容添加到post文尾</h3>
<p>在your_theme/layout/post.ejs 的&lt;%- page.content %&gt;后面添加</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">&lt;<span class="meta">%</span>- partial<span class="comment">('_partial/post/copyright')</span> <span class="meta">%</span>&gt;</span><br></pre></td></tr></table></figure>
<h3 id="5-13-3-修改样式css">5.13.3 修改样式css</h3>
<p>在/zilan/source/css/下创建 copyright.styl，并在head.ejs里引用   &lt;%- css(‘css/copyright’)%&gt;</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.article-footer-copyright</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2em</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: .<span class="number">5em</span> <span class="number">1em</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">3px</span> solid <span class="number">#0085a1</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f9f9f9</span>;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="5-14-代码块复制功能">5.14 代码块复制功能</h2>
<p>参考文章： <a href="https://qiming.info/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8A%A0%E5%85%A5%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD/" target="_blank" rel="noopener">Hexo博客中加入代码块复制功能</a></p>
<h2 id="5-15-搜索功能">5.15 搜索功能</h2>
<p>借鉴了hexo-theme-next的<a href="http://theme-next.iissnan.com/third-party-services.html#local-search" target="_blank" rel="noopener">local-search</a>，使用的<a href="https://github.com/theme-next/hexo-generator-searchdb" target="_blank" rel="noopener">hexo-generator-searchdb</a>。<br>
GitHub commit： <a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/6b672a20aa23101bf0b17f7d790c1f5ad8422843" target="_blank" rel="noopener">Add local search function</a>。</p>
<h3 id="5-15-1-install-hexo-generator-searchdb">5.15.1 install hexo-generator-searchdb</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>或者在Hexo-theme-zilan/package.json文件中增加：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">"dependencies": &#123;</span><br><span class="line">  "hexo-generator-searchdb": "^1.1.0",</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<h3 id="5-15-2-修改-config-yml">5.15.2 修改_config.yml</h3>
<p>/Hexo-theme-zilan/_config.yml中增加设置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Search hexo-generator-searchdb  https://github.com/theme-next/hexo-generator-search</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">  format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">10000</span></span><br><span class="line"><span class="attr">  content:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h3 id="5-15-3-write-a-search-view">5.15.3 write a search view.</h3>
<p>This is the place for displaying a search form and search results ;</p>
<h4 id="search-icon-界面">search icon 界面</h4>
<p>nav bar上添加search icon，在“岚”后面。<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Git-Pages-Jekyll-Hexo-Build-your-own-blog/sarch%20icon%20view.png" alt="search icon 界面"><br>
点击触发search popup显示。themes/zilan/layout/_partial/nav.ejs 添加：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!-- Search --&gt;</span><br><span class="line">&lt;% <span class="keyword">var</span> hasSearch = theme.swiftype_key || theme.algolia_search.enable || theme.tinysou_Key || theme.local_search.enable; %&gt;</span><br><span class="line">&lt;% <span class="keyword">if</span> (hasSearch) &#123;%&gt;</span><br><span class="line">    &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"menu-item menu-item-search"</span>&gt;</span><br><span class="line">    &lt;% <span class="keyword">if</span> (theme.swiftype_key) &#123; %&gt;</span><br><span class="line">        &lt;a href=<span class="string">"javascript:;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"st-search-show-outputs"</span>&gt;</span><br><span class="line">    &lt;% &#125; <span class="keyword">else</span> <span class="keyword">if</span> (theme.local_search.enable || theme.algolia_search.enable) &#123; %&gt;</span><br><span class="line">        &lt;a href=<span class="string">"javascript:;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"popup-trigger"</span>&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">        &lt;% <span class="keyword">if</span> (theme.menu_icons.enable) &#123; %&gt;</span><br><span class="line">            &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"menu-item-icon fa fa-search fa-fw"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span> <span class="xml"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">    &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">&lt;% &#125; %&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="search-popup-界面">search popup 界面</h4>
<p>themes/zilan/layout/layout.ejs 文件中增加search popup 界面，用来输入search string和search 结果。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!-- Search popup--&gt;</span><br><span class="line">&lt;% <span class="keyword">var</span> hasSearch = theme.swiftype_key || theme.algolia_search.enable || theme.tinysou_Key || theme.local_search.enable; %&gt;</span><br><span class="line">&lt;% <span class="keyword">if</span> (hasSearch) &#123;%&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"site-search"</span>&gt;</span><br><span class="line">  &lt;% include ./_partial/search.ejs %&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;% &#125; %&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Git-Pages-Jekyll-Hexo-Build-your-own-blog/search%20popup%20view.png" alt="search popup 界面"></p>
<h3 id="5-15-4-write-a-search-script">5.15.4 write a search script.</h3>
<p>This script tells the browser how to grab search data and filter out contents what we’re searching;<br>
添加文件：<br>
<a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/blob/master/themes/zilan/layout/_third-party/search/localsearch.ejs" target="_blank" rel="noopener">themes/zilan/layout/_third-party/search/localsearch.ejs</a></p>
<h3 id="5-15-5-tell-hexo-to-connect-the-above-two-part">5.15.5 tell hexo to connect the above two part.</h3>
<p>themes/zilan/layout/layout.ejs</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;!-- Search --&gt;</span><br><span class="line">&lt;% include ./_third-party/search/index.ejs %&gt;</span><br></pre></td></tr></table></figure>
<p>另外修了3个bug：</p>
<ol>
<li>Fix Bug: <a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/6b672a20aa23101bf0b17f7d790c1f5ad8422843#diff-6f479bf13d3e26f8efd29d7b534db439L53" target="_blank" rel="noopener">ajax xml parser error</a></li>
<li>Fix Bug: <a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/6b672a20aa23101bf0b17f7d790c1f5ad8422843#diff-6f479bf13d3e26f8efd29d7b534db439R307" target="_blank" rel="noopener">input is null, so add /zilan/layout/_partial/search/localsearch.ejs inside “site-search”</a></li>
<li>Fix Bug: <a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/6b672a20aa23101bf0b17f7d790c1f5ad8422843#diff-6f479bf13d3e26f8efd29d7b534db439R302" target="_blank" rel="noopener">click close icon not work</a></li>
</ol>
<hr>
<h2 id="5-16-添加站内搜索">5.16 添加站内搜索</h2>
<p>添加<a href="https://ziyuan.baidu.com/cse/wiki/introduce" target="_blank" rel="noopener">百度站内搜索</a>，点击现在使用-&gt;新建搜索引擎-&gt;查看代码，将代码里的id值复制，打开_config.xml，添加配置。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">baidu_search:</span>     <span class="comment">## http://zn.baidu.com/</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  id:</span> <span class="string">"5678674467891171234"</span> <span class="comment">## for your baidu search id</span></span><br><span class="line"><span class="attr">  site:</span> <span class="attr">http://zhannei.baidu.com/cse/search</span> <span class="comment">## your can change to your site instead of the default site</span></span><br></pre></td></tr></table></figure>
<h1 id="6-遇到的坑">6 遇到的坑</h1>
<h2 id="目录-无法跳转">目录 无法跳转</h2>
<p>href=&quot;#undefined&quot;<br>
可以看我这个commit是怎么修改的 : <a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/3d1a7c1dbdf332ed9922e8d65f130e4c80237671" target="_blank" rel="noopener">fix bug:  the content href=&quot;#undefined&quot;</a></p>
<p>参考这两个链接：<br>
1 <a href="https://github.com/Haojen/hexo-theme-Anisina/issues/34" target="_blank" rel="noopener">_config.yml的markdown-it设置里面加上</a>，</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">markdown:</span></span><br><span class="line"><span class="attr">  anchors:</span></span><br><span class="line"><span class="attr">    level:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">    permalinkSymbol:</span> <span class="string">''</span></span><br></pre></td></tr></table></figure>
<p>2 <a href="https://github.com/ppoffice/hexo-theme-icarus/issues/286" target="_blank" rel="noopener">package.json文件中删除&quot;hexo-toc&quot;</a></p>
<h2 id="disqus用username无法显示">Disqus用username无法显示</h2>
<p>这个在<a href="../#disqus">“评论”</a>里已经说了.</p>
<h2 id="category-分类页面分页只显示10个文章">Category 分类页面分页只显示10个文章</h2>
<p>虽然页面空间很大，但只显示10个文章列表就分页了：<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Git-Pages-Jekyll-Hexo-Build-your-own-blog/category%E5%88%86%E9%A1%B5%E6%AF%8F%E9%A1%B5%E6%95%B0%E9%87%8F.png" alt="10个文章列表就分页"></p>
<p>参考了别人的文章： <a href="http://www.yuzhewo.com/2015/11/21/Hexo%E7%A8%8B%E5%BA%8Farchive%E9%A1%B5%E9%9D%A2%E6%95%B0%E9%87%8F%E8%AE%BE%E7%BD%AE/" target="_blank" rel="noopener">Hexo程序archive页面数量设置</a><br>
但试了试不起作用。。。<br>
这三个插件我之前就装有，可以在package.json里查看：<br>
“hexo-generator-archive”: “^0.1.4”,<br>
“hexo-generator-category”: “^0.1.3”,<br>
“hexo-generator-feed”: “^1.2.2”,<br>
“hexo-generator-index”: “^0.2.0”,</p>
<p>_config.yml文件中添加配置也加了：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">11</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">archives</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 主页每页显示文章数</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line"><span class="attr">    per_page:</span> <span class="number">12</span></span><br><span class="line"><span class="comment">## archive分页每页显示文章数</span></span><br><span class="line"><span class="attr">archive_generator:</span></span><br><span class="line"><span class="attr">  per_page:</span> <span class="number">15</span></span><br><span class="line"><span class="attr">  yearly:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  monthly:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  daily:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## tag分页每页显示文章数</span></span><br><span class="line"><span class="attr">tag_generator:</span></span><br><span class="line"><span class="attr">    per_page:</span> <span class="number">16</span></span><br><span class="line"><span class="comment">## category分页每页显示文章数</span></span><br><span class="line"><span class="attr">category_generator:</span> </span><br><span class="line"><span class="attr">    per_page:</span> <span class="number">30</span></span><br></pre></td></tr></table></figure>
<p>要说唯一不同的是，我之前的pagination_dir: archives，而查阅的其他文章中都是pagination_dir: page。<br>
但我改成page也还是不起作用。。。。</p>
<p>等我发布（hexo deploy）出来后发现，其实除了tag_generator 和 archive_generator 没有成功以外，其他的设置都成功了，可能是本地模式（hexo server）下没有更新。</p>
<p>整个修改过程参考commit： <a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/4607f6174e0615bf5bcc4bdada7715c6934b0d29" target="_blank" rel="noopener">category 分页样式修改+分页每页数量</a></p>
<h2 id="error-eisdir-illegal-operation-on-a-directory">ERROR EISDIR: illegal operation on a directory</h2>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  Hexo-theme-zilan git:(master) ✗ hexo g</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded <span class="keyword">in</span> 564 ms</span><br><span class="line">ERROR EISDIR: illegal operation on a directory, <span class="built_in">read</span></span><br><span class="line">Error: EISDIR: illegal operation on a directory, <span class="built_in">read</span></span><br></pre></td></tr></table></figure>
<p>查了下貌似和npm有关，但我试了试网上的方法并不起作用，但是这个错也不影响我的博客功能。暂且放下，找到方法了再更新。</p>
<h2 id="其他小的修改">其他小的修改</h2>
<p>页面内容width修改，在大屏幕（&gt;1800px 和&gt; 2400px）下，页面内容更宽。<br>
commit：t<a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan/commit/64a23dad122b7cf59039d754125fc59307c6a9f1" target="_blank" rel="noopener">he .container with responsive when screen width is larger than 1800px</a></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">2400px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">2070px</span> <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">media</span> (min-width: <span class="number">1800px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1770px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h1 id="参考文章：">参考文章：</h1>
<ul>
<li>
<p>阮一峰的文章 <a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="noopener">搭建一个免费的，无限流量的Blog----github Pages和Jekyll入门</a></p>
</li>
<li>
<p>这篇适合懒得学git的小白，完全把作者的模板拷贝过来改改参数： <a href="https://www.jianshu.com/p/e68fba58f75c" target="_blank" rel="noopener">利用 GitHub Pages 快速搭建个人博客</a></p>
</li>
<li>
<p><a href="https://linghucong.js.org/2016/04/15/2016-04-15-hexo-github-pages-blog/" target="_blank" rel="noopener">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></p>
</li>
<li>
<p><a href="https://www.jianshu.com/p/ec7953b9e5ab" target="_blank" rel="noopener">Github Pages 搭建笔记</a></p>
</li>
<li>
<p><a href="https://www.techiediaries.com/jekyll-hugo-hexo/" target="_blank" rel="noopener">How to Choose the Right Static Generator: Jekyll vs. Hugo vs. Hexo</a></p>
</li>
<li>
<p><a href="https://ryanluoxu.github.io/2017/11/27/Hexo-Next-%E6%B7%BB%E5%8A%A0-Gitment-%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/" target="_blank" rel="noopener">Hexo-Next 添加 Gitment 评论系统</a></p>
</li>
<li>
<p><a href="https://io-oi.me/tech/hexo-next-optimization/" target="_blank" rel="noopener">打造个性超赞博客 Hexo + NexT + GitHub Pages 的超深度优化</a></p>
</li>
<li>
<p><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">NexT 主题使用</a></p>
</li>
<li>
<p><a href="http://www.ehcoo.com/seo.html" target="_blank" rel="noopener">【搜索优化】Hexo-next百度和谷歌搜索优化</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title>Installing MySQL on Mac</title>
    <url>/Installing-MySQL-on-Mac.html</url>
    <content><![CDATA[<p>This short tutorial shows how to install MySQL on a Mac using Homebrew and how to verify it is running using Sequel Pro.</p>
<h1 id="install-homebrew">Install Homebrew</h1>
<p><a href="https://brew.sh/" target="_blank" rel="noopener">Homebrew</a> is a package manager for Mac and serves a similar purpose to apt-get in Linux.</p>
<p>If you already have Homebrew, you can skip this section. If you are not sure, run the following command.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> brew</span><br></pre></td></tr></table></figure>
<p>If you have Homebrew it will print something similar to /usr/local/bin/brew. If you do not have Homebrew it will print nothing.</p>
<p>Run the following command in a terminal window to install Homebrew.</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure>
<h1 id="install-mysql">Install MySQL</h1>
<p>Update Homebrew to ensure you get the latest packages</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew update</span><br></pre></td></tr></table></figure>
<p>Run this command to install MySQL</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install mysql</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/Cellar/mysql/8.0.12/bin/mysqld --initialize-insecure --user=liyuankun --based</span><br><span class="line">==&gt; Caveats</span><br><span class="line">We<span class="string">'ve installed your MySQL database without a root password. To secure it run:</span></span><br><span class="line"><span class="string">    mysql_secure_installation</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MySQL is configured to only allow connections from localhost by default</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">To connect run:</span></span><br><span class="line"><span class="string">    mysql -uroot</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">To have launchd start mysql now and restart at login:</span></span><br><span class="line"><span class="string">  brew services start mysql</span></span><br><span class="line"><span class="string">Or, if you don'</span>t want/need a background service you can just run:</span><br><span class="line">  mysql.server start</span><br><span class="line">==&gt; Summary</span><br><span class="line">🍺  /usr/<span class="built_in">local</span>/Cellar/mysql/8.0.12: 255 files, 233.0MB</span><br><span class="line">==&gt; Caveats</span><br><span class="line">==&gt; openssl</span><br><span class="line">A CA file has been bootstrapped using certificates from the SystemRoots</span><br><span class="line">keychain. To add additional certificates (e.g. the certificates added <span class="keyword">in</span></span><br><span class="line">the System keychain), place .pem files <span class="keyword">in</span></span><br><span class="line">  /usr/<span class="built_in">local</span>/etc/openssl/certs</span><br><span class="line"></span><br><span class="line">and run</span><br><span class="line">  /usr/<span class="built_in">local</span>/opt/openssl/bin/c_rehash</span><br><span class="line"></span><br><span class="line">openssl is keg-only, <span class="built_in">which</span> means it was not symlinked into /usr/<span class="built_in">local</span>,</span><br><span class="line">because Apple has deprecated use of OpenSSL <span class="keyword">in</span> favor of its own TLS and crypto libraries.</span><br><span class="line"></span><br><span class="line">If you need to have openssl first <span class="keyword">in</span> your PATH run:</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">'export PATH="/usr/local/opt/openssl/bin:$PATH"'</span> &gt;&gt; ~/.zshrc</span><br><span class="line"></span><br><span class="line">For compilers to find openssl you may need to <span class="built_in">set</span>:</span><br><span class="line">  <span class="built_in">export</span> LDFLAGS=<span class="string">"-L/usr/local/opt/openssl/lib"</span></span><br><span class="line">  <span class="built_in">export</span> CPPFLAGS=<span class="string">"-I/usr/local/opt/openssl/include"</span></span><br><span class="line"></span><br><span class="line">For pkg-config to find openssl you may need to <span class="built_in">set</span>:</span><br><span class="line">  <span class="built_in">export</span> PKG_CONFIG_PATH=<span class="string">"/usr/local/opt/openssl/lib/pkgconfig"</span></span><br><span class="line"></span><br><span class="line">==&gt; mysql</span><br><span class="line">We<span class="string">'ve installed your MySQL database without a root password. To secure it run:</span></span><br><span class="line"><span class="string">    mysql_secure_installation</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MySQL is configured to only allow connections from localhost by default</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">To connect run:</span></span><br><span class="line"><span class="string">    mysql -uroot</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">To have launchd start mysql now and restart at login:</span></span><br><span class="line"><span class="string">  brew services start mysql</span></span><br><span class="line"><span class="string">Or, if you don'</span>t want/need a background service you can just run:</span><br><span class="line">  mysql.server start</span><br></pre></td></tr></table></figure>
<h1 id="config-mysql">Config MySQL</h1>
<h2 id="command-not-found">command not found</h2>
<p>Type “mysql” command, you will meet the error:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -V</span><br><span class="line">zsh: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">sudo vim .bash_profile</span><br></pre></td></tr></table></figure>
<p>Insert for .bash_profile</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">export PATH=$&#123;PATH&#125;:/usr/local/Cellar/mysql/<span class="number">8.0</span>.<span class="number">12</span>/bin</span><br></pre></td></tr></table></figure>
<p>Press “esc” and input “:wq” to save and quite.</p>
<p>Then</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>
<p>Then config zsh</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.zshrc</span><br></pre></td></tr></table></figure>
<p>接着我执行 vim ~/.zshrc</p>
<p>and insert <em>source ~/.bash_profile</em></p>
<p>并在其中插入 <em>source ~/.bash_profile</em></p>
<p>(纠结，我是一行英文一行中文的写呢？还是中英文分开成两篇呢？)</p>
<h2 id="error-2002-hy000">ERROR 2002 (HY000):</h2>
<p>Type “mysql” command, you will meet the error:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -V</span><br><span class="line">ERROR 2002 (HY000): Can<span class="string">'t connect to local MySQL server through socket '</span>/tmp/mysql.sock<span class="string">' (2)</span></span><br></pre></td></tr></table></figure>
<p>The reason is that you’ll need to start MySQL before you can use the mysql command on your terminal.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew services start mysql</span><br><span class="line">==&gt; Successfully started `mysql` (label: homebrew.mxcl.mysql)</span><br></pre></td></tr></table></figure>
<p>Then mysql work</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -V</span><br><span class="line">mysql  Ver 8.0.12 <span class="keyword">for</span> osx10.13 on x86_64 (Homebrew)</span><br></pre></td></tr></table></figure>
<h2 id="set-password">Set password</h2>
<p>Set a rudimentary password for MySQL locally, there is no need to worry about security because it will only be accessible from your machine (I used “administrator”).</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysqladmin -u root password <span class="string">'administrator'</span></span><br></pre></td></tr></table></figure>
<p>Once installed and running, MySQL is accessible to any app running locally on your machine.<br>
Then you can use the password you set previously to login MySQl：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">  //input the password you <span class="built_in">set</span> previously <span class="string">'administrator'</span></span><br></pre></td></tr></table></figure>
<p>You can use the command to show the databases.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW DATABASES;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.03 sec)</span><br></pre></td></tr></table></figure>
<h1 id="verify-mysql-is-running-by-sequel-pro">Verify MySQL is running by Sequel Pro</h1>
<p>I use <a href="https://www.sequelpro.com/" target="_blank" rel="noopener">Sequel Pro</a> to manage MySQL because it has a pretty great UI. In case you are wondering, I am not actually affiliated with it in anyway.<br>
<a href="https://sequelpro.com/download#auto-start" target="_blank" rel="noopener">Download and install Sequel Pro</a> and open it. The database to connect to is on localhost so set “host” to “127.0.0.1”. Username is “root” and password the same as chosen in the previous step, for me that’s “administrator”.</p>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Installing-MySQL-on-Mac/SequelPro-setting.png" alt="Setting"></p>
<p>If the connection does not work, make sure you modified your password correctly in the previous step and that the mysql service is still running.</p>
<h2 id="error-1">Error 1</h2>
<p>If you meet this error:<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Installing-MySQL-on-Mac/SequelPro-connectionerror2.png" alt="connection error"></p>
<p>Find out which port MySQL is running on, run the following in MySql client:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW GLOBAL VARIABLES LIKE <span class="string">'PORT'</span>;</span><br><span class="line">+---------------+-------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+---------------+-------+</span><br><span class="line">| port          | 3306  |</span><br><span class="line">+---------------+-------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.05 sec)</span><br></pre></td></tr></table></figure>
<p>Make sure that you input the correct port number (3306 or 3307).</p>
<h2 id="error-2">Error 2</h2>
<p>If you meet this error:<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Installing-MySQL-on-Mac/SequelPro-connectionerror.png" alt="connection error"></p>
<h3 id="error-2-set-use-legacy-password">Error 2 - set ‘Use legacy password’</h3>
<p>For MAC OS</p>
<ol>
<li>Open MySQL from System Preferences &gt; MySQL &gt; Initialize Database &gt;</li>
<li>Type your new password.</li>
<li>Choose ‘Use legacy password’</li>
<li>Start the Server again.</li>
<li>Now connect the MySQL Workbench<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Installing-MySQL-on-Mac/SystemPreferences-MySQL.png" alt="System Preferences MySQL"></li>
</ol>
<h3 id="error-2-install-mysql-in-system-preferences">Error 2 - install MySQL in System Preferences</h3>
<p>If you don’t have MySQL in System Preferences,<br>
you can set up MySQL in your System Preferences by following this: <a href="dev.mysql.com/doc/refman/5.7/en/osx-installation-prefpane.html">dev.mysql.com/doc/refman/5.7/en/osx-installation-prefpane.html</a><br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Installing-MySQL-on-Mac/install-MySQL-Preference-Pane2.png" alt="install-MySQL-Preference-Pane"></p>
<p>We can not install the MySQL Server again, because we already install it by brew. But you have to config the MySQL Preference Pane.<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Installing-MySQL-on-Mac/install-MySQL-Preference-Pane1.png" alt="install-MySQL-Preference-Pane"></p>
<hr>
<p>If we install the MySQL Server again, the MySQL Preference Pane config:<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Installing-MySQL-on-Mac/installed-mysql.png" alt="installed-mysql config"><br>
modify .bash_profile</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">export PATH=$&#123;PATH&#125;:/usr/local/mysql/bin</span><br></pre></td></tr></table></figure>
<p>Press “esc” and input “:wq” to save and quite.</p>
<p>Then</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure>
<hr>
<p>Remeber to choose ‘Use legacy password’:<br>
<img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/Installing-MySQL-on-Mac/install-MySQL-Preference-Pane1.png" alt="install-MySQL-Preference-Pane"></p>
<p>But i still do not solve it yet.</p>
<p>Connect and you will be presented with an empty MySQL.<br>
At this point, you might want to add your first database. After successfully connecting, click Database &gt; Add Database and name it, I chose the name “node_shoppingcart” (the MySQL naming convention is snake_case).</p>
<p>MySQL is ready to go!<br>
If you are interested in using MySQL with Node.js, check out the setting up Node.js with a mysql tutorial.</p>
<p>Reference links:</p>
<ul>
<li>
<p><a href="https://stackoverflow.com/questions/15450091/for-a-newbie-error-2002-hy000-cant-connect-to-local-mysql-server-through-so" target="_blank" rel="noopener">For a newbie: ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/tmp/mysql.sock’</a></p>
</li>
<li>
<p><a href="https://stackoverflow.com/questions/49194719/authentication-plugin-caching-sha2-password-cannot-be-loaded" target="_blank" rel="noopener">Authentication plugin ‘caching_sha2_password’ cannot be loaded</a></p>
</li>
<li>
<p><a href="https://stackoverflow.com/questions/26344795/cannot-connect-to-mysql-workbench-on-mac-cant-connect-to-mysql-server-on-127" target="_blank" rel="noopener">Cannot connect to MySQL Workbench on mac. Can’t connect to MySQL server on ‘127.0.0.1’ (61)	Mac Macintosh</a></p>
</li>
<li>
<p><a href="https://hackernoon.com/setting-up-node-js-with-a-database-part-1-3f2461bdd77f" target="_blank" rel="noopener">Tutorial: Setting up Node.js with a database</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Database</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>[Hexo] Theme Zilan</title>
    <url>/hexo-theme-zilan.html</url>
    <content><![CDATA[<blockquote>
<p>Ported Theme of <a href="https://github.com/Huxpro/huxpro.github.io" target="_blank" rel="noopener">Hux Blog</a>, Thank <a href="https://github.com/Huxpro" target="_blank" rel="noopener">Huxpro</a> for designing such a flawless theme.</p>
<p>This Zilan theme created by <a href="https://catherineliyuankun.github.io/">YuankunLi</a> modified from the original Porter <a href="http://kaijun.rocks/hexo-theme-huxblog/" target="_blank" rel="noopener">Kaijun</a> and <a href="http://beantech.org/" target="_blank" rel="noopener">YuHsuan</a></p>
</blockquote>
<h1 id="demo-live-demo">Demo <a href="https://catherineliyuankun.github.io/">Live Demo</a></h1>
<hr>
<p><a href="https://catherineliyuankun.github.io/">Zilan Blog</a></p>
<h1 id="usage">Usage</h1>
<hr>
<p>I publish the whole project for your convenience, so you can just follow the instruction down below, then you can easily customiz your own blog!</p>
<p>Let’s begin!!!</p>
<h2 id="init">Init</h2>
<hr>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/catherineliyuankun/hexo-theme-zilan.git ./hexo-zilan</span><br><span class="line"><span class="built_in">cd</span> hexo-zilan</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>
<h2 id="modify">Modify</h2>
<hr>
<p>Modify <code>_config.yml</code> file with your own info.<br>
Especially the section:</p>
<h3 id="deployment">Deployment</h3>
<p>Replace to your own repo!</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/&lt;yourAccount&gt;/&lt;repo&gt;</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">&lt;your-branch&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="sidebar-settings">Sidebar settings</h3>
<p>Copy your avatar image to <code>&lt;root&gt;/img/</code> and modify the <code>_config.yml</code>:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sidebar:</span> <span class="literal">true</span>    <span class="comment"># whether or not using Sidebar.</span></span><br><span class="line"><span class="attr">sidebar-about-description:</span> <span class="string">"&lt;your description&gt;"</span></span><br><span class="line"><span class="attr">sidebar-avatar:</span> <span class="string">img/&lt;your</span> <span class="string">avatar</span> <span class="string">path&gt;</span></span><br></pre></td></tr></table></figure>
<p>and activate your personal widget you like</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">widgets:</span>         <span class="comment"># here are widget you can use, you can comment out</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">featured-tags</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">short-about</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">recent-posts</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">friends-blog</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">archive</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">category</span></span><br></pre></td></tr></table></figure>
<p>if you want to add sidebar widget, please add at <code>layout/_widget</code>.</p>
<h3 id="signature-setup">Signature Setup</h3>
<p>Copy your signature image to <code>&lt;root&gt;/img/signature</code> and modify the <code>_config.yml</code>:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">signature:</span> <span class="literal">true</span>   <span class="comment"># show signature</span></span><br><span class="line"><span class="attr">signature-img:</span> <span class="string">img/signature/&lt;your-signature-ID&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="go-to-top-icon-setup">Go to top icon Setup</h3>
<p>My icon is using iron man, you can change to your own icon at <code>css/image</code>.</p>
<h3 id="post-tag-and-category">Post tag and category</h3>
<p>You can decide to show post tags and categories or not.</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">home_posts_tag:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">home_posts_category:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/hexotheme/home_posts_tag-true.png" alt="home_posts_tag-true"></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">home_posts_tag:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">home_posts_category:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/hexotheme/home_posts_tag-false.png" alt="home_posts_tag-false"></p>
<h3 id="page-header-category">Page Header category</h3>
<p>You can decide to show page_header categories or not.</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">page_header_category:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/hexotheme/page_header_category-true.png" alt="page_header_category-true"></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">page_header_category:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p><img src="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/post/hexotheme/page_header_category-false.png" alt="page_header_category-false"></p>
<h3 id="forkme">forkme</h3>
<p>forkme: false # Fork me on GitHub<br>
forkme-url: <a href="https://github.com/CatherineLiyuankun/Hexo-theme-zilan" target="_blank" rel="noopener">https://github.com/CatherineLiyuankun/Hexo-theme-zilan</a> # GitHub url</p>
<h3 id="donate">donate</h3>
<p>donate: true<br>
donate-alipay: <a href="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/base/alipay.png" target="_blank" rel="noopener">https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/base/alipay.png</a><br>
donate-wechat: <a href="https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/base/wechatpay.png" target="_blank" rel="noopener">https://github.com/CatherineLiyuankun/PictureBed/raw/master/blog/base/wechatpay.png</a></p>
<h3 id="markdown-render">Markdown render</h3>
<p>My markdown render engine plugin is <a href="https://github.com/celsomiranda/hexo-renderer-markdown-it" target="_blank" rel="noopener">hexo-renderer-markdown-it</a>.</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Markdown-it config</span></span><br><span class="line"><span class="comment">## Docs: https://github.com/celsomiranda/hexo-renderer-markdown-it/wiki</span></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line"><span class="attr">  render:</span></span><br><span class="line"><span class="attr">    html:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">    breaks:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    linkify:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    typographer:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">    quotes:</span> <span class="string">'“”‘’'</span></span><br></pre></td></tr></table></figure>
<p>and if you want to change the header anchor ‘ℒ’, you can go to <code>layout/post.ejs</code> to change it.</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">async</span>(<span class="string">"https://cdn.bootcss.com/anchor-js/1.1.1/anchor.min.js"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        anchors.options = &#123;</span><br><span class="line">          visible: <span class="string">'hover'</span>,</span><br><span class="line">          placement: <span class="string">'left'</span>,</span><br><span class="line">          icon: ℒ <span class="comment">// this is the header anchor "unicode" icon</span></span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure>
<h2 id="hexo-basics">Hexo Basics</h2>
<hr>
<p>Some hexo command:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new post <span class="string">"&lt;post name&gt;"</span> <span class="comment"># you can change post to another layout if you want</span></span><br><span class="line">hexo clean &amp;&amp; hexo generate <span class="comment"># generate the static file</span></span><br><span class="line">hexo server <span class="comment"># run hexo in local environment</span></span><br><span class="line">hexo deploy <span class="comment"># hexo will push the static files automatically into the specific branch(gh-pages) of your repo!</span></span><br></pre></td></tr></table></figure>
<h1 id="start-your-own-blog">Start your own blog!</h1>
<hr>
<!-- Place this tag in your head or just before your close body tag. -->
<script async defer src="https://buttons.github.io/buttons.js"></script>
<!-- Place this tag where you want the button to render. -->
<p>Please <a class="github-button" href="https://github.com/catherineliyuankun/hexo-theme-zilan.git" data-icon="octicon-star" aria-label="Star Li,Yuankun/hexo-theme-zilan on GitHub" target="_blank" rel="noopener">Star</a> this Project if you like it! <a class="github-button" href="https://github.com/CatherineLiyuankun" aria-label="Follow @CatherineLiyuankun on GitHub" target="_blank" rel="noopener">Follow</a> would also be appreciated!<br>
Peace!</p>
]]></content>
      <categories>
        <category>TECH</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
</search>
